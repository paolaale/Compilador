program vm23 :

    main {

        var int a[3][3], b[3][3], c[3][3];

        funct void fillMatrix() {
            var int i, j;

            from (i = 0) until (i < 3) do {

                from (j = 0) until (j < 3) do {

                    read(a[i][j]);

                    j = j + 1;
                }

                i = i + 1;
            }
        }

        funct void fillMatrix2() {
            var int i, j;

            from (i = 0) until (i < 3) do {

                from (j = 0) until (j < 3) do {

                    read(b[i][j]);

                    j = j + 1;
                }

                i = i + 1;
            }
        }

        funct void multiplyMatrix(int colA, int filA, int colB, int filB) {

            var int i, j, k;

            if (colA == filB) then {

                from (i = 0) until (i < filA) do {

                    from (j = 0) until (j < colB) do {

                        from (k = 0) until (k < colA) do {

                            c[i][j] = c[i][j] + a[i][k] * b[k][j];
                            k = k + 1;
                        }

                        j = j + 1;
                    }

                    i = i + 1;
                }
            }
        }

        funct void printMatrix() {

            var int i, j;

            from (i = 0) until (i < 3) do {

                from (j = 0) until (j < 3) do {

                    write(c[i][j]);

                    j = j + 1;
                }

                i = i + 1;
            }
        }

        init {
            call fillMatrix();
            call fillMatrix2();
            call multiplyMatrix(3, 3, 3, 3);
            
        }
    }

end