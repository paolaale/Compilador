
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN CALL CHAR CLASS COMMA CTECHAR CTEF CTEI CTESTRING DIVIDE DO ELIF ELSE END EQUAL FLOAT FROM FUNCT ID IF INHERITS INT LBRACE LBRACKET LPAREN MAIN MAIN_CLASS MINUS OR PLUS POINT PROGRAM RBRACE RBRACKET READ RELOP RETURN RPAREN SEMICOLON THEN TIMES TWOPOINTS UNTIL VAR VOID WHILE WRITEprogram : PROGRAM ID TWOPOINTS program_classes MAIN_CLASS LBRACE program_body main RBRACE ENDprogram_classes : classes \n                        | emptyprogram_body : program_body_vars program_body_functprogram_body_vars : dec_vars\n                        | emptyprogram_body_funct : functions \n                        | emptydec_vars : VAR dec_vars_auxdec_vars_aux : simple_type vars_simple_type SEMICOLON\n                    | simple_type vars_simple_type SEMICOLON dec_vars_aux\n                    | complex_type vars_complex_type SEMICOLON\n                    | complex_type vars_complex_type SEMICOLON dec_vars_auxvars_complex_type : ID \n                        | ID COMMA vars_complex_typevars_simple_type : ID add_variable\n                        | ID add_variable COMMA vars_simple_type\n                        | ID vars_simple_type_aux\n                        | ID vars_simple_type_aux COMMA vars_simple_typevars_simple_type_aux : LBRACKET CTEI RBRACKET add_array_variable\n                            | LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET add_matrix_variablesimple_type : INT \n                    | FLOAT \n                    | CHARcomplex_type : IDclasses : CLASS ID classes_aux \n                | CLASS ID classes_aux classesclasses_aux : LBRACE dec_vars functions RBRACE\n                    | LBRACE functions RBRACE\n                    | INHERITS ID LBRACE dec_vars functions RBRACE\n                    | INHERITS ID LBRACE functions RBRACEfunctions : FUNCT functions_aux\n                | FUNCT functions_aux functionsfunctions_aux : VOID ID add_function LPAREN params RPAREN body\n                    | VOID ID add_function LPAREN RPAREN body\n                    | simple_type ID add_function LPAREN RPAREN body\n                    | simple_type ID add_function LPAREN params RPAREN bodyparams : simple_type ID add_variable\n            | simple_type ID add_variable COMMA paramsbody : LBRACE dec_vars statutes_aux RBRACE\n            | LBRACE statutes_aux RBRACE\n            | LBRACE statutes_aux RETURN ID SEMICOLON RBRACE\n            | LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACEstatutes : ASSIGN assignation SEMICOLON\n                | CALL call SEMICOLON\n                | read\n                | write\n                | condition\n                | while\n                | forstatutes_aux : statutes\n                    | statutes statutes_auxassignation : var EQUAL expvar : ID\n            | ID var_auxvar_aux : POINT ID \n            |  POINT ID var_aux_2\n            |  var_aux_2var_aux_2 : LBRACKET exp RBRACKET\n            |  LBRACKET exp RBRACKET LBRACKET exp RBRACKETcall : ID LPAREN RPAREN\n            | ID POINT ID LPAREN RPAREN\n            | ID LPAREN call_aux RPAREN\n            | ID POINT ID LPAREN call_aux RPARENcall_aux : exp\n                | exp COMMA call_auxcondition : IF condition_auxcondition_aux : LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3\n                    | condition_aux_2condition_aux_2 : LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_auxcondition_aux_3 : ELSE LBRACE statutes_aux RBRACE\n                        | emptyread : READ LPAREN var RPAREN SEMICOLONwrite : WRITE LPAREN write_aux RPAREN SEMICOLONwrite_aux : exp\n                | exp COMMA write_aux\n                | CTESTRING\n                | CTESTRING COMMA write_auxwhile : WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACEfor : FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACEexp : n_exp\n            | n_exp OR expn_exp : l_exp\n            | l_exp AND n_expl_exp : a_exp\n            | a_exp RELOP a_expa_exp : term\n            | term PLUS a_exp\n            | term MINUS a_expterm : factor\n            | factor TIMES term\n            | factor DIVIDE termfactor : LPAREN exp RPAREN\n            | var\n            | call\n            | factor_auxfactor_aux : cte\n                | PLUS cte\n                | MINUS ctecte : ID\n        | CTEI\n        | CTEF\n        | CTECHARmain : MAIN LBRACE statutes_aux RBRACE\n            | MAIN LBRACE dec_vars statutes_aux RBRACEempty :add_variable :add_array_variable :add_matrix_variable :add_function :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,55,],[0,-1,]),'ID':([2,8,14,19,31,32,33,34,35,36,40,41,59,60,71,75,76,89,90,92,94,95,97,98,107,109,111,113,114,116,124,125,143,156,157,158,159,160,161,162,166,167,168,183,184,207,213,217,226,],[3,10,24,36,46,48,-22,-23,-24,-25,51,52,86,88,36,36,48,86,130,130,130,86,46,46,130,147,130,130,152,130,164,164,177,130,130,130,130,130,130,130,130,130,197,130,130,130,130,227,233,]),'TWOPOINTS':([3,],[4,]),'CLASS':([4,12,38,49,80,104,],[8,8,-29,-28,-31,-30,]),'MAIN_CLASS':([4,5,6,7,12,20,38,49,80,104,],[-106,9,-2,-3,-26,-27,-29,-28,-31,-30,]),'LBRACE':([9,10,24,26,142,144,174,179,198,199,237,239,],[11,13,42,44,176,176,176,176,211,212,243,244,]),'INHERITS':([10,],[14,]),'VAR':([11,13,42,44,176,],[19,19,19,19,19,]),'FUNCT':([11,13,16,17,18,21,30,39,42,53,71,75,96,100,175,178,202,206,216,225,241,245,],[-106,23,23,-5,-6,23,-9,23,23,23,-10,-12,-11,-13,-35,-36,-34,-37,-41,-40,-42,-43,]),'MAIN':([11,15,16,17,18,27,28,29,30,39,50,71,75,96,100,175,178,202,206,216,225,241,245,],[-106,26,-106,-5,-6,-4,-7,-8,-9,-32,-33,-10,-12,-11,-13,-35,-36,-34,-37,-41,-40,-42,-43,]),'INT':([19,23,71,75,102,103,218,],[33,33,33,33,33,33,33,]),'FLOAT':([19,23,71,75,102,103,218,],[34,34,34,34,34,34,34,]),'CHAR':([19,23,71,75,102,103,218,],[35,35,35,35,35,35,35,]),'RBRACE':([22,25,37,39,50,54,56,58,61,62,63,64,65,79,81,82,83,91,93,105,106,112,175,178,185,187,202,204,206,215,216,221,222,225,230,231,234,235,238,240,241,242,245,246,247,248,249,],[38,43,49,-32,-33,80,81,-51,-46,-47,-48,-49,-50,104,-104,105,-52,-67,-69,-105,-44,-45,-35,-36,-73,-74,-34,216,-37,225,-41,230,231,-40,-106,-79,241,-68,-72,245,-42,-70,-43,248,249,-71,-80,]),'VOID':([23,],[40,]),'ASSIGN':([30,44,57,58,61,62,63,64,65,71,75,91,93,96,100,106,112,176,185,187,203,211,212,230,231,235,238,242,243,244,248,249,],[-9,59,59,59,-46,-47,-48,-49,-50,-10,-12,-67,-69,-11,-13,-44,-45,59,-73,-74,59,59,59,-106,-79,-68,-72,-70,59,59,-71,-80,]),'CALL':([30,44,57,58,61,62,63,64,65,71,75,91,93,96,100,106,112,176,185,187,203,211,212,230,231,235,238,242,243,244,248,249,],[-9,60,60,60,-46,-47,-48,-49,-50,-10,-12,-67,-69,-11,-13,-44,-45,60,-73,-74,60,60,60,-106,-79,-68,-72,-70,60,60,-71,-80,]),'READ':([30,44,57,58,61,62,63,64,65,71,75,91,93,96,100,106,112,176,185,187,203,211,212,230,231,235,238,242,243,244,248,249,],[-9,66,66,66,-46,-47,-48,-49,-50,-10,-12,-67,-69,-11,-13,-44,-45,66,-73,-74,66,66,66,-106,-79,-68,-72,-70,66,66,-71,-80,]),'WRITE':([30,44,57,58,61,62,63,64,65,71,75,91,93,96,100,106,112,176,185,187,203,211,212,230,231,235,238,242,243,244,248,249,],[-9,67,67,67,-46,-47,-48,-49,-50,-10,-12,-67,-69,-11,-13,-44,-45,67,-73,-74,67,67,67,-106,-79,-68,-72,-70,67,67,-71,-80,]),'IF':([30,44,57,58,61,62,63,64,65,71,75,91,93,96,100,106,112,176,185,187,203,211,212,230,231,235,238,242,243,244,248,249,],[-9,68,68,68,-46,-47,-48,-49,-50,-10,-12,-67,-69,-11,-13,-44,-45,68,-73,-74,68,68,68,-106,-79,-68,-72,-70,68,68,-71,-80,]),'WHILE':([30,44,57,58,61,62,63,64,65,71,75,91,93,96,100,106,112,176,185,187,203,211,212,230,231,235,238,242,243,244,248,249,],[-9,69,69,69,-46,-47,-48,-49,-50,-10,-12,-67,-69,-11,-13,-44,-45,69,-73,-74,69,69,69,-106,-79,-68,-72,-70,69,69,-71,-80,]),'FROM':([30,44,57,58,61,62,63,64,65,71,75,91,93,96,100,106,112,176,185,187,203,211,212,230,231,235,238,242,243,244,248,249,],[-9,70,70,70,-46,-47,-48,-49,-50,-10,-12,-67,-69,-11,-13,-44,-45,70,-73,-74,70,70,70,-106,-79,-68,-72,-70,70,70,-71,-80,]),'END':([43,],[55,]),'SEMICOLON':([45,46,47,48,72,73,84,87,101,108,110,120,121,122,123,126,127,128,129,130,131,132,133,134,138,139,140,146,149,153,155,163,164,165,173,180,181,182,186,190,191,192,193,194,195,196,197,209,214,220,224,227,229,233,],[71,-107,75,-14,-16,-18,106,112,-15,-55,-58,-81,-83,-85,-87,-90,-94,-95,-96,-54,-97,-101,-102,-103,-17,-19,-108,-53,-61,185,187,-98,-100,-99,-20,-57,-59,-63,-93,-82,-84,-86,-88,-89,-91,-92,-56,-62,-109,-64,-21,234,-60,240,]),'COMMA':([46,48,72,73,108,110,118,119,120,121,122,123,126,127,128,129,130,131,132,133,134,140,149,151,163,164,165,173,177,180,181,182,186,190,191,192,193,194,195,196,197,205,209,214,220,224,229,],[-107,76,97,98,-55,-58,156,157,-81,-83,-85,-87,-90,-94,-95,-96,-54,-97,-101,-102,-103,-108,-61,183,-98,-100,-99,-20,-107,-57,-59,-63,-93,-82,-84,-86,-88,-89,-91,-92,-56,218,-62,-109,-64,-21,-60,]),'LBRACKET':([46,86,130,140,147,181,197,],[74,111,111,172,111,207,111,]),'LPAREN':([51,52,66,67,68,69,70,77,78,88,90,92,94,107,111,113,116,130,152,156,157,158,159,160,161,162,166,167,183,184,197,200,207,213,236,],[-110,-110,89,90,92,94,95,102,103,113,116,116,116,116,116,116,116,113,184,116,116,116,116,116,116,116,116,116,116,116,184,213,116,116,92,]),'RETURN':([58,61,62,63,64,65,83,91,93,106,112,185,187,204,215,230,231,235,238,242,248,249,],[-51,-46,-47,-48,-49,-50,-52,-67,-69,-44,-45,-73,-74,217,226,-106,-79,-68,-72,-70,-71,-80,]),'CTEI':([74,90,92,94,107,111,113,116,124,125,156,157,158,159,160,161,162,166,167,172,183,184,207,213,],[99,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,201,132,132,132,132,]),'EQUAL':([85,86,108,110,147,180,181,229,],[107,-54,-55,-58,-56,-57,-59,-60,]),'RPAREN':([86,102,103,108,110,113,115,117,118,119,120,121,122,123,126,127,128,129,130,131,132,133,134,135,136,137,141,145,146,147,149,150,151,154,163,164,165,177,180,181,182,184,186,188,189,190,191,192,193,194,195,196,197,205,208,209,210,220,223,228,229,],[-54,142,144,-55,-58,149,153,155,-75,-77,-81,-83,-85,-87,-90,-94,-95,-96,-54,-97,-101,-102,-103,169,170,171,174,179,-53,-56,-61,182,-65,186,-98,-100,-99,-107,-57,-59,-63,209,-93,-76,-78,-82,-84,-86,-88,-89,-91,-92,-56,-38,-66,-62,220,-64,232,-39,-60,]),'POINT':([86,88,130,],[109,114,168,]),'CTESTRING':([90,156,157,],[119,119,119,]),'PLUS':([90,92,94,107,108,110,111,113,116,123,126,127,128,129,130,131,132,133,134,149,156,157,158,159,160,161,162,163,164,165,166,167,180,181,182,183,184,186,195,196,197,207,209,213,220,229,],[124,124,124,124,-55,-58,124,124,124,161,-90,-94,-95,-96,-54,-97,-101,-102,-103,-61,124,124,124,124,124,124,124,-98,-100,-99,124,124,-57,-59,-63,124,124,-93,-91,-92,-56,124,-62,124,-64,-60,]),'MINUS':([90,92,94,107,108,110,111,113,116,123,126,127,128,129,130,131,132,133,134,149,156,157,158,159,160,161,162,163,164,165,166,167,180,181,182,183,184,186,195,196,197,207,209,213,220,229,],[125,125,125,125,-55,-58,125,125,125,162,-90,-94,-95,-96,-54,-97,-101,-102,-103,-61,125,125,125,125,125,125,125,-98,-100,-99,125,125,-57,-59,-63,125,125,-93,-91,-92,-56,125,-62,125,-64,-60,]),'CTEF':([90,92,94,107,111,113,116,124,125,156,157,158,159,160,161,162,166,167,183,184,207,213,],[133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,]),'CTECHAR':([90,92,94,107,111,113,116,124,125,156,157,158,159,160,161,162,166,167,183,184,207,213,],[134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,]),'RBRACKET':([99,108,110,120,121,122,123,126,127,128,129,130,131,132,133,134,148,149,163,164,165,180,181,182,186,190,191,192,193,194,195,196,197,201,209,219,220,229,],[140,-55,-58,-81,-83,-85,-87,-90,-94,-95,-96,-54,-97,-101,-102,-103,181,-61,-98,-100,-99,-57,-59,-63,-93,-82,-84,-86,-88,-89,-91,-92,-56,214,-62,229,-64,-60,]),'TIMES':([108,110,126,127,128,129,130,131,132,133,134,149,163,164,165,180,181,182,186,197,209,220,229,],[-55,-58,166,-94,-95,-96,-54,-97,-101,-102,-103,-61,-98,-100,-99,-57,-59,-63,-93,-56,-62,-64,-60,]),'DIVIDE':([108,110,126,127,128,129,130,131,132,133,134,149,163,164,165,180,181,182,186,197,209,220,229,],[-55,-58,167,-94,-95,-96,-54,-97,-101,-102,-103,-61,-98,-100,-99,-57,-59,-63,-93,-56,-62,-64,-60,]),'RELOP':([108,110,122,123,126,127,128,129,130,131,132,133,134,149,163,164,165,180,181,182,186,193,194,195,196,197,209,220,229,],[-55,-58,160,-87,-90,-94,-95,-96,-54,-97,-101,-102,-103,-61,-98,-100,-99,-57,-59,-63,-93,-88,-89,-91,-92,-56,-62,-64,-60,]),'AND':([108,110,121,122,123,126,127,128,129,130,131,132,133,134,149,163,164,165,180,181,182,186,192,193,194,195,196,197,209,220,229,],[-55,-58,159,-85,-87,-90,-94,-95,-96,-54,-97,-101,-102,-103,-61,-98,-100,-99,-57,-59,-63,-93,-86,-88,-89,-91,-92,-56,-62,-64,-60,]),'OR':([108,110,120,121,122,123,126,127,128,129,130,131,132,133,134,149,163,164,165,180,181,182,186,191,192,193,194,195,196,197,209,220,229,],[-55,-58,158,-83,-85,-87,-90,-94,-95,-96,-54,-97,-101,-102,-103,-61,-98,-100,-99,-57,-59,-63,-93,-84,-86,-88,-89,-91,-92,-56,-62,-64,-60,]),'THEN':([169,],[198,]),'DO':([170,232,],[199,239,]),'UNTIL':([171,],[200,]),'ELIF':([230,],[236,]),'ELSE':([230,],[237,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program_classes':([4,],[5,]),'classes':([4,12,],[6,20,]),'empty':([4,11,16,230,],[7,18,29,238,]),'classes_aux':([10,],[12,]),'program_body':([11,],[15,]),'program_body_vars':([11,],[16,]),'dec_vars':([11,13,42,44,176,],[17,21,53,57,203,]),'functions':([13,16,21,39,42,53,],[22,28,37,50,54,79,]),'main':([15,],[25,]),'program_body_funct':([16,],[27,]),'dec_vars_aux':([19,71,75,],[30,96,100,]),'simple_type':([19,23,71,75,102,103,218,],[31,41,31,31,143,143,143,]),'complex_type':([19,71,75,],[32,32,32,]),'functions_aux':([23,],[39,]),'vars_simple_type':([31,97,98,],[45,138,139,]),'vars_complex_type':([32,76,],[47,101,]),'statutes_aux':([44,57,58,176,203,211,212,243,244,],[56,82,83,204,215,221,222,246,247,]),'statutes':([44,57,58,176,203,211,212,243,244,],[58,58,58,58,58,58,58,58,58,]),'read':([44,57,58,176,203,211,212,243,244,],[61,61,61,61,61,61,61,61,61,]),'write':([44,57,58,176,203,211,212,243,244,],[62,62,62,62,62,62,62,62,62,]),'condition':([44,57,58,176,203,211,212,243,244,],[63,63,63,63,63,63,63,63,63,]),'while':([44,57,58,176,203,211,212,243,244,],[64,64,64,64,64,64,64,64,64,]),'for':([44,57,58,176,203,211,212,243,244,],[65,65,65,65,65,65,65,65,65,]),'add_variable':([46,177,],[72,205,]),'vars_simple_type_aux':([46,],[73,]),'add_function':([51,52,],[77,78,]),'assignation':([59,95,],[84,137,]),'var':([59,89,90,92,94,95,107,111,113,116,156,157,158,159,160,161,162,166,167,183,184,207,213,],[85,115,127,127,127,85,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,]),'call':([60,90,92,94,107,111,113,116,156,157,158,159,160,161,162,166,167,183,184,207,213,],[87,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,]),'condition_aux':([68,236,],[91,242,]),'condition_aux_2':([68,236,],[93,93,]),'var_aux':([86,130,],[108,108,]),'var_aux_2':([86,130,147,197,],[110,110,180,180,]),'write_aux':([90,156,157,],[117,188,189,]),'exp':([90,92,94,107,111,113,116,156,157,158,183,184,207,213,],[118,135,136,146,148,151,154,118,118,190,151,151,219,223,]),'n_exp':([90,92,94,107,111,113,116,156,157,158,159,183,184,207,213,],[120,120,120,120,120,120,120,120,120,120,191,120,120,120,120,]),'l_exp':([90,92,94,107,111,113,116,156,157,158,159,183,184,207,213,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'a_exp':([90,92,94,107,111,113,116,156,157,158,159,160,161,162,183,184,207,213,],[122,122,122,122,122,122,122,122,122,122,122,192,193,194,122,122,122,122,]),'term':([90,92,94,107,111,113,116,156,157,158,159,160,161,162,166,167,183,184,207,213,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,195,196,123,123,123,123,]),'factor':([90,92,94,107,111,113,116,156,157,158,159,160,161,162,166,167,183,184,207,213,],[126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,]),'factor_aux':([90,92,94,107,111,113,116,156,157,158,159,160,161,162,166,167,183,184,207,213,],[129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'cte':([90,92,94,107,111,113,116,124,125,156,157,158,159,160,161,162,166,167,183,184,207,213,],[131,131,131,131,131,131,131,163,165,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'params':([102,103,218,],[141,145,228,]),'call_aux':([113,183,184,],[150,208,210,]),'add_array_variable':([140,],[173,]),'body':([142,144,174,179,],[175,178,202,206,]),'add_matrix_variable':([214,],[224,]),'condition_aux_3':([230,],[235,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID TWOPOINTS program_classes MAIN_CLASS LBRACE program_body main RBRACE END','program',10,'p_program','parser.py',12),
  ('program_classes -> classes','program_classes',1,'p_program_classes','parser.py',16),
  ('program_classes -> empty','program_classes',1,'p_program_classes','parser.py',17),
  ('program_body -> program_body_vars program_body_funct','program_body',2,'p_program_body','parser.py',21),
  ('program_body_vars -> dec_vars','program_body_vars',1,'p_program_body_vars','parser.py',25),
  ('program_body_vars -> empty','program_body_vars',1,'p_program_body_vars','parser.py',26),
  ('program_body_funct -> functions','program_body_funct',1,'p_program_body_funct','parser.py',30),
  ('program_body_funct -> empty','program_body_funct',1,'p_program_body_funct','parser.py',31),
  ('dec_vars -> VAR dec_vars_aux','dec_vars',2,'p_dec_vars','parser.py',35),
  ('dec_vars_aux -> simple_type vars_simple_type SEMICOLON','dec_vars_aux',3,'p_dec_vars_aux','parser.py',39),
  ('dec_vars_aux -> simple_type vars_simple_type SEMICOLON dec_vars_aux','dec_vars_aux',4,'p_dec_vars_aux','parser.py',40),
  ('dec_vars_aux -> complex_type vars_complex_type SEMICOLON','dec_vars_aux',3,'p_dec_vars_aux','parser.py',41),
  ('dec_vars_aux -> complex_type vars_complex_type SEMICOLON dec_vars_aux','dec_vars_aux',4,'p_dec_vars_aux','parser.py',42),
  ('vars_complex_type -> ID','vars_complex_type',1,'p_vars_complex_type','parser.py',46),
  ('vars_complex_type -> ID COMMA vars_complex_type','vars_complex_type',3,'p_vars_complex_type','parser.py',47),
  ('vars_simple_type -> ID add_variable','vars_simple_type',2,'p_vars_simple_type','parser.py',51),
  ('vars_simple_type -> ID add_variable COMMA vars_simple_type','vars_simple_type',4,'p_vars_simple_type','parser.py',52),
  ('vars_simple_type -> ID vars_simple_type_aux','vars_simple_type',2,'p_vars_simple_type','parser.py',53),
  ('vars_simple_type -> ID vars_simple_type_aux COMMA vars_simple_type','vars_simple_type',4,'p_vars_simple_type','parser.py',54),
  ('vars_simple_type_aux -> LBRACKET CTEI RBRACKET add_array_variable','vars_simple_type_aux',4,'p_vars_simple_type_aux','parser.py',58),
  ('vars_simple_type_aux -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET add_matrix_variable','vars_simple_type_aux',7,'p_vars_simple_type_aux','parser.py',59),
  ('simple_type -> INT','simple_type',1,'p_simple_type','parser.py',63),
  ('simple_type -> FLOAT','simple_type',1,'p_simple_type','parser.py',64),
  ('simple_type -> CHAR','simple_type',1,'p_simple_type','parser.py',65),
  ('complex_type -> ID','complex_type',1,'p_complex_type','parser.py',69),
  ('classes -> CLASS ID classes_aux','classes',3,'p_classes','parser.py',73),
  ('classes -> CLASS ID classes_aux classes','classes',4,'p_classes','parser.py',74),
  ('classes_aux -> LBRACE dec_vars functions RBRACE','classes_aux',4,'p_classes_aux','parser.py',78),
  ('classes_aux -> LBRACE functions RBRACE','classes_aux',3,'p_classes_aux','parser.py',79),
  ('classes_aux -> INHERITS ID LBRACE dec_vars functions RBRACE','classes_aux',6,'p_classes_aux','parser.py',80),
  ('classes_aux -> INHERITS ID LBRACE functions RBRACE','classes_aux',5,'p_classes_aux','parser.py',81),
  ('functions -> FUNCT functions_aux','functions',2,'p_functions','parser.py',85),
  ('functions -> FUNCT functions_aux functions','functions',3,'p_functions','parser.py',86),
  ('functions_aux -> VOID ID add_function LPAREN params RPAREN body','functions_aux',7,'p_functions_aux','parser.py',90),
  ('functions_aux -> VOID ID add_function LPAREN RPAREN body','functions_aux',6,'p_functions_aux','parser.py',91),
  ('functions_aux -> simple_type ID add_function LPAREN RPAREN body','functions_aux',6,'p_functions_aux','parser.py',92),
  ('functions_aux -> simple_type ID add_function LPAREN params RPAREN body','functions_aux',7,'p_functions_aux','parser.py',93),
  ('params -> simple_type ID add_variable','params',3,'p_params','parser.py',97),
  ('params -> simple_type ID add_variable COMMA params','params',5,'p_params','parser.py',98),
  ('body -> LBRACE dec_vars statutes_aux RBRACE','body',4,'p_body','parser.py',102),
  ('body -> LBRACE statutes_aux RBRACE','body',3,'p_body','parser.py',103),
  ('body -> LBRACE statutes_aux RETURN ID SEMICOLON RBRACE','body',6,'p_body','parser.py',104),
  ('body -> LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE','body',7,'p_body','parser.py',105),
  ('statutes -> ASSIGN assignation SEMICOLON','statutes',3,'p_statutes','parser.py',109),
  ('statutes -> CALL call SEMICOLON','statutes',3,'p_statutes','parser.py',110),
  ('statutes -> read','statutes',1,'p_statutes','parser.py',111),
  ('statutes -> write','statutes',1,'p_statutes','parser.py',112),
  ('statutes -> condition','statutes',1,'p_statutes','parser.py',113),
  ('statutes -> while','statutes',1,'p_statutes','parser.py',114),
  ('statutes -> for','statutes',1,'p_statutes','parser.py',115),
  ('statutes_aux -> statutes','statutes_aux',1,'p_statutes_aux','parser.py',119),
  ('statutes_aux -> statutes statutes_aux','statutes_aux',2,'p_statutes_aux','parser.py',120),
  ('assignation -> var EQUAL exp','assignation',3,'p_assignation','parser.py',124),
  ('var -> ID','var',1,'p_var','parser.py',128),
  ('var -> ID var_aux','var',2,'p_var','parser.py',129),
  ('var_aux -> POINT ID','var_aux',2,'p_var_aux','parser.py',133),
  ('var_aux -> POINT ID var_aux_2','var_aux',3,'p_var_aux','parser.py',134),
  ('var_aux -> var_aux_2','var_aux',1,'p_var_aux','parser.py',135),
  ('var_aux_2 -> LBRACKET exp RBRACKET','var_aux_2',3,'p_var_aux_2','parser.py',139),
  ('var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET','var_aux_2',6,'p_var_aux_2','parser.py',140),
  ('call -> ID LPAREN RPAREN','call',3,'p_call','parser.py',144),
  ('call -> ID POINT ID LPAREN RPAREN','call',5,'p_call','parser.py',145),
  ('call -> ID LPAREN call_aux RPAREN','call',4,'p_call','parser.py',146),
  ('call -> ID POINT ID LPAREN call_aux RPAREN','call',6,'p_call','parser.py',147),
  ('call_aux -> exp','call_aux',1,'p_call_aux','parser.py',151),
  ('call_aux -> exp COMMA call_aux','call_aux',3,'p_call_aux','parser.py',152),
  ('condition -> IF condition_aux','condition',2,'p_condition','parser.py',156),
  ('condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3','condition_aux',8,'p_condition_aux','parser.py',160),
  ('condition_aux -> condition_aux_2','condition_aux',1,'p_condition_aux','parser.py',161),
  ('condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux','condition_aux_2',9,'p_condition_aux_2','parser.py',165),
  ('condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE','condition_aux_3',4,'p_condition_aux_3','parser.py',169),
  ('condition_aux_3 -> empty','condition_aux_3',1,'p_condition_aux_3','parser.py',170),
  ('read -> READ LPAREN var RPAREN SEMICOLON','read',5,'p_read','parser.py',174),
  ('write -> WRITE LPAREN write_aux RPAREN SEMICOLON','write',5,'p_write','parser.py',178),
  ('write_aux -> exp','write_aux',1,'p_write_aux','parser.py',182),
  ('write_aux -> exp COMMA write_aux','write_aux',3,'p_write_aux','parser.py',183),
  ('write_aux -> CTESTRING','write_aux',1,'p_write_aux','parser.py',184),
  ('write_aux -> CTESTRING COMMA write_aux','write_aux',3,'p_write_aux','parser.py',185),
  ('while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE','while',8,'p_while','parser.py',189),
  ('for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE','for',12,'p_for','parser.py',193),
  ('exp -> n_exp','exp',1,'p_exp','parser.py',197),
  ('exp -> n_exp OR exp','exp',3,'p_exp','parser.py',198),
  ('n_exp -> l_exp','n_exp',1,'p_n_exp','parser.py',202),
  ('n_exp -> l_exp AND n_exp','n_exp',3,'p_n_exp','parser.py',203),
  ('l_exp -> a_exp','l_exp',1,'p_l_exp','parser.py',207),
  ('l_exp -> a_exp RELOP a_exp','l_exp',3,'p_l_exp','parser.py',208),
  ('a_exp -> term','a_exp',1,'p_a_exp','parser.py',212),
  ('a_exp -> term PLUS a_exp','a_exp',3,'p_a_exp','parser.py',213),
  ('a_exp -> term MINUS a_exp','a_exp',3,'p_a_exp','parser.py',214),
  ('term -> factor','term',1,'p_term','parser.py',218),
  ('term -> factor TIMES term','term',3,'p_term','parser.py',219),
  ('term -> factor DIVIDE term','term',3,'p_term','parser.py',220),
  ('factor -> LPAREN exp RPAREN','factor',3,'p_factor','parser.py',224),
  ('factor -> var','factor',1,'p_factor','parser.py',225),
  ('factor -> call','factor',1,'p_factor','parser.py',226),
  ('factor -> factor_aux','factor',1,'p_factor','parser.py',227),
  ('factor_aux -> cte','factor_aux',1,'p_factor_aux','parser.py',231),
  ('factor_aux -> PLUS cte','factor_aux',2,'p_factor_aux','parser.py',232),
  ('factor_aux -> MINUS cte','factor_aux',2,'p_factor_aux','parser.py',233),
  ('cte -> ID','cte',1,'p_cte','parser.py',237),
  ('cte -> CTEI','cte',1,'p_cte','parser.py',238),
  ('cte -> CTEF','cte',1,'p_cte','parser.py',239),
  ('cte -> CTECHAR','cte',1,'p_cte','parser.py',240),
  ('main -> MAIN LBRACE statutes_aux RBRACE','main',4,'p_main','parser.py',244),
  ('main -> MAIN LBRACE dec_vars statutes_aux RBRACE','main',5,'p_main','parser.py',245),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',249),
  ('add_variable -> <empty>','add_variable',0,'p_add_variable','parser.py',256),
  ('add_array_variable -> <empty>','add_array_variable',0,'p_add_array_variable','parser.py',261),
  ('add_matrix_variable -> <empty>','add_matrix_variable',0,'p_add_matrix_variable','parser.py',266),
  ('add_function -> <empty>','add_function',0,'p_add_function','parser.py',271),
]
