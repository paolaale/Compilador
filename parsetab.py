
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN CALL CHAR CLASS COMMA CTECHAR CTEF CTEI CTESTRING DIVIDE DO ELIF ELSE END EQUAL FLOAT FROM FUNCT ID IF INHERITS INT LBRACE LBRACKET LPAREN MAIN MINUS OR PLUS POINT PROGRAM RBRACE RBRACKET READ RELOP RETURN RPAREN SEMICOLON THEN TIMES TWOPOINTS UNTIL VAR VOID WHILE WRITEprogram : program_body_class PROGRAM ID TWOPOINTS program_body main ENDprogram_body : program_body_vars program_body_functprogram_body_vars : dec_vars \n                        | emptyprogram_body_class : classes \n                        | emptyprogram_body_funct : functions \n                        | emptydec_vars : VAR dec_vars_auxdec_vars_aux : simple_type vars_simple_type SEMICOLON\n                    | simple_type vars_simple_type SEMICOLON dec_vars_aux\n                    | complex_type vars_complex_type SEMICOLON\n                    | complex_type vars_complex_type SEMICOLON dec_vars_auxvars_complex_type : ID \n                        | ID COMMA vars_complex_typevars_simple_type : ID \n                        | ID COMMA vars_simple_type\n                        | ID vars_simple_type_aux\n                        | ID vars_simple_type_aux COMMA vars_simple_typevars_simple_type_aux : LBRACKET CTEI RBRACKET\n                            | LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKETsimple_type : INT \n                    | FLOAT \n                    | CHARcomplex_type : IDclasses : CLASS ID classes_aux \n                | CLASS ID classes_aux classesclasses_aux : LBRACE dec_vars functions RBRACE\n                    | LBRACE functions RBRACE\n                    | INHERITS ID LBRACE dec_vars functions RBRACE\n                    | INHERITS ID LBRACE functions RBRACEfunctions : FUNCT functions_aux\n                | FUNCT functions_aux functionsfunctions_aux : VOID ID LPAREN params RPAREN body\n                    | VOID ID LPAREN RPAREN body\n                    | simple_type ID LPAREN RPAREN body\n                    | simple_type ID LPAREN params RPAREN bodyparams : simple_type ID\n            | simple_type ID COMMA paramsbody : LBRACE dec_vars statutes_aux RBRACE\n            | LBRACE statutes_aux RBRACE\n            | LBRACE statutes_aux RETURN ID SEMICOLON RBRACE\n            | LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACEstatutes : ASSIGN assignation SEMICOLON\n                | CALL call SEMICOLON\n                | read\n                | write\n                | condition\n                | while\n                | forstatutes_aux : statutes\n                    | statutes statutes_auxassignation : var EQUAL expvar : ID\n            | ID var_auxvar_aux : POINT ID \n            |  POINT ID var_aux_2\n            |  var_aux_2var_aux_2 : LBRACKET exp RBRACKET\n            |  LBRACKET exp RBRACKET LBRACKET exp RBRACKETcall : ID LPAREN RPAREN\n            | ID POINT ID LPAREN RPAREN\n            | ID LPAREN call_aux RPAREN\n            | ID POINT ID LPAREN call_aux RPARENcall_aux : exp\n                | exp COMMA call_auxcondition : IF condition_auxcondition_aux : LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3\n                    | condition_aux_2condition_aux_2 : LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_auxcondition_aux_3 : ELSE LBRACE statutes_aux RBRACE\n                        | emptyread : READ LPAREN var RPAREN SEMICOLONwrite : WRITE LPAREN write_aux RPAREN SEMICOLONwrite_aux : exp\n                | exp COMMA write_aux\n                | CTESTRING\n                | CTESTRING COMMA write_auxwhile : WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACEfor : FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACEexp : n_exp\n            | n_exp OR expn_exp : l_exp\n            | l_exp AND n_expl_exp : a_exp\n            | a_exp RELOP a_expa_exp : term\n            | term PLUS a_exp\n            | term MINUS a_expterm : factor\n            | factor TIMES term\n            | factor DIVIDE termfactor : LPAREN exp RPAREN\n            | var\n            | call\n            | factor_auxfactor_aux : cte\n                | PLUS cte\n                | MINUS ctecte : ID\n        | CTEI\n        | CTEF\n        | CTECHARmain : MAIN LBRACE statutes_aux RBRACE\n            | MAIN LBRACE dec_vars statutes_aux RBRACEempty :'
    
_lr_action_items = {'CLASS':([0,9,24,41,62,89,],[5,5,-29,-28,-31,-30,]),'PROGRAM':([0,2,3,4,9,13,24,41,62,89,],[-106,6,-5,-6,-26,-27,-29,-28,-31,-30,]),'$end':([1,51,],[0,-1,]),'ID':([5,6,11,16,26,27,28,29,30,31,33,34,53,54,57,58,66,67,80,86,98,99,101,103,104,115,117,119,121,122,124,132,133,162,163,164,165,166,167,168,172,173,174,181,186,187,206,208,214,],[7,8,18,31,43,45,-22,-23,-24,-25,47,48,31,43,31,45,95,97,43,110,95,138,138,138,95,138,153,138,138,158,138,170,170,138,138,138,138,138,138,138,138,138,200,207,138,138,215,138,138,]),'LBRACE':([7,18,37,85,87,107,112,201,202,231,233,],[10,35,52,109,109,109,109,212,213,235,236,]),'INHERITS':([7,],[11,]),'TWOPOINTS':([8,],[12,]),'VAR':([10,12,35,52,109,],[16,16,16,16,16,]),'FUNCT':([10,12,14,20,21,22,25,32,35,49,53,57,78,82,108,111,147,151,180,205,223,228,],[17,-106,17,17,-3,-4,-9,17,17,17,-10,-12,-11,-13,-35,-36,-34,-37,-41,-40,-42,-43,]),'MAIN':([12,19,20,21,22,25,32,38,39,40,46,53,57,78,82,108,111,147,151,180,205,223,228,],[-106,37,-106,-3,-4,-9,-32,-2,-7,-8,-33,-10,-12,-11,-13,-35,-36,-34,-37,-41,-40,-42,-43,]),'RBRACE':([15,23,32,46,50,61,63,65,68,69,70,71,72,91,92,100,102,108,111,114,120,147,149,151,179,180,188,190,205,216,219,220,222,223,225,226,228,229,232,234,237,238,239,240,],[24,41,-32,-33,62,89,90,-51,-46,-47,-48,-49,-50,113,-52,-67,-69,-35,-36,-44,-45,-34,180,-37,205,-41,-73,-74,-40,223,225,226,228,-42,-106,-79,-43,-68,-72,-70,239,240,-71,-80,]),'INT':([16,17,53,57,59,60,150,],[28,28,28,28,28,28,28,]),'FLOAT':([16,17,53,57,59,60,150,],[29,29,29,29,29,29,29,]),'CHAR':([16,17,53,57,59,60,150,],[30,30,30,30,30,30,30,]),'VOID':([17,],[33,]),'ASSIGN':([25,52,53,57,64,65,68,69,70,71,72,78,82,100,102,109,114,120,148,188,190,212,213,225,226,229,232,234,235,236,239,240,],[-9,66,-10,-12,66,66,-46,-47,-48,-49,-50,-11,-13,-67,-69,66,-44,-45,66,-73,-74,66,66,-106,-79,-68,-72,-70,66,66,-71,-80,]),'CALL':([25,52,53,57,64,65,68,69,70,71,72,78,82,100,102,109,114,120,148,188,190,212,213,225,226,229,232,234,235,236,239,240,],[-9,67,-10,-12,67,67,-46,-47,-48,-49,-50,-11,-13,-67,-69,67,-44,-45,67,-73,-74,67,67,-106,-79,-68,-72,-70,67,67,-71,-80,]),'READ':([25,52,53,57,64,65,68,69,70,71,72,78,82,100,102,109,114,120,148,188,190,212,213,225,226,229,232,234,235,236,239,240,],[-9,73,-10,-12,73,73,-46,-47,-48,-49,-50,-11,-13,-67,-69,73,-44,-45,73,-73,-74,73,73,-106,-79,-68,-72,-70,73,73,-71,-80,]),'WRITE':([25,52,53,57,64,65,68,69,70,71,72,78,82,100,102,109,114,120,148,188,190,212,213,225,226,229,232,234,235,236,239,240,],[-9,74,-10,-12,74,74,-46,-47,-48,-49,-50,-11,-13,-67,-69,74,-44,-45,74,-73,-74,74,74,-106,-79,-68,-72,-70,74,74,-71,-80,]),'IF':([25,52,53,57,64,65,68,69,70,71,72,78,82,100,102,109,114,120,148,188,190,212,213,225,226,229,232,234,235,236,239,240,],[-9,75,-10,-12,75,75,-46,-47,-48,-49,-50,-11,-13,-67,-69,75,-44,-45,75,-73,-74,75,75,-106,-79,-68,-72,-70,75,75,-71,-80,]),'WHILE':([25,52,53,57,64,65,68,69,70,71,72,78,82,100,102,109,114,120,148,188,190,212,213,225,226,229,232,234,235,236,239,240,],[-9,76,-10,-12,76,76,-46,-47,-48,-49,-50,-11,-13,-67,-69,76,-44,-45,76,-73,-74,76,76,-106,-79,-68,-72,-70,76,76,-71,-80,]),'FROM':([25,52,53,57,64,65,68,69,70,71,72,78,82,100,102,109,114,120,148,188,190,212,213,225,226,229,232,234,235,236,239,240,],[-9,77,-10,-12,77,77,-46,-47,-48,-49,-50,-11,-13,-67,-69,77,-44,-45,77,-73,-74,77,77,-106,-79,-68,-72,-70,77,77,-71,-80,]),'END':([36,90,113,],[51,-104,-105,]),'SEMICOLON':([42,43,44,45,55,79,83,93,96,105,106,116,118,128,129,130,131,134,135,136,137,138,139,140,141,142,152,155,159,161,169,170,171,183,184,185,189,193,194,195,196,197,198,199,200,204,207,210,215,218,224,],[53,-16,57,-14,-18,-17,-15,114,120,-19,-20,-55,-58,-81,-83,-85,-87,-90,-94,-95,-96,-54,-97,-101,-102,-103,-53,-61,188,190,-98,-100,-99,-57,-59,-63,-93,-82,-84,-86,-88,-89,-91,-92,-56,-21,216,-62,222,-64,-60,]),'COMMA':([43,45,55,106,110,116,118,126,127,128,129,130,131,134,135,136,137,138,139,140,141,142,155,157,169,170,171,183,184,185,189,193,194,195,196,197,198,199,200,204,210,218,224,],[54,58,80,-20,150,-55,-58,162,163,-81,-83,-85,-87,-90,-94,-95,-96,-54,-97,-101,-102,-103,-61,186,-98,-100,-99,-57,-59,-63,-93,-82,-84,-86,-88,-89,-91,-92,-56,-21,-62,-64,-60,]),'LBRACKET':([43,95,106,138,153,184,200,],[56,119,146,119,119,208,119,]),'LPAREN':([47,48,73,74,75,76,77,97,99,101,103,115,119,121,124,138,158,162,163,164,165,166,167,168,172,173,186,187,200,203,208,214,230,],[59,60,98,99,101,103,104,121,124,124,124,124,124,124,124,121,187,124,124,124,124,124,124,124,124,124,124,124,187,214,124,124,101,]),'CTEI':([56,99,101,103,115,119,121,124,132,133,146,162,163,164,165,166,167,168,172,173,186,187,208,214,],[81,140,140,140,140,140,140,140,140,140,178,140,140,140,140,140,140,140,140,140,140,140,140,140,]),'RPAREN':([59,60,84,88,95,110,116,118,121,123,125,126,127,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,152,153,155,156,157,160,169,170,171,182,183,184,185,187,189,191,192,193,194,195,196,197,198,199,200,209,210,211,218,221,224,],[85,87,107,112,-54,-38,-55,-58,155,159,161,-75,-77,-81,-83,-85,-87,-90,-94,-95,-96,-54,-97,-101,-102,-103,175,176,177,-53,-56,-61,185,-65,189,-98,-100,-99,-39,-57,-59,-63,210,-93,-76,-78,-82,-84,-86,-88,-89,-91,-92,-56,-66,-62,218,-64,227,-60,]),'RETURN':([65,68,69,70,71,72,92,100,102,114,120,149,179,188,190,225,226,229,232,234,239,240,],[-51,-46,-47,-48,-49,-50,-52,-67,-69,-44,-45,181,206,-73,-74,-106,-79,-68,-72,-70,-71,-80,]),'RBRACKET':([81,116,118,128,129,130,131,134,135,136,137,138,139,140,141,142,154,155,169,170,171,178,183,184,185,189,193,194,195,196,197,198,199,200,210,217,218,224,],[106,-55,-58,-81,-83,-85,-87,-90,-94,-95,-96,-54,-97,-101,-102,-103,184,-61,-98,-100,-99,204,-57,-59,-63,-93,-82,-84,-86,-88,-89,-91,-92,-56,-62,224,-64,-60,]),'EQUAL':([94,95,116,118,153,183,184,224,],[115,-54,-55,-58,-56,-57,-59,-60,]),'POINT':([95,97,138,],[117,122,174,]),'CTESTRING':([99,162,163,],[127,127,127,]),'PLUS':([99,101,103,115,116,118,119,121,124,131,134,135,136,137,138,139,140,141,142,155,162,163,164,165,166,167,168,169,170,171,172,173,183,184,185,186,187,189,198,199,200,208,210,214,218,224,],[132,132,132,132,-55,-58,132,132,132,167,-90,-94,-95,-96,-54,-97,-101,-102,-103,-61,132,132,132,132,132,132,132,-98,-100,-99,132,132,-57,-59,-63,132,132,-93,-91,-92,-56,132,-62,132,-64,-60,]),'MINUS':([99,101,103,115,116,118,119,121,124,131,134,135,136,137,138,139,140,141,142,155,162,163,164,165,166,167,168,169,170,171,172,173,183,184,185,186,187,189,198,199,200,208,210,214,218,224,],[133,133,133,133,-55,-58,133,133,133,168,-90,-94,-95,-96,-54,-97,-101,-102,-103,-61,133,133,133,133,133,133,133,-98,-100,-99,133,133,-57,-59,-63,133,133,-93,-91,-92,-56,133,-62,133,-64,-60,]),'CTEF':([99,101,103,115,119,121,124,132,133,162,163,164,165,166,167,168,172,173,186,187,208,214,],[141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,]),'CTECHAR':([99,101,103,115,119,121,124,132,133,162,163,164,165,166,167,168,172,173,186,187,208,214,],[142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,]),'TIMES':([116,118,134,135,136,137,138,139,140,141,142,155,169,170,171,183,184,185,189,200,210,218,224,],[-55,-58,172,-94,-95,-96,-54,-97,-101,-102,-103,-61,-98,-100,-99,-57,-59,-63,-93,-56,-62,-64,-60,]),'DIVIDE':([116,118,134,135,136,137,138,139,140,141,142,155,169,170,171,183,184,185,189,200,210,218,224,],[-55,-58,173,-94,-95,-96,-54,-97,-101,-102,-103,-61,-98,-100,-99,-57,-59,-63,-93,-56,-62,-64,-60,]),'RELOP':([116,118,130,131,134,135,136,137,138,139,140,141,142,155,169,170,171,183,184,185,189,196,197,198,199,200,210,218,224,],[-55,-58,166,-87,-90,-94,-95,-96,-54,-97,-101,-102,-103,-61,-98,-100,-99,-57,-59,-63,-93,-88,-89,-91,-92,-56,-62,-64,-60,]),'AND':([116,118,129,130,131,134,135,136,137,138,139,140,141,142,155,169,170,171,183,184,185,189,195,196,197,198,199,200,210,218,224,],[-55,-58,165,-85,-87,-90,-94,-95,-96,-54,-97,-101,-102,-103,-61,-98,-100,-99,-57,-59,-63,-93,-86,-88,-89,-91,-92,-56,-62,-64,-60,]),'OR':([116,118,128,129,130,131,134,135,136,137,138,139,140,141,142,155,169,170,171,183,184,185,189,194,195,196,197,198,199,200,210,218,224,],[-55,-58,164,-83,-85,-87,-90,-94,-95,-96,-54,-97,-101,-102,-103,-61,-98,-100,-99,-57,-59,-63,-93,-84,-86,-88,-89,-91,-92,-56,-62,-64,-60,]),'THEN':([175,],[201,]),'DO':([176,227,],[202,233,]),'UNTIL':([177,],[203,]),'ELIF':([225,],[230,]),'ELSE':([225,],[231,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program_body_class':([0,],[2,]),'classes':([0,9,],[3,13,]),'empty':([0,12,20,225,],[4,22,40,232,]),'classes_aux':([7,],[9,]),'dec_vars':([10,12,35,52,109,],[14,21,49,64,148,]),'functions':([10,14,20,32,35,49,],[15,23,39,46,50,61,]),'program_body':([12,],[19,]),'program_body_vars':([12,],[20,]),'dec_vars_aux':([16,53,57,],[25,78,82,]),'simple_type':([16,17,53,57,59,60,150,],[26,34,26,26,86,86,86,]),'complex_type':([16,53,57,],[27,27,27,]),'functions_aux':([17,],[32,]),'main':([19,],[36,]),'program_body_funct':([20,],[38,]),'vars_simple_type':([26,54,80,],[42,79,105,]),'vars_complex_type':([27,58,],[44,83,]),'vars_simple_type_aux':([43,],[55,]),'statutes_aux':([52,64,65,109,148,212,213,235,236,],[63,91,92,149,179,219,220,237,238,]),'statutes':([52,64,65,109,148,212,213,235,236,],[65,65,65,65,65,65,65,65,65,]),'read':([52,64,65,109,148,212,213,235,236,],[68,68,68,68,68,68,68,68,68,]),'write':([52,64,65,109,148,212,213,235,236,],[69,69,69,69,69,69,69,69,69,]),'condition':([52,64,65,109,148,212,213,235,236,],[70,70,70,70,70,70,70,70,70,]),'while':([52,64,65,109,148,212,213,235,236,],[71,71,71,71,71,71,71,71,71,]),'for':([52,64,65,109,148,212,213,235,236,],[72,72,72,72,72,72,72,72,72,]),'params':([59,60,150,],[84,88,182,]),'assignation':([66,104,],[93,145,]),'var':([66,98,99,101,103,104,115,119,121,124,162,163,164,165,166,167,168,172,173,186,187,208,214,],[94,123,135,135,135,94,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,]),'call':([67,99,101,103,115,119,121,124,162,163,164,165,166,167,168,172,173,186,187,208,214,],[96,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,]),'condition_aux':([75,230,],[100,234,]),'condition_aux_2':([75,230,],[102,102,]),'body':([85,87,107,112,],[108,111,147,151,]),'var_aux':([95,138,],[116,116,]),'var_aux_2':([95,138,153,200,],[118,118,183,183,]),'write_aux':([99,162,163,],[125,191,192,]),'exp':([99,101,103,115,119,121,124,162,163,164,186,187,208,214,],[126,143,144,152,154,157,160,126,126,193,157,157,217,221,]),'n_exp':([99,101,103,115,119,121,124,162,163,164,165,186,187,208,214,],[128,128,128,128,128,128,128,128,128,128,194,128,128,128,128,]),'l_exp':([99,101,103,115,119,121,124,162,163,164,165,186,187,208,214,],[129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'a_exp':([99,101,103,115,119,121,124,162,163,164,165,166,167,168,186,187,208,214,],[130,130,130,130,130,130,130,130,130,130,130,195,196,197,130,130,130,130,]),'term':([99,101,103,115,119,121,124,162,163,164,165,166,167,168,172,173,186,187,208,214,],[131,131,131,131,131,131,131,131,131,131,131,131,131,131,198,199,131,131,131,131,]),'factor':([99,101,103,115,119,121,124,162,163,164,165,166,167,168,172,173,186,187,208,214,],[134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,]),'factor_aux':([99,101,103,115,119,121,124,162,163,164,165,166,167,168,172,173,186,187,208,214,],[137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,]),'cte':([99,101,103,115,119,121,124,132,133,162,163,164,165,166,167,168,172,173,186,187,208,214,],[139,139,139,139,139,139,139,169,171,139,139,139,139,139,139,139,139,139,139,139,139,139,]),'call_aux':([121,186,187,],[156,209,211,]),'condition_aux_3':([225,],[229,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program_body_class PROGRAM ID TWOPOINTS program_body main END','program',7,'p_program','parser.py',11),
  ('program_body -> program_body_vars program_body_funct','program_body',2,'p_program_body','parser.py',15),
  ('program_body_vars -> dec_vars','program_body_vars',1,'p_program_body_vars','parser.py',19),
  ('program_body_vars -> empty','program_body_vars',1,'p_program_body_vars','parser.py',20),
  ('program_body_class -> classes','program_body_class',1,'p_program_body_class','parser.py',24),
  ('program_body_class -> empty','program_body_class',1,'p_program_body_class','parser.py',25),
  ('program_body_funct -> functions','program_body_funct',1,'p_program_body_funct','parser.py',29),
  ('program_body_funct -> empty','program_body_funct',1,'p_program_body_funct','parser.py',30),
  ('dec_vars -> VAR dec_vars_aux','dec_vars',2,'p_dec_vars','parser.py',34),
  ('dec_vars_aux -> simple_type vars_simple_type SEMICOLON','dec_vars_aux',3,'p_dec_vars_aux','parser.py',38),
  ('dec_vars_aux -> simple_type vars_simple_type SEMICOLON dec_vars_aux','dec_vars_aux',4,'p_dec_vars_aux','parser.py',39),
  ('dec_vars_aux -> complex_type vars_complex_type SEMICOLON','dec_vars_aux',3,'p_dec_vars_aux','parser.py',40),
  ('dec_vars_aux -> complex_type vars_complex_type SEMICOLON dec_vars_aux','dec_vars_aux',4,'p_dec_vars_aux','parser.py',41),
  ('vars_complex_type -> ID','vars_complex_type',1,'p_vars_complex_type','parser.py',45),
  ('vars_complex_type -> ID COMMA vars_complex_type','vars_complex_type',3,'p_vars_complex_type','parser.py',46),
  ('vars_simple_type -> ID','vars_simple_type',1,'p_vars_simple_type','parser.py',50),
  ('vars_simple_type -> ID COMMA vars_simple_type','vars_simple_type',3,'p_vars_simple_type','parser.py',51),
  ('vars_simple_type -> ID vars_simple_type_aux','vars_simple_type',2,'p_vars_simple_type','parser.py',52),
  ('vars_simple_type -> ID vars_simple_type_aux COMMA vars_simple_type','vars_simple_type',4,'p_vars_simple_type','parser.py',53),
  ('vars_simple_type_aux -> LBRACKET CTEI RBRACKET','vars_simple_type_aux',3,'p_vars_simple_type_aux','parser.py',57),
  ('vars_simple_type_aux -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET','vars_simple_type_aux',6,'p_vars_simple_type_aux','parser.py',58),
  ('simple_type -> INT','simple_type',1,'p_simple_type','parser.py',62),
  ('simple_type -> FLOAT','simple_type',1,'p_simple_type','parser.py',63),
  ('simple_type -> CHAR','simple_type',1,'p_simple_type','parser.py',64),
  ('complex_type -> ID','complex_type',1,'p_complex_type','parser.py',68),
  ('classes -> CLASS ID classes_aux','classes',3,'p_classes','parser.py',72),
  ('classes -> CLASS ID classes_aux classes','classes',4,'p_classes','parser.py',73),
  ('classes_aux -> LBRACE dec_vars functions RBRACE','classes_aux',4,'p_classes_aux','parser.py',77),
  ('classes_aux -> LBRACE functions RBRACE','classes_aux',3,'p_classes_aux','parser.py',78),
  ('classes_aux -> INHERITS ID LBRACE dec_vars functions RBRACE','classes_aux',6,'p_classes_aux','parser.py',79),
  ('classes_aux -> INHERITS ID LBRACE functions RBRACE','classes_aux',5,'p_classes_aux','parser.py',80),
  ('functions -> FUNCT functions_aux','functions',2,'p_functions','parser.py',84),
  ('functions -> FUNCT functions_aux functions','functions',3,'p_functions','parser.py',85),
  ('functions_aux -> VOID ID LPAREN params RPAREN body','functions_aux',6,'p_functions_aux','parser.py',89),
  ('functions_aux -> VOID ID LPAREN RPAREN body','functions_aux',5,'p_functions_aux','parser.py',90),
  ('functions_aux -> simple_type ID LPAREN RPAREN body','functions_aux',5,'p_functions_aux','parser.py',91),
  ('functions_aux -> simple_type ID LPAREN params RPAREN body','functions_aux',6,'p_functions_aux','parser.py',92),
  ('params -> simple_type ID','params',2,'p_params','parser.py',96),
  ('params -> simple_type ID COMMA params','params',4,'p_params','parser.py',97),
  ('body -> LBRACE dec_vars statutes_aux RBRACE','body',4,'p_body','parser.py',101),
  ('body -> LBRACE statutes_aux RBRACE','body',3,'p_body','parser.py',102),
  ('body -> LBRACE statutes_aux RETURN ID SEMICOLON RBRACE','body',6,'p_body','parser.py',103),
  ('body -> LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE','body',7,'p_body','parser.py',104),
  ('statutes -> ASSIGN assignation SEMICOLON','statutes',3,'p_statutes','parser.py',108),
  ('statutes -> CALL call SEMICOLON','statutes',3,'p_statutes','parser.py',109),
  ('statutes -> read','statutes',1,'p_statutes','parser.py',110),
  ('statutes -> write','statutes',1,'p_statutes','parser.py',111),
  ('statutes -> condition','statutes',1,'p_statutes','parser.py',112),
  ('statutes -> while','statutes',1,'p_statutes','parser.py',113),
  ('statutes -> for','statutes',1,'p_statutes','parser.py',114),
  ('statutes_aux -> statutes','statutes_aux',1,'p_statutes_aux','parser.py',118),
  ('statutes_aux -> statutes statutes_aux','statutes_aux',2,'p_statutes_aux','parser.py',119),
  ('assignation -> var EQUAL exp','assignation',3,'p_assignation','parser.py',123),
  ('var -> ID','var',1,'p_var','parser.py',127),
  ('var -> ID var_aux','var',2,'p_var','parser.py',128),
  ('var_aux -> POINT ID','var_aux',2,'p_var_aux','parser.py',132),
  ('var_aux -> POINT ID var_aux_2','var_aux',3,'p_var_aux','parser.py',133),
  ('var_aux -> var_aux_2','var_aux',1,'p_var_aux','parser.py',134),
  ('var_aux_2 -> LBRACKET exp RBRACKET','var_aux_2',3,'p_var_aux_2','parser.py',138),
  ('var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET','var_aux_2',6,'p_var_aux_2','parser.py',139),
  ('call -> ID LPAREN RPAREN','call',3,'p_call','parser.py',143),
  ('call -> ID POINT ID LPAREN RPAREN','call',5,'p_call','parser.py',144),
  ('call -> ID LPAREN call_aux RPAREN','call',4,'p_call','parser.py',145),
  ('call -> ID POINT ID LPAREN call_aux RPAREN','call',6,'p_call','parser.py',146),
  ('call_aux -> exp','call_aux',1,'p_call_aux','parser.py',150),
  ('call_aux -> exp COMMA call_aux','call_aux',3,'p_call_aux','parser.py',151),
  ('condition -> IF condition_aux','condition',2,'p_condition','parser.py',155),
  ('condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3','condition_aux',8,'p_condition_aux','parser.py',159),
  ('condition_aux -> condition_aux_2','condition_aux',1,'p_condition_aux','parser.py',160),
  ('condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux','condition_aux_2',9,'p_condition_aux_2','parser.py',164),
  ('condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE','condition_aux_3',4,'p_condition_aux_3','parser.py',168),
  ('condition_aux_3 -> empty','condition_aux_3',1,'p_condition_aux_3','parser.py',169),
  ('read -> READ LPAREN var RPAREN SEMICOLON','read',5,'p_read','parser.py',173),
  ('write -> WRITE LPAREN write_aux RPAREN SEMICOLON','write',5,'p_write','parser.py',177),
  ('write_aux -> exp','write_aux',1,'p_write_aux','parser.py',181),
  ('write_aux -> exp COMMA write_aux','write_aux',3,'p_write_aux','parser.py',182),
  ('write_aux -> CTESTRING','write_aux',1,'p_write_aux','parser.py',183),
  ('write_aux -> CTESTRING COMMA write_aux','write_aux',3,'p_write_aux','parser.py',184),
  ('while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE','while',8,'p_while','parser.py',188),
  ('for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE','for',12,'p_for','parser.py',192),
  ('exp -> n_exp','exp',1,'p_exp','parser.py',196),
  ('exp -> n_exp OR exp','exp',3,'p_exp','parser.py',197),
  ('n_exp -> l_exp','n_exp',1,'p_n_exp','parser.py',201),
  ('n_exp -> l_exp AND n_exp','n_exp',3,'p_n_exp','parser.py',202),
  ('l_exp -> a_exp','l_exp',1,'p_l_exp','parser.py',206),
  ('l_exp -> a_exp RELOP a_exp','l_exp',3,'p_l_exp','parser.py',207),
  ('a_exp -> term','a_exp',1,'p_a_exp','parser.py',211),
  ('a_exp -> term PLUS a_exp','a_exp',3,'p_a_exp','parser.py',212),
  ('a_exp -> term MINUS a_exp','a_exp',3,'p_a_exp','parser.py',213),
  ('term -> factor','term',1,'p_term','parser.py',217),
  ('term -> factor TIMES term','term',3,'p_term','parser.py',218),
  ('term -> factor DIVIDE term','term',3,'p_term','parser.py',219),
  ('factor -> LPAREN exp RPAREN','factor',3,'p_factor','parser.py',223),
  ('factor -> var','factor',1,'p_factor','parser.py',224),
  ('factor -> call','factor',1,'p_factor','parser.py',225),
  ('factor -> factor_aux','factor',1,'p_factor','parser.py',226),
  ('factor_aux -> cte','factor_aux',1,'p_factor_aux','parser.py',230),
  ('factor_aux -> PLUS cte','factor_aux',2,'p_factor_aux','parser.py',231),
  ('factor_aux -> MINUS cte','factor_aux',2,'p_factor_aux','parser.py',232),
  ('cte -> ID','cte',1,'p_cte','parser.py',236),
  ('cte -> CTEI','cte',1,'p_cte','parser.py',237),
  ('cte -> CTEF','cte',1,'p_cte','parser.py',238),
  ('cte -> CTECHAR','cte',1,'p_cte','parser.py',239),
  ('main -> MAIN LBRACE statutes_aux RBRACE','main',4,'p_main','parser.py',243),
  ('main -> MAIN LBRACE dec_vars statutes_aux RBRACE','main',5,'p_main','parser.py',244),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',248),
]
