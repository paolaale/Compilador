
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND CALL CHAR CLASS COMMA CTECHAR CTEF CTEI CTESTRING DIVIDE DO ELIF ELSE END EQUAL FLOAT FROM FUNCT ID IF INHERITS INIT INT LBRACE LBRACKET LPAREN MAIN MINUS OBJECT OR PLUS POINT PROGRAM RBRACE RBRACKET READ RELOP RETURN RPAREN SEMICOLON THEN TIMES TWOPOINTS UNTIL VAR VOID WHILE WRITEprogram : PROGRAM ID TWOPOINTS program_classes MAIN add_class LBRACE program_body init RBRACE ENDprogram_classes : classes \n                        | emptyprogram_body : program_body_vars program_body_functprogram_body_vars : dec_vars\n                        | emptyprogram_body_funct : functions \n                        | emptydec_vars : VAR dec_vars_auxdec_vars_aux : dec_vars_simple\n                    | dec_vars_complexdec_vars_simple : simple_type vars_simple_type SEMICOLON\n                            | simple_type vars_simple_type SEMICOLON dec_vars_auxsimple_type : INT \n                    | FLOAT \n                    | CHARvars_simple_type : ID add_variable\n                        | ID add_variable COMMA vars_simple_type\n                        | ID vars_simple_type_aux\n                        | ID vars_simple_type_aux COMMA vars_simple_typevars_simple_type_aux : LBRACKET CTEI RBRACKET add_array_variable\n                            | LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET add_matrix_variabledec_vars_complex : OBJECT vars_complex_type SEMICOLON\n                              | OBJECT vars_complex_type SEMICOLON dec_vars_auxvars_complex_type : ID add_variable\n                         | ID add_variable COMMA vars_complex_typeclasses : CLASS OBJECT classes_aux \n                | CLASS OBJECT classes_aux classesclasses_aux : add_class LBRACE dec_vars functions RBRACE\n                    | add_class LBRACE functions RBRACE\n                    | INHERITS OBJECT add_inherit_class LBRACE dec_vars functions RBRACE\n                    | INHERITS OBJECT add_inherit_class LBRACE functions RBRACEfunctions : FUNCT functions_aux\n                | FUNCT functions_aux functionsfunctions_aux : VOID ID add_function LPAREN params RPAREN body\n                    | VOID ID add_function LPAREN RPAREN body\n                    | simple_type ID add_function LPAREN RPAREN body\n                    | simple_type ID add_function LPAREN params RPAREN bodyparams : simple_type ID add_variable\n            | simple_type ID add_variable COMMA params\n            | simple_type ID params_aux\n            | simple_type ID params_aux COMMA paramsparams_aux : LBRACKET RBRACKET add_array_var_params\n                | LBRACKET RBRACKET LBRACKET RBRACKET add_matrix_var_paramsbody : LBRACE dec_vars statutes_aux RBRACE\n            | LBRACE statutes_aux RBRACE\n            | LBRACE statutes_aux RETURN ID SEMICOLON RBRACE\n            | LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACEstatutes : assignation SEMICOLON\n                | CALL call SEMICOLON\n                | read\n                | write\n                | condition\n                | while\n                | forstatutes_aux : statutes\n                    | statutes statutes_auxassignation : ID EQUAL exp  \n                    | ID var_aux EQUAL expvar_aux : POINT ID \n            |  POINT ID var_aux_2\n            |  var_aux_2var_aux_2 : LBRACKET exp RBRACKET\n            |  LBRACKET exp RBRACKET LBRACKET exp RBRACKETcall : ID LPAREN RPAREN\n            | ID POINT ID LPAREN RPAREN\n            | ID LPAREN call_aux RPAREN\n            | ID POINT ID LPAREN call_aux RPARENcall_aux : exp\n                | exp COMMA call_auxcondition : IF condition_auxcondition_aux : LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3\n                    | condition_aux_2condition_aux_2 : LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_auxcondition_aux_3 : ELSE LBRACE statutes_aux RBRACE\n                        | emptyread : READ LPAREN ID RPAREN SEMICOLONwrite : WRITE LPAREN write_aux RPAREN SEMICOLONwrite_aux : exp\n                | exp COMMA write_aux\n                | CTESTRING\n                | CTESTRING COMMA write_auxwhile : WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACEfor : FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACEexp : n_exp\n            | n_exp OR push_op exp pop_op_orn_exp : l_exp \n            | l_exp AND push_op n_exp pop_op_andl_exp : a_exp \n            | a_exp RELOP push_op a_exp pop_op_relopa_exp : term pop_op_art_n2\n            | term pop_op_art_n2 PLUS push_op a_exp\n            | term pop_op_art_n2 MINUS push_op a_expterm : factor\n            | factor TIMES push_op term pop_op_art_n1\n            | factor DIVIDE push_op term pop_op_art_n1factor : LPAREN push_paren exp RPAREN pop_paren\n            | call\n            | factor_auxfactor_aux : cte\n                | PLUS cte\n                | MINUS ctecte : ID push_var\n        | ID var_aux push_var\n        | CTEI push_var\n        | CTEF push_var\n        | CTECHAR push_varinit : INIT add_init LBRACE statutes_aux RBRACE\n            | INIT add_init LBRACE dec_vars statutes_aux RBRACEempty :add_variable :add_array_variable :add_matrix_variable :add_array_var_params :add_matrix_var_params :add_function :add_init :add_class :add_inherit_class :push_var :push_op :pop_op_art_n1 :pop_op_art_n2 :pop_op_relop :pop_op_and :pop_op_or :push_paren :pop_paren :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,59,],[0,-1,]),'ID':([2,33,34,35,36,37,38,39,40,44,45,60,61,65,72,73,75,76,77,78,79,80,87,88,89,91,92,99,102,104,106,107,108,109,110,111,112,113,120,124,125,126,133,134,136,143,157,165,168,169,170,175,176,177,186,187,193,200,201,204,205,206,207,208,209,210,212,213,214,223,233,234,239,240,241,244,266,267,272,275,278,279,280,283,284,],[3,-9,-10,-11,50,52,-14,-15,-16,55,56,81,-12,-23,81,81,101,-51,-52,-53,-54,-55,-13,50,50,-24,52,-49,127,144,127,146,127,-71,127,-73,127,81,158,-50,127,164,173,173,-127,127,81,202,-121,-121,-121,-121,-121,127,127,127,81,127,127,127,127,127,-121,-121,127,127,127,-77,-78,245,127,127,81,81,127,263,-110,-83,-72,-76,-74,81,81,-75,-84,]),'TWOPOINTS':([3,],[4,]),'CLASS':([4,12,42,53,70,95,],[8,8,-30,-29,-32,-31,]),'MAIN':([4,5,6,7,12,16,42,53,70,95,],[-110,9,-2,-3,-27,-28,-30,-29,-32,-31,]),'OBJECT':([8,14,23,61,65,],[10,18,37,37,37,]),'LBRACE':([9,10,11,13,18,27,29,48,119,121,155,160,217,218,274,276,],[-118,-118,15,17,-119,46,-117,60,157,157,157,157,239,240,279,280,]),'INHERITS':([10,],[14,]),'VAR':([15,17,46,60,157,],[23,23,23,23,23,]),'FUNCT':([15,17,20,21,22,24,33,34,35,43,46,57,61,65,87,91,156,159,192,198,222,243,270,277,],[-110,26,26,-5,-6,26,-9,-10,-11,26,26,26,-12,-23,-13,-24,-36,-37,-35,-38,-46,-45,-47,-48,]),'INIT':([15,19,20,21,22,30,31,32,33,34,35,43,54,61,65,87,91,156,159,192,198,222,243,270,277,],[-110,29,-110,-5,-6,-4,-7,-8,-9,-10,-11,-33,-34,-12,-23,-13,-24,-36,-37,-35,-38,-46,-45,-47,-48,]),'INT':([23,26,61,65,93,94,224,225,],[38,38,38,38,38,38,38,38,]),'FLOAT':([23,26,61,65,93,94,224,225,],[39,39,39,39,39,39,39,39,]),'CHAR':([23,26,61,65,93,94,224,225,],[40,40,40,40,40,40,40,40,]),'RBRACE':([25,28,41,43,54,58,69,71,73,76,77,78,79,80,96,97,98,99,109,111,123,124,156,159,192,194,198,213,214,221,222,243,260,261,264,266,267,269,270,272,275,277,278,281,282,283,284,],[42,47,53,-33,-34,70,95,96,-56,-51,-52,-53,-54,-55,-108,123,-57,-49,-71,-73,-109,-50,-36,-37,-35,222,-38,-77,-78,243,-46,-45,266,267,270,-110,-83,277,-47,-72,-76,-48,-74,283,284,-75,-84,]),'VOID':([26,],[44,]),'CALL':([33,34,35,60,61,65,72,73,76,77,78,79,80,87,91,99,109,111,124,157,193,213,214,239,240,266,267,272,275,278,279,280,283,284,],[-9,-10,-11,75,-12,-23,75,75,-51,-52,-53,-54,-55,-13,-24,-49,-71,-73,-50,75,75,-77,-78,75,75,-110,-83,-72,-76,-74,75,75,-75,-84,]),'READ':([33,34,35,60,61,65,72,73,76,77,78,79,80,87,91,99,109,111,124,157,193,213,214,239,240,266,267,272,275,278,279,280,283,284,],[-9,-10,-11,82,-12,-23,82,82,-51,-52,-53,-54,-55,-13,-24,-49,-71,-73,-50,82,82,-77,-78,82,82,-110,-83,-72,-76,-74,82,82,-75,-84,]),'WRITE':([33,34,35,60,61,65,72,73,76,77,78,79,80,87,91,99,109,111,124,157,193,213,214,239,240,266,267,272,275,278,279,280,283,284,],[-9,-10,-11,83,-12,-23,83,83,-51,-52,-53,-54,-55,-13,-24,-49,-71,-73,-50,83,83,-77,-78,83,83,-110,-83,-72,-76,-74,83,83,-75,-84,]),'IF':([33,34,35,60,61,65,72,73,76,77,78,79,80,87,91,99,109,111,124,157,193,213,214,239,240,266,267,272,275,278,279,280,283,284,],[-9,-10,-11,84,-12,-23,84,84,-51,-52,-53,-54,-55,-13,-24,-49,-71,-73,-50,84,84,-77,-78,84,84,-110,-83,-72,-76,-74,84,84,-75,-84,]),'WHILE':([33,34,35,60,61,65,72,73,76,77,78,79,80,87,91,99,109,111,124,157,193,213,214,239,240,266,267,272,275,278,279,280,283,284,],[-9,-10,-11,85,-12,-23,85,85,-51,-52,-53,-54,-55,-13,-24,-49,-71,-73,-50,85,85,-77,-78,85,85,-110,-83,-72,-76,-74,85,85,-75,-84,]),'FROM':([33,34,35,60,61,65,72,73,76,77,78,79,80,87,91,99,109,111,124,157,193,213,214,239,240,266,267,272,275,278,279,280,283,284,],[-9,-10,-11,86,-12,-23,86,86,-51,-52,-53,-54,-55,-13,-24,-49,-71,-73,-50,86,86,-77,-78,86,86,-110,-83,-72,-76,-74,86,86,-75,-84,]),'END':([47,],[59,]),'SEMICOLON':([49,50,51,52,62,63,66,74,100,105,114,115,116,117,127,128,129,130,131,132,135,137,138,139,140,141,142,144,154,161,166,167,171,172,173,174,178,179,180,181,182,183,184,185,199,202,203,220,228,230,231,232,235,236,237,242,245,250,251,252,253,254,255,256,257,258,259,263,],[61,-111,65,-111,-17,-19,-25,99,124,-62,-18,-20,-112,-26,-120,-58,-85,-87,-89,-123,-94,-98,-99,-100,-120,-120,-120,-60,-21,-65,-103,-120,-91,-101,-120,-102,-105,-106,-107,-59,-61,-63,213,214,-67,-60,-104,-113,-66,-126,-125,-124,-122,-122,-128,-22,264,-68,-86,-88,-90,-92,-93,-95,-96,-97,-64,269,]),'COMMA':([50,52,62,63,66,105,116,127,129,130,131,132,135,137,138,139,140,141,142,144,148,149,154,158,161,163,166,167,171,172,173,174,178,179,180,182,183,195,196,199,202,203,220,226,228,230,231,232,235,236,237,242,249,250,251,252,253,254,255,256,257,258,259,265,271,],[-111,-111,88,89,92,-62,-112,-120,-85,-87,-89,-123,-94,-98,-99,-100,-120,-120,-120,-60,186,187,-21,-111,-65,200,-103,-120,-91,-101,-120,-102,-105,-106,-107,-61,-63,224,225,-67,-60,-104,-113,-114,-66,-126,-125,-124,-122,-122,-128,-22,-43,-68,-86,-88,-90,-92,-93,-95,-96,-97,-64,-115,-44,]),'LBRACKET':([50,81,116,127,144,158,173,183,202,226,],[64,106,153,106,106,197,106,212,106,248,]),'LPAREN':([55,56,67,68,82,83,84,85,86,101,102,106,108,110,112,125,127,136,143,164,168,169,170,175,176,177,186,187,200,201,202,204,205,206,207,208,209,210,212,219,233,234,241,273,],[-116,-116,93,94,107,108,110,112,113,125,136,136,136,136,136,136,125,-127,136,201,-121,-121,-121,-121,-121,136,136,136,136,136,201,136,136,136,-121,-121,136,136,136,241,136,136,136,110,]),'CTEI':([64,102,106,108,110,112,125,133,134,136,143,153,168,169,170,175,176,177,186,187,200,201,204,205,206,207,208,209,210,212,233,234,241,],[90,140,140,140,140,140,140,140,140,-127,140,191,-121,-121,-121,-121,-121,140,140,140,140,140,140,140,140,-121,-121,140,140,140,140,140,140,]),'RETURN':([73,76,77,78,79,80,98,99,109,111,124,194,213,214,221,266,267,272,275,278,283,284,],[-56,-51,-52,-53,-54,-55,-57,-49,-71,-73,-50,223,-77,-78,244,-110,-83,-72,-76,-74,-75,-84,]),'EQUAL':([81,103,105,144,182,183,259,],[102,143,-62,-60,-61,-63,-64,]),'POINT':([81,101,127,173,],[104,126,165,104,]),'RBRACKET':([90,105,127,129,130,131,132,135,137,138,139,140,141,142,144,145,161,166,167,171,172,173,174,178,179,180,182,183,191,197,199,202,203,228,230,231,232,235,236,237,238,248,250,251,252,253,254,255,256,257,258,259,],[116,-62,-120,-85,-87,-89,-123,-94,-98,-99,-100,-120,-120,-120,-60,183,-65,-103,-120,-91,-101,-120,-102,-105,-106,-107,-61,-63,220,226,-67,-60,-104,-66,-126,-125,-124,-122,-122,-128,259,265,-68,-86,-88,-90,-92,-93,-95,-96,-97,-64,]),'RPAREN':([93,94,105,118,122,125,127,128,129,130,131,132,135,137,138,139,140,141,142,144,146,147,148,149,150,151,152,158,161,162,163,166,167,171,172,173,174,178,179,180,181,182,183,195,196,199,201,202,203,211,215,216,226,227,228,229,230,231,232,235,236,237,246,247,249,250,251,252,253,254,255,256,257,258,259,262,265,271,],[119,121,-62,155,160,161,-120,-58,-85,-87,-89,-123,-94,-98,-99,-100,-120,-120,-120,-60,184,185,-79,-81,188,189,190,-111,-65,199,-69,-103,-120,-91,-101,-120,-102,-105,-106,-107,-59,-61,-63,-39,-41,-67,228,-60,-104,237,-80,-82,-114,-70,-66,250,-126,-125,-124,-122,-122,-128,-40,-42,-43,-68,-86,-88,-90,-92,-93,-95,-96,-97,-64,268,-115,-44,]),'PLUS':([102,105,106,108,110,112,125,127,132,135,136,137,138,139,140,141,142,143,144,161,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,183,186,187,199,200,201,202,203,204,205,206,207,208,209,210,212,228,233,234,235,236,237,241,250,256,257,258,259,],[133,-62,133,133,133,133,133,-120,-123,-94,-127,-98,-99,-100,-120,-120,-120,133,-60,-65,-103,-120,-121,-121,-121,207,-101,-120,-102,-121,-121,133,-105,-106,-107,-61,-63,133,133,-67,133,133,-60,-104,133,133,133,-121,-121,133,133,133,-66,133,133,-122,-122,-128,133,-68,-95,-96,-97,-64,]),'MINUS':([102,105,106,108,110,112,125,127,132,135,136,137,138,139,140,141,142,143,144,161,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,183,186,187,199,200,201,202,203,204,205,206,207,208,209,210,212,228,233,234,235,236,237,241,250,256,257,258,259,],[134,-62,134,134,134,134,134,-120,-123,-94,-127,-98,-99,-100,-120,-120,-120,134,-60,-65,-103,-120,-121,-121,-121,208,-101,-120,-102,-121,-121,134,-105,-106,-107,-61,-63,134,134,-67,134,134,-60,-104,134,134,134,-121,-121,134,134,134,-66,134,134,-122,-122,-128,134,-68,-95,-96,-97,-64,]),'CTEF':([102,106,108,110,112,125,133,134,136,143,168,169,170,175,176,177,186,187,200,201,204,205,206,207,208,209,210,212,233,234,241,],[141,141,141,141,141,141,141,141,-127,141,-121,-121,-121,-121,-121,141,141,141,141,141,141,141,141,-121,-121,141,141,141,141,141,141,]),'CTECHAR':([102,106,108,110,112,125,133,134,136,143,168,169,170,175,176,177,186,187,200,201,204,205,206,207,208,209,210,212,233,234,241,],[142,142,142,142,142,142,142,142,-127,142,-121,-121,-121,-121,-121,142,142,142,142,142,142,142,142,-121,-121,142,142,142,142,142,142,]),'TIMES':([105,127,135,137,138,139,140,141,142,144,161,166,167,172,173,174,178,179,180,182,183,199,202,203,228,237,250,258,259,],[-62,-120,175,-98,-99,-100,-120,-120,-120,-60,-65,-103,-120,-101,-120,-102,-105,-106,-107,-61,-63,-67,-60,-104,-66,-128,-68,-97,-64,]),'DIVIDE':([105,127,135,137,138,139,140,141,142,144,161,166,167,172,173,174,178,179,180,182,183,199,202,203,228,237,250,258,259,],[-62,-120,176,-98,-99,-100,-120,-120,-120,-60,-65,-103,-120,-101,-120,-102,-105,-106,-107,-61,-63,-67,-60,-104,-66,-128,-68,-97,-64,]),'RELOP':([105,127,131,132,135,137,138,139,140,141,142,144,161,166,167,171,172,173,174,178,179,180,182,183,199,202,203,228,235,236,237,250,254,255,256,257,258,259,],[-62,-120,170,-123,-94,-98,-99,-100,-120,-120,-120,-60,-65,-103,-120,-91,-101,-120,-102,-105,-106,-107,-61,-63,-67,-60,-104,-66,-122,-122,-128,-68,-92,-93,-95,-96,-97,-64,]),'AND':([105,127,130,131,132,135,137,138,139,140,141,142,144,161,166,167,171,172,173,174,178,179,180,182,183,199,202,203,228,232,235,236,237,250,253,254,255,256,257,258,259,],[-62,-120,169,-89,-123,-94,-98,-99,-100,-120,-120,-120,-60,-65,-103,-120,-91,-101,-120,-102,-105,-106,-107,-61,-63,-67,-60,-104,-66,-124,-122,-122,-128,-68,-90,-92,-93,-95,-96,-97,-64,]),'OR':([105,127,129,130,131,132,135,137,138,139,140,141,142,144,161,166,167,171,172,173,174,178,179,180,182,183,199,202,203,228,231,232,235,236,237,250,252,253,254,255,256,257,258,259,],[-62,-120,168,-87,-89,-123,-94,-98,-99,-100,-120,-120,-120,-60,-65,-103,-120,-91,-101,-120,-102,-105,-106,-107,-61,-63,-67,-60,-104,-66,-125,-124,-122,-122,-128,-68,-88,-90,-92,-93,-95,-96,-97,-64,]),'CTESTRING':([108,186,187,],[149,149,149,]),'THEN':([188,],[217,]),'DO':([189,268,],[218,276,]),'UNTIL':([190,],[219,]),'ELIF':([266,],[273,]),'ELSE':([266,],[274,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program_classes':([4,],[5,]),'classes':([4,12,],[6,16,]),'empty':([4,15,20,266,],[7,22,32,275,]),'add_class':([9,10,],[11,13,]),'classes_aux':([10,],[12,]),'program_body':([15,],[19,]),'program_body_vars':([15,],[20,]),'dec_vars':([15,17,46,60,157,],[21,24,57,72,193,]),'functions':([17,20,24,43,46,57,],[25,31,41,54,58,69,]),'add_inherit_class':([18,],[27,]),'init':([19,],[28,]),'program_body_funct':([20,],[30,]),'dec_vars_aux':([23,61,65,],[33,87,91,]),'dec_vars_simple':([23,61,65,],[34,34,34,]),'dec_vars_complex':([23,61,65,],[35,35,35,]),'simple_type':([23,26,61,65,93,94,224,225,],[36,45,36,36,120,120,120,120,]),'functions_aux':([26,],[43,]),'add_init':([29,],[48,]),'vars_simple_type':([36,88,89,],[49,114,115,]),'vars_complex_type':([37,92,],[51,117,]),'add_variable':([50,52,158,],[62,66,195,]),'vars_simple_type_aux':([50,],[63,]),'add_function':([55,56,],[67,68,]),'statutes_aux':([60,72,73,157,193,239,240,279,280,],[71,97,98,194,221,260,261,281,282,]),'statutes':([60,72,73,157,193,239,240,279,280,],[73,73,73,73,73,73,73,73,73,]),'assignation':([60,72,73,113,157,193,239,240,279,280,],[74,74,74,152,74,74,74,74,74,74,]),'read':([60,72,73,157,193,239,240,279,280,],[76,76,76,76,76,76,76,76,76,]),'write':([60,72,73,157,193,239,240,279,280,],[77,77,77,77,77,77,77,77,77,]),'condition':([60,72,73,157,193,239,240,279,280,],[78,78,78,78,78,78,78,78,78,]),'while':([60,72,73,157,193,239,240,279,280,],[79,79,79,79,79,79,79,79,79,]),'for':([60,72,73,157,193,239,240,279,280,],[80,80,80,80,80,80,80,80,80,]),'call':([75,102,106,108,110,112,125,143,177,186,187,200,201,204,205,206,209,210,212,233,234,241,],[100,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,]),'var_aux':([81,127,173,],[103,167,167,]),'var_aux_2':([81,127,144,173,202,],[105,105,182,105,182,]),'condition_aux':([84,273,],[109,278,]),'condition_aux_2':([84,273,],[111,111,]),'params':([93,94,224,225,],[118,122,246,247,]),'exp':([102,106,108,110,112,125,143,177,186,187,200,201,204,212,241,],[128,145,148,150,151,163,181,211,148,148,163,163,230,238,262,]),'n_exp':([102,106,108,110,112,125,143,177,186,187,200,201,204,205,212,241,],[129,129,129,129,129,129,129,129,129,129,129,129,129,231,129,129,]),'l_exp':([102,106,108,110,112,125,143,177,186,187,200,201,204,205,212,241,],[130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,]),'a_exp':([102,106,108,110,112,125,143,177,186,187,200,201,204,205,206,212,233,234,241,],[131,131,131,131,131,131,131,131,131,131,131,131,131,131,232,131,254,255,131,]),'term':([102,106,108,110,112,125,143,177,186,187,200,201,204,205,206,209,210,212,233,234,241,],[132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,235,236,132,132,132,132,]),'factor':([102,106,108,110,112,125,143,177,186,187,200,201,204,205,206,209,210,212,233,234,241,],[135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,]),'factor_aux':([102,106,108,110,112,125,143,177,186,187,200,201,204,205,206,209,210,212,233,234,241,],[138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,]),'cte':([102,106,108,110,112,125,133,134,143,177,186,187,200,201,204,205,206,209,210,212,233,234,241,],[139,139,139,139,139,139,172,174,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,]),'write_aux':([108,186,187,],[147,215,216,]),'add_array_variable':([116,],[154,]),'body':([119,121,155,160,],[156,159,192,198,]),'call_aux':([125,200,201,],[162,227,229,]),'push_var':([127,140,141,142,167,173,],[166,178,179,180,203,166,]),'pop_op_art_n2':([132,],[171,]),'push_paren':([136,],[177,]),'params_aux':([158,],[196,]),'push_op':([168,169,170,175,176,207,208,],[204,205,206,209,210,233,234,]),'add_matrix_variable':([220,],[242,]),'add_array_var_params':([226,],[249,]),'pop_op_or':([230,],[251,]),'pop_op_and':([231,],[252,]),'pop_op_relop':([232,],[253,]),'pop_op_art_n1':([235,236,],[256,257,]),'pop_paren':([237,],[258,]),'add_matrix_var_params':([265,],[271,]),'condition_aux_3':([266,],[272,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID TWOPOINTS program_classes MAIN add_class LBRACE program_body init RBRACE END','program',11,'p_program','parser.py',12),
  ('program_classes -> classes','program_classes',1,'p_program_classes','parser.py',16),
  ('program_classes -> empty','program_classes',1,'p_program_classes','parser.py',17),
  ('program_body -> program_body_vars program_body_funct','program_body',2,'p_program_body','parser.py',21),
  ('program_body_vars -> dec_vars','program_body_vars',1,'p_program_body_vars','parser.py',25),
  ('program_body_vars -> empty','program_body_vars',1,'p_program_body_vars','parser.py',26),
  ('program_body_funct -> functions','program_body_funct',1,'p_program_body_funct','parser.py',30),
  ('program_body_funct -> empty','program_body_funct',1,'p_program_body_funct','parser.py',31),
  ('dec_vars -> VAR dec_vars_aux','dec_vars',2,'p_dec_vars','parser.py',35),
  ('dec_vars_aux -> dec_vars_simple','dec_vars_aux',1,'p_dec_vars_aux','parser.py',39),
  ('dec_vars_aux -> dec_vars_complex','dec_vars_aux',1,'p_dec_vars_aux','parser.py',40),
  ('dec_vars_simple -> simple_type vars_simple_type SEMICOLON','dec_vars_simple',3,'p_dec_vars_simple','parser.py',44),
  ('dec_vars_simple -> simple_type vars_simple_type SEMICOLON dec_vars_aux','dec_vars_simple',4,'p_dec_vars_simple','parser.py',45),
  ('simple_type -> INT','simple_type',1,'p_simple_type','parser.py',49),
  ('simple_type -> FLOAT','simple_type',1,'p_simple_type','parser.py',50),
  ('simple_type -> CHAR','simple_type',1,'p_simple_type','parser.py',51),
  ('vars_simple_type -> ID add_variable','vars_simple_type',2,'p_vars_simple_type','parser.py',55),
  ('vars_simple_type -> ID add_variable COMMA vars_simple_type','vars_simple_type',4,'p_vars_simple_type','parser.py',56),
  ('vars_simple_type -> ID vars_simple_type_aux','vars_simple_type',2,'p_vars_simple_type','parser.py',57),
  ('vars_simple_type -> ID vars_simple_type_aux COMMA vars_simple_type','vars_simple_type',4,'p_vars_simple_type','parser.py',58),
  ('vars_simple_type_aux -> LBRACKET CTEI RBRACKET add_array_variable','vars_simple_type_aux',4,'p_vars_simple_type_aux','parser.py',62),
  ('vars_simple_type_aux -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET add_matrix_variable','vars_simple_type_aux',7,'p_vars_simple_type_aux','parser.py',63),
  ('dec_vars_complex -> OBJECT vars_complex_type SEMICOLON','dec_vars_complex',3,'p_dec_vars_complex','parser.py',67),
  ('dec_vars_complex -> OBJECT vars_complex_type SEMICOLON dec_vars_aux','dec_vars_complex',4,'p_dec_vars_complex','parser.py',68),
  ('vars_complex_type -> ID add_variable','vars_complex_type',2,'p_vars_complex_type','parser.py',72),
  ('vars_complex_type -> ID add_variable COMMA vars_complex_type','vars_complex_type',4,'p_vars_complex_type','parser.py',73),
  ('classes -> CLASS OBJECT classes_aux','classes',3,'p_classes','parser.py',77),
  ('classes -> CLASS OBJECT classes_aux classes','classes',4,'p_classes','parser.py',78),
  ('classes_aux -> add_class LBRACE dec_vars functions RBRACE','classes_aux',5,'p_classes_aux','parser.py',82),
  ('classes_aux -> add_class LBRACE functions RBRACE','classes_aux',4,'p_classes_aux','parser.py',83),
  ('classes_aux -> INHERITS OBJECT add_inherit_class LBRACE dec_vars functions RBRACE','classes_aux',7,'p_classes_aux','parser.py',84),
  ('classes_aux -> INHERITS OBJECT add_inherit_class LBRACE functions RBRACE','classes_aux',6,'p_classes_aux','parser.py',85),
  ('functions -> FUNCT functions_aux','functions',2,'p_functions','parser.py',89),
  ('functions -> FUNCT functions_aux functions','functions',3,'p_functions','parser.py',90),
  ('functions_aux -> VOID ID add_function LPAREN params RPAREN body','functions_aux',7,'p_functions_aux','parser.py',94),
  ('functions_aux -> VOID ID add_function LPAREN RPAREN body','functions_aux',6,'p_functions_aux','parser.py',95),
  ('functions_aux -> simple_type ID add_function LPAREN RPAREN body','functions_aux',6,'p_functions_aux','parser.py',96),
  ('functions_aux -> simple_type ID add_function LPAREN params RPAREN body','functions_aux',7,'p_functions_aux','parser.py',97),
  ('params -> simple_type ID add_variable','params',3,'p_params','parser.py',101),
  ('params -> simple_type ID add_variable COMMA params','params',5,'p_params','parser.py',102),
  ('params -> simple_type ID params_aux','params',3,'p_params','parser.py',103),
  ('params -> simple_type ID params_aux COMMA params','params',5,'p_params','parser.py',104),
  ('params_aux -> LBRACKET RBRACKET add_array_var_params','params_aux',3,'p_params_aux','parser.py',108),
  ('params_aux -> LBRACKET RBRACKET LBRACKET RBRACKET add_matrix_var_params','params_aux',5,'p_params_aux','parser.py',109),
  ('body -> LBRACE dec_vars statutes_aux RBRACE','body',4,'p_body','parser.py',112),
  ('body -> LBRACE statutes_aux RBRACE','body',3,'p_body','parser.py',113),
  ('body -> LBRACE statutes_aux RETURN ID SEMICOLON RBRACE','body',6,'p_body','parser.py',114),
  ('body -> LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE','body',7,'p_body','parser.py',115),
  ('statutes -> assignation SEMICOLON','statutes',2,'p_statutes','parser.py',119),
  ('statutes -> CALL call SEMICOLON','statutes',3,'p_statutes','parser.py',120),
  ('statutes -> read','statutes',1,'p_statutes','parser.py',121),
  ('statutes -> write','statutes',1,'p_statutes','parser.py',122),
  ('statutes -> condition','statutes',1,'p_statutes','parser.py',123),
  ('statutes -> while','statutes',1,'p_statutes','parser.py',124),
  ('statutes -> for','statutes',1,'p_statutes','parser.py',125),
  ('statutes_aux -> statutes','statutes_aux',1,'p_statutes_aux','parser.py',129),
  ('statutes_aux -> statutes statutes_aux','statutes_aux',2,'p_statutes_aux','parser.py',130),
  ('assignation -> ID EQUAL exp','assignation',3,'p_assignation','parser.py',134),
  ('assignation -> ID var_aux EQUAL exp','assignation',4,'p_assignation','parser.py',135),
  ('var_aux -> POINT ID','var_aux',2,'p_var_aux','parser.py',139),
  ('var_aux -> POINT ID var_aux_2','var_aux',3,'p_var_aux','parser.py',140),
  ('var_aux -> var_aux_2','var_aux',1,'p_var_aux','parser.py',141),
  ('var_aux_2 -> LBRACKET exp RBRACKET','var_aux_2',3,'p_var_aux_2','parser.py',145),
  ('var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET','var_aux_2',6,'p_var_aux_2','parser.py',146),
  ('call -> ID LPAREN RPAREN','call',3,'p_call','parser.py',150),
  ('call -> ID POINT ID LPAREN RPAREN','call',5,'p_call','parser.py',151),
  ('call -> ID LPAREN call_aux RPAREN','call',4,'p_call','parser.py',152),
  ('call -> ID POINT ID LPAREN call_aux RPAREN','call',6,'p_call','parser.py',153),
  ('call_aux -> exp','call_aux',1,'p_call_aux','parser.py',157),
  ('call_aux -> exp COMMA call_aux','call_aux',3,'p_call_aux','parser.py',158),
  ('condition -> IF condition_aux','condition',2,'p_condition','parser.py',162),
  ('condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3','condition_aux',8,'p_condition_aux','parser.py',166),
  ('condition_aux -> condition_aux_2','condition_aux',1,'p_condition_aux','parser.py',167),
  ('condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux','condition_aux_2',9,'p_condition_aux_2','parser.py',171),
  ('condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE','condition_aux_3',4,'p_condition_aux_3','parser.py',175),
  ('condition_aux_3 -> empty','condition_aux_3',1,'p_condition_aux_3','parser.py',176),
  ('read -> READ LPAREN ID RPAREN SEMICOLON','read',5,'p_read','parser.py',180),
  ('write -> WRITE LPAREN write_aux RPAREN SEMICOLON','write',5,'p_write','parser.py',184),
  ('write_aux -> exp','write_aux',1,'p_write_aux','parser.py',188),
  ('write_aux -> exp COMMA write_aux','write_aux',3,'p_write_aux','parser.py',189),
  ('write_aux -> CTESTRING','write_aux',1,'p_write_aux','parser.py',190),
  ('write_aux -> CTESTRING COMMA write_aux','write_aux',3,'p_write_aux','parser.py',191),
  ('while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE','while',8,'p_while','parser.py',195),
  ('for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE','for',12,'p_for','parser.py',199),
  ('exp -> n_exp','exp',1,'p_exp','parser.py',203),
  ('exp -> n_exp OR push_op exp pop_op_or','exp',5,'p_exp','parser.py',204),
  ('n_exp -> l_exp','n_exp',1,'p_n_exp','parser.py',208),
  ('n_exp -> l_exp AND push_op n_exp pop_op_and','n_exp',5,'p_n_exp','parser.py',209),
  ('l_exp -> a_exp','l_exp',1,'p_l_exp','parser.py',213),
  ('l_exp -> a_exp RELOP push_op a_exp pop_op_relop','l_exp',5,'p_l_exp','parser.py',214),
  ('a_exp -> term pop_op_art_n2','a_exp',2,'p_a_exp','parser.py',218),
  ('a_exp -> term pop_op_art_n2 PLUS push_op a_exp','a_exp',5,'p_a_exp','parser.py',219),
  ('a_exp -> term pop_op_art_n2 MINUS push_op a_exp','a_exp',5,'p_a_exp','parser.py',220),
  ('term -> factor','term',1,'p_term','parser.py',224),
  ('term -> factor TIMES push_op term pop_op_art_n1','term',5,'p_term','parser.py',225),
  ('term -> factor DIVIDE push_op term pop_op_art_n1','term',5,'p_term','parser.py',226),
  ('factor -> LPAREN push_paren exp RPAREN pop_paren','factor',5,'p_factor','parser.py',230),
  ('factor -> call','factor',1,'p_factor','parser.py',231),
  ('factor -> factor_aux','factor',1,'p_factor','parser.py',232),
  ('factor_aux -> cte','factor_aux',1,'p_factor_aux','parser.py',236),
  ('factor_aux -> PLUS cte','factor_aux',2,'p_factor_aux','parser.py',237),
  ('factor_aux -> MINUS cte','factor_aux',2,'p_factor_aux','parser.py',238),
  ('cte -> ID push_var','cte',2,'p_cte','parser.py',242),
  ('cte -> ID var_aux push_var','cte',3,'p_cte','parser.py',243),
  ('cte -> CTEI push_var','cte',2,'p_cte','parser.py',244),
  ('cte -> CTEF push_var','cte',2,'p_cte','parser.py',245),
  ('cte -> CTECHAR push_var','cte',2,'p_cte','parser.py',246),
  ('init -> INIT add_init LBRACE statutes_aux RBRACE','init',5,'p_init','parser.py',250),
  ('init -> INIT add_init LBRACE dec_vars statutes_aux RBRACE','init',6,'p_init','parser.py',251),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',255),
  ('add_variable -> <empty>','add_variable',0,'p_add_variable','parser.py',264),
  ('add_array_variable -> <empty>','add_array_variable',0,'p_add_array_variable','parser.py',269),
  ('add_matrix_variable -> <empty>','add_matrix_variable',0,'p_add_matrix_variable','parser.py',274),
  ('add_array_var_params -> <empty>','add_array_var_params',0,'p_add_array_var_params','parser.py',279),
  ('add_matrix_var_params -> <empty>','add_matrix_var_params',0,'p_add_matrix_var_params','parser.py',284),
  ('add_function -> <empty>','add_function',0,'p_add_function','parser.py',289),
  ('add_init -> <empty>','add_init',0,'p_add_init','parser.py',293),
  ('add_class -> <empty>','add_class',0,'p_add_class','parser.py',297),
  ('add_inherit_class -> <empty>','add_inherit_class',0,'p_add_inherit_class','parser.py',301),
  ('push_var -> <empty>','push_var',0,'p_push_var','parser.py',307),
  ('push_op -> <empty>','push_op',0,'p_push_op','parser.py',311),
  ('pop_op_art_n1 -> <empty>','pop_op_art_n1',0,'p_pop_op_art_n1','parser.py',315),
  ('pop_op_art_n2 -> <empty>','pop_op_art_n2',0,'p_pop_op_art_n2','parser.py',319),
  ('pop_op_relop -> <empty>','pop_op_relop',0,'p_pop_op_relop','parser.py',323),
  ('pop_op_and -> <empty>','pop_op_and',0,'p_pop_op_and','parser.py',327),
  ('pop_op_or -> <empty>','pop_op_or',0,'p_pop_op_or','parser.py',331),
  ('push_paren -> <empty>','push_paren',0,'p_push_paren','parser.py',335),
  ('pop_paren -> <empty>','pop_paren',0,'p_pop_paren','parser.py',339),
]
