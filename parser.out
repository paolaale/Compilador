Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID TWOPOINTS program_classes MAIN add_class LBRACE program_body init RBRACE END
Rule 2     program_classes -> classes
Rule 3     program_classes -> empty
Rule 4     program_body -> program_body_vars program_body_funct
Rule 5     program_body_vars -> dec_vars
Rule 6     program_body_vars -> empty
Rule 7     program_body_funct -> functions
Rule 8     program_body_funct -> empty
Rule 9     dec_vars -> VAR dec_vars_aux
Rule 10    dec_vars_aux -> dec_vars_simple_aux
Rule 11    dec_vars_simple_aux -> simple_type vars_simple_type SEMICOLON
Rule 12    dec_vars_simple_aux -> simple_type vars_simple_type SEMICOLON dec_vars_aux
Rule 13    vars_simple_type -> ID add_variable
Rule 14    vars_simple_type -> ID add_variable COMMA vars_simple_type
Rule 15    vars_simple_type -> ID vars_simple_type_aux
Rule 16    vars_simple_type -> ID vars_simple_type_aux COMMA vars_simple_type
Rule 17    vars_simple_type_aux -> LBRACKET CTEI RBRACKET add_array_variable
Rule 18    vars_simple_type_aux -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET add_matrix_variable
Rule 19    simple_type -> INT
Rule 20    simple_type -> FLOAT
Rule 21    simple_type -> CHAR
Rule 22    classes -> CLASS ID classes_aux
Rule 23    classes -> CLASS ID classes_aux classes
Rule 24    classes_aux -> add_class LBRACE dec_vars functions RBRACE
Rule 25    classes_aux -> add_class LBRACE functions RBRACE
Rule 26    classes_aux -> INHERITS ID add_inherit_class LBRACE dec_vars functions RBRACE
Rule 27    classes_aux -> INHERITS ID add_inherit_class LBRACE functions RBRACE
Rule 28    functions -> FUNCT functions_aux
Rule 29    functions -> FUNCT functions_aux functions
Rule 30    functions_aux -> VOID ID add_function LPAREN params RPAREN body
Rule 31    functions_aux -> VOID ID add_function LPAREN RPAREN body
Rule 32    functions_aux -> simple_type ID add_function LPAREN RPAREN body
Rule 33    functions_aux -> simple_type ID add_function LPAREN params RPAREN body
Rule 34    params -> simple_type ID add_variable
Rule 35    params -> simple_type ID add_variable COMMA params
Rule 36    params -> simple_type ID params_aux
Rule 37    params -> simple_type ID params_aux COMMA params
Rule 38    params_aux -> LBRACKET RBRACKET add_array_var_params
Rule 39    params_aux -> LBRACKET RBRACKET LBRACKET RBRACKET add_matrix_var_params
Rule 40    body -> LBRACE dec_vars statutes_aux RBRACE
Rule 41    body -> LBRACE statutes_aux RBRACE
Rule 42    body -> LBRACE statutes_aux RETURN ID SEMICOLON RBRACE
Rule 43    body -> LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE
Rule 44    statutes -> assignation SEMICOLON
Rule 45    statutes -> CALL call SEMICOLON
Rule 46    statutes -> read
Rule 47    statutes -> write
Rule 48    statutes -> condition
Rule 49    statutes -> while
Rule 50    statutes -> for
Rule 51    statutes_aux -> statutes
Rule 52    statutes_aux -> statutes statutes_aux
Rule 53    assignation -> ID push_var EQUAL push_op exp
Rule 54    assignation -> ID var_aux EQUAL exp
Rule 55    var_aux -> POINT ID
Rule 56    var_aux -> POINT ID var_aux_2
Rule 57    var_aux -> var_aux_2
Rule 58    var_aux_2 -> LBRACKET exp RBRACKET
Rule 59    var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET
Rule 60    call -> ID LPAREN RPAREN
Rule 61    call -> ID POINT ID LPAREN RPAREN
Rule 62    call -> ID LPAREN call_aux RPAREN
Rule 63    call -> ID POINT ID LPAREN call_aux RPAREN
Rule 64    call_aux -> exp
Rule 65    call_aux -> exp COMMA call_aux
Rule 66    condition -> IF condition_aux
Rule 67    condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3
Rule 68    condition_aux -> condition_aux_2
Rule 69    condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux
Rule 70    condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE
Rule 71    condition_aux_3 -> empty
Rule 72    read -> READ LPAREN ID RPAREN SEMICOLON
Rule 73    write -> WRITE LPAREN write_aux RPAREN SEMICOLON
Rule 74    write_aux -> exp
Rule 75    write_aux -> exp COMMA write_aux
Rule 76    write_aux -> CTESTRING
Rule 77    write_aux -> CTESTRING COMMA write_aux
Rule 78    while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
Rule 79    for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
Rule 80    exp -> n_exp
Rule 81    exp -> n_exp OR push_op exp pop_op
Rule 82    n_exp -> l_exp
Rule 83    n_exp -> l_exp AND push_op n_exp pop_op
Rule 84    l_exp -> a_exp
Rule 85    l_exp -> a_exp RELOP push_op a_exp pop_op
Rule 86    a_exp -> term
Rule 87    a_exp -> term PLUS push_op a_exp pop_op
Rule 88    a_exp -> term MINUS push_op a_exp pop_op
Rule 89    term -> factor
Rule 90    term -> factor TIMES push_op term pop_op
Rule 91    term -> factor DIVIDE push_op term pop_op
Rule 92    factor -> LPAREN push_paren exp RPAREN pop_paren
Rule 93    factor -> call
Rule 94    factor -> factor_aux
Rule 95    factor_aux -> cte
Rule 96    factor_aux -> PLUS cte
Rule 97    factor_aux -> MINUS cte
Rule 98    cte -> ID push_var
Rule 99    cte -> ID var_aux push_var
Rule 100   cte -> CTEI push_var
Rule 101   cte -> CTEF push_var
Rule 102   cte -> CTECHAR push_var
Rule 103   init -> INIT add_init LBRACE statutes_aux RBRACE
Rule 104   init -> INIT add_init LBRACE dec_vars statutes_aux RBRACE
Rule 105   empty -> <empty>
Rule 106   add_variable -> <empty>
Rule 107   add_array_variable -> <empty>
Rule 108   add_matrix_variable -> <empty>
Rule 109   add_array_var_params -> <empty>
Rule 110   add_matrix_var_params -> <empty>
Rule 111   add_function -> <empty>
Rule 112   add_init -> <empty>
Rule 113   add_class -> <empty>
Rule 114   add_inherit_class -> <empty>
Rule 115   push_var -> <empty>
Rule 116   push_op -> <empty>
Rule 117   pop_op -> <empty>
Rule 118   push_paren -> <empty>
Rule 119   pop_paren -> <empty>

Terminals, with rules where they appear

AND                  : 83
CALL                 : 45
CHAR                 : 21
CLASS                : 22 23
COMMA                : 14 16 35 37 65 75 77
CTECHAR              : 102
CTEF                 : 101
CTEI                 : 17 18 18 100
CTESTRING            : 76 77
DIVIDE               : 91
DO                   : 78 79
ELIF                 : 69
ELSE                 : 70
END                  : 1
EQUAL                : 53 54
FLOAT                : 20
FROM                 : 79
FUNCT                : 28 29
ID                   : 1 13 14 15 16 22 23 26 27 30 31 32 33 34 35 36 37 42 43 53 54 55 56 60 61 61 62 63 63 72 98 99
IF                   : 66
INHERITS             : 26 27
INIT                 : 103 104
INT                  : 19
LBRACE               : 1 24 25 26 27 40 41 42 43 67 69 70 78 79 103 104
LBRACKET             : 17 18 18 38 39 39 58 59 59
LPAREN               : 30 31 32 33 60 61 62 63 67 69 72 73 78 79 79 92
MAIN                 : 1
MINUS                : 88 97
OR                   : 81
PLUS                 : 87 96
POINT                : 55 56 61 63
PROGRAM              : 1
RBRACE               : 1 24 25 26 27 40 41 42 43 67 69 70 78 79 103 104
RBRACKET             : 17 18 18 38 39 39 58 59 59
READ                 : 72
RELOP                : 85
RETURN               : 42 43
RPAREN               : 30 31 32 33 60 61 62 63 67 69 72 73 78 79 79 92
SEMICOLON            : 11 12 42 43 44 45 72 73
THEN                 : 67 69
TIMES                : 90
TWOPOINTS            : 1
UNTIL                : 79
VAR                  : 9
VOID                 : 30 31
WHILE                : 78
WRITE                : 73
error                : 

Nonterminals, with rules where they appear

a_exp                : 84 85 85 87 88
add_array_var_params : 38
add_array_variable   : 17
add_class            : 1 24 25
add_function         : 30 31 32 33
add_inherit_class    : 26 27
add_init             : 103 104
add_matrix_var_params : 39
add_matrix_variable  : 18
add_variable         : 13 14 34 35
assignation          : 44 79
body                 : 30 31 32 33
call                 : 45 93
call_aux             : 62 63 65
classes              : 2 23
classes_aux          : 22 23
condition            : 48
condition_aux        : 66 69
condition_aux_2      : 68
condition_aux_3      : 67
cte                  : 95 96 97
dec_vars             : 5 24 26 40 43 104
dec_vars_aux         : 9 12
dec_vars_simple_aux  : 10
empty                : 3 6 8 71
exp                  : 53 54 58 59 59 64 65 67 69 74 75 78 79 81 92
factor               : 89 90 91
factor_aux           : 94
for                  : 50
functions            : 7 24 25 26 27 29
functions_aux        : 28 29
init                 : 1
l_exp                : 82 83
n_exp                : 80 81 83
params               : 30 33 35 37
params_aux           : 36 37
pop_op               : 81 83 85 87 88 90 91
pop_paren            : 92
program              : 0
program_body         : 1
program_body_funct   : 4
program_body_vars    : 4
program_classes      : 1
push_op              : 53 81 83 85 87 88 90 91
push_paren           : 92
push_var             : 53 98 99 100 101 102
read                 : 46
simple_type          : 11 12 32 33 34 35 36 37
statutes             : 51 52
statutes_aux         : 40 41 42 43 52 67 69 70 78 79 103 104
term                 : 86 87 88 90 91
var_aux              : 54 99
var_aux_2            : 56 57
vars_simple_type     : 11 12 14 16
vars_simple_type_aux : 15 16
while                : 49
write                : 47
write_aux            : 73 75 77

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID TWOPOINTS program_classes MAIN add_class LBRACE program_body init RBRACE END

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID TWOPOINTS program_classes MAIN add_class LBRACE program_body init RBRACE END

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . TWOPOINTS program_classes MAIN add_class LBRACE program_body init RBRACE END

    TWOPOINTS       shift and go to state 4


state 4

    (1) program -> PROGRAM ID TWOPOINTS . program_classes MAIN add_class LBRACE program_body init RBRACE END
    (2) program_classes -> . classes
    (3) program_classes -> . empty
    (22) classes -> . CLASS ID classes_aux
    (23) classes -> . CLASS ID classes_aux classes
    (105) empty -> .

    CLASS           shift and go to state 8
    MAIN            reduce using rule 105 (empty -> .)

    program_classes                shift and go to state 5
    classes                        shift and go to state 6
    empty                          shift and go to state 7

state 5

    (1) program -> PROGRAM ID TWOPOINTS program_classes . MAIN add_class LBRACE program_body init RBRACE END

    MAIN            shift and go to state 9


state 6

    (2) program_classes -> classes .

    MAIN            reduce using rule 2 (program_classes -> classes .)


state 7

    (3) program_classes -> empty .

    MAIN            reduce using rule 3 (program_classes -> empty .)


state 8

    (22) classes -> CLASS . ID classes_aux
    (23) classes -> CLASS . ID classes_aux classes

    ID              shift and go to state 10


state 9

    (1) program -> PROGRAM ID TWOPOINTS program_classes MAIN . add_class LBRACE program_body init RBRACE END
    (113) add_class -> .

    LBRACE          reduce using rule 113 (add_class -> .)

    add_class                      shift and go to state 11

state 10

    (22) classes -> CLASS ID . classes_aux
    (23) classes -> CLASS ID . classes_aux classes
    (24) classes_aux -> . add_class LBRACE dec_vars functions RBRACE
    (25) classes_aux -> . add_class LBRACE functions RBRACE
    (26) classes_aux -> . INHERITS ID add_inherit_class LBRACE dec_vars functions RBRACE
    (27) classes_aux -> . INHERITS ID add_inherit_class LBRACE functions RBRACE
    (113) add_class -> .

    INHERITS        shift and go to state 14
    LBRACE          reduce using rule 113 (add_class -> .)

    classes_aux                    shift and go to state 12
    add_class                      shift and go to state 13

state 11

    (1) program -> PROGRAM ID TWOPOINTS program_classes MAIN add_class . LBRACE program_body init RBRACE END

    LBRACE          shift and go to state 15


state 12

    (22) classes -> CLASS ID classes_aux .
    (23) classes -> CLASS ID classes_aux . classes
    (22) classes -> . CLASS ID classes_aux
    (23) classes -> . CLASS ID classes_aux classes

    MAIN            reduce using rule 22 (classes -> CLASS ID classes_aux .)
    CLASS           shift and go to state 8

    classes                        shift and go to state 16

state 13

    (24) classes_aux -> add_class . LBRACE dec_vars functions RBRACE
    (25) classes_aux -> add_class . LBRACE functions RBRACE

    LBRACE          shift and go to state 17


state 14

    (26) classes_aux -> INHERITS . ID add_inherit_class LBRACE dec_vars functions RBRACE
    (27) classes_aux -> INHERITS . ID add_inherit_class LBRACE functions RBRACE

    ID              shift and go to state 18


state 15

    (1) program -> PROGRAM ID TWOPOINTS program_classes MAIN add_class LBRACE . program_body init RBRACE END
    (4) program_body -> . program_body_vars program_body_funct
    (5) program_body_vars -> . dec_vars
    (6) program_body_vars -> . empty
    (9) dec_vars -> . VAR dec_vars_aux
    (105) empty -> .

    VAR             shift and go to state 23
    FUNCT           reduce using rule 105 (empty -> .)
    INIT            reduce using rule 105 (empty -> .)

    program_body                   shift and go to state 19
    program_body_vars              shift and go to state 20
    dec_vars                       shift and go to state 21
    empty                          shift and go to state 22

state 16

    (23) classes -> CLASS ID classes_aux classes .

    MAIN            reduce using rule 23 (classes -> CLASS ID classes_aux classes .)


state 17

    (24) classes_aux -> add_class LBRACE . dec_vars functions RBRACE
    (25) classes_aux -> add_class LBRACE . functions RBRACE
    (9) dec_vars -> . VAR dec_vars_aux
    (28) functions -> . FUNCT functions_aux
    (29) functions -> . FUNCT functions_aux functions

    VAR             shift and go to state 23
    FUNCT           shift and go to state 26

    dec_vars                       shift and go to state 24
    functions                      shift and go to state 25

state 18

    (26) classes_aux -> INHERITS ID . add_inherit_class LBRACE dec_vars functions RBRACE
    (27) classes_aux -> INHERITS ID . add_inherit_class LBRACE functions RBRACE
    (114) add_inherit_class -> .

    LBRACE          reduce using rule 114 (add_inherit_class -> .)

    add_inherit_class              shift and go to state 27

state 19

    (1) program -> PROGRAM ID TWOPOINTS program_classes MAIN add_class LBRACE program_body . init RBRACE END
    (103) init -> . INIT add_init LBRACE statutes_aux RBRACE
    (104) init -> . INIT add_init LBRACE dec_vars statutes_aux RBRACE

    INIT            shift and go to state 29

    init                           shift and go to state 28

state 20

    (4) program_body -> program_body_vars . program_body_funct
    (7) program_body_funct -> . functions
    (8) program_body_funct -> . empty
    (28) functions -> . FUNCT functions_aux
    (29) functions -> . FUNCT functions_aux functions
    (105) empty -> .

    FUNCT           shift and go to state 26
    INIT            reduce using rule 105 (empty -> .)

    program_body_funct             shift and go to state 30
    functions                      shift and go to state 31
    empty                          shift and go to state 32

state 21

    (5) program_body_vars -> dec_vars .

    FUNCT           reduce using rule 5 (program_body_vars -> dec_vars .)
    INIT            reduce using rule 5 (program_body_vars -> dec_vars .)


state 22

    (6) program_body_vars -> empty .

    FUNCT           reduce using rule 6 (program_body_vars -> empty .)
    INIT            reduce using rule 6 (program_body_vars -> empty .)


state 23

    (9) dec_vars -> VAR . dec_vars_aux
    (10) dec_vars_aux -> . dec_vars_simple_aux
    (11) dec_vars_simple_aux -> . simple_type vars_simple_type SEMICOLON
    (12) dec_vars_simple_aux -> . simple_type vars_simple_type SEMICOLON dec_vars_aux
    (19) simple_type -> . INT
    (20) simple_type -> . FLOAT
    (21) simple_type -> . CHAR

    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    CHAR            shift and go to state 38

    dec_vars_aux                   shift and go to state 33
    dec_vars_simple_aux            shift and go to state 34
    simple_type                    shift and go to state 35

state 24

    (24) classes_aux -> add_class LBRACE dec_vars . functions RBRACE
    (28) functions -> . FUNCT functions_aux
    (29) functions -> . FUNCT functions_aux functions

    FUNCT           shift and go to state 26

    functions                      shift and go to state 39

state 25

    (25) classes_aux -> add_class LBRACE functions . RBRACE

    RBRACE          shift and go to state 40


state 26

    (28) functions -> FUNCT . functions_aux
    (29) functions -> FUNCT . functions_aux functions
    (30) functions_aux -> . VOID ID add_function LPAREN params RPAREN body
    (31) functions_aux -> . VOID ID add_function LPAREN RPAREN body
    (32) functions_aux -> . simple_type ID add_function LPAREN RPAREN body
    (33) functions_aux -> . simple_type ID add_function LPAREN params RPAREN body
    (19) simple_type -> . INT
    (20) simple_type -> . FLOAT
    (21) simple_type -> . CHAR

    VOID            shift and go to state 42
    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    CHAR            shift and go to state 38

    functions_aux                  shift and go to state 41
    simple_type                    shift and go to state 43

state 27

    (26) classes_aux -> INHERITS ID add_inherit_class . LBRACE dec_vars functions RBRACE
    (27) classes_aux -> INHERITS ID add_inherit_class . LBRACE functions RBRACE

    LBRACE          shift and go to state 44


state 28

    (1) program -> PROGRAM ID TWOPOINTS program_classes MAIN add_class LBRACE program_body init . RBRACE END

    RBRACE          shift and go to state 45


state 29

    (103) init -> INIT . add_init LBRACE statutes_aux RBRACE
    (104) init -> INIT . add_init LBRACE dec_vars statutes_aux RBRACE
    (112) add_init -> .

    LBRACE          reduce using rule 112 (add_init -> .)

    add_init                       shift and go to state 46

state 30

    (4) program_body -> program_body_vars program_body_funct .

    INIT            reduce using rule 4 (program_body -> program_body_vars program_body_funct .)


state 31

    (7) program_body_funct -> functions .

    INIT            reduce using rule 7 (program_body_funct -> functions .)


state 32

    (8) program_body_funct -> empty .

    INIT            reduce using rule 8 (program_body_funct -> empty .)


state 33

    (9) dec_vars -> VAR dec_vars_aux .

    FUNCT           reduce using rule 9 (dec_vars -> VAR dec_vars_aux .)
    INIT            reduce using rule 9 (dec_vars -> VAR dec_vars_aux .)
    CALL            reduce using rule 9 (dec_vars -> VAR dec_vars_aux .)
    ID              reduce using rule 9 (dec_vars -> VAR dec_vars_aux .)
    READ            reduce using rule 9 (dec_vars -> VAR dec_vars_aux .)
    WRITE           reduce using rule 9 (dec_vars -> VAR dec_vars_aux .)
    IF              reduce using rule 9 (dec_vars -> VAR dec_vars_aux .)
    WHILE           reduce using rule 9 (dec_vars -> VAR dec_vars_aux .)
    FROM            reduce using rule 9 (dec_vars -> VAR dec_vars_aux .)


state 34

    (10) dec_vars_aux -> dec_vars_simple_aux .

    FUNCT           reduce using rule 10 (dec_vars_aux -> dec_vars_simple_aux .)
    INIT            reduce using rule 10 (dec_vars_aux -> dec_vars_simple_aux .)
    CALL            reduce using rule 10 (dec_vars_aux -> dec_vars_simple_aux .)
    ID              reduce using rule 10 (dec_vars_aux -> dec_vars_simple_aux .)
    READ            reduce using rule 10 (dec_vars_aux -> dec_vars_simple_aux .)
    WRITE           reduce using rule 10 (dec_vars_aux -> dec_vars_simple_aux .)
    IF              reduce using rule 10 (dec_vars_aux -> dec_vars_simple_aux .)
    WHILE           reduce using rule 10 (dec_vars_aux -> dec_vars_simple_aux .)
    FROM            reduce using rule 10 (dec_vars_aux -> dec_vars_simple_aux .)


state 35

    (11) dec_vars_simple_aux -> simple_type . vars_simple_type SEMICOLON
    (12) dec_vars_simple_aux -> simple_type . vars_simple_type SEMICOLON dec_vars_aux
    (13) vars_simple_type -> . ID add_variable
    (14) vars_simple_type -> . ID add_variable COMMA vars_simple_type
    (15) vars_simple_type -> . ID vars_simple_type_aux
    (16) vars_simple_type -> . ID vars_simple_type_aux COMMA vars_simple_type

    ID              shift and go to state 48

    vars_simple_type               shift and go to state 47

state 36

    (19) simple_type -> INT .

    ID              reduce using rule 19 (simple_type -> INT .)


state 37

    (20) simple_type -> FLOAT .

    ID              reduce using rule 20 (simple_type -> FLOAT .)


state 38

    (21) simple_type -> CHAR .

    ID              reduce using rule 21 (simple_type -> CHAR .)


state 39

    (24) classes_aux -> add_class LBRACE dec_vars functions . RBRACE

    RBRACE          shift and go to state 49


state 40

    (25) classes_aux -> add_class LBRACE functions RBRACE .

    CLASS           reduce using rule 25 (classes_aux -> add_class LBRACE functions RBRACE .)
    MAIN            reduce using rule 25 (classes_aux -> add_class LBRACE functions RBRACE .)


state 41

    (28) functions -> FUNCT functions_aux .
    (29) functions -> FUNCT functions_aux . functions
    (28) functions -> . FUNCT functions_aux
    (29) functions -> . FUNCT functions_aux functions

    RBRACE          reduce using rule 28 (functions -> FUNCT functions_aux .)
    INIT            reduce using rule 28 (functions -> FUNCT functions_aux .)
    FUNCT           shift and go to state 26

    functions                      shift and go to state 50

state 42

    (30) functions_aux -> VOID . ID add_function LPAREN params RPAREN body
    (31) functions_aux -> VOID . ID add_function LPAREN RPAREN body

    ID              shift and go to state 51


state 43

    (32) functions_aux -> simple_type . ID add_function LPAREN RPAREN body
    (33) functions_aux -> simple_type . ID add_function LPAREN params RPAREN body

    ID              shift and go to state 52


state 44

    (26) classes_aux -> INHERITS ID add_inherit_class LBRACE . dec_vars functions RBRACE
    (27) classes_aux -> INHERITS ID add_inherit_class LBRACE . functions RBRACE
    (9) dec_vars -> . VAR dec_vars_aux
    (28) functions -> . FUNCT functions_aux
    (29) functions -> . FUNCT functions_aux functions

    VAR             shift and go to state 23
    FUNCT           shift and go to state 26

    dec_vars                       shift and go to state 53
    functions                      shift and go to state 54

state 45

    (1) program -> PROGRAM ID TWOPOINTS program_classes MAIN add_class LBRACE program_body init RBRACE . END

    END             shift and go to state 55


state 46

    (103) init -> INIT add_init . LBRACE statutes_aux RBRACE
    (104) init -> INIT add_init . LBRACE dec_vars statutes_aux RBRACE

    LBRACE          shift and go to state 56


state 47

    (11) dec_vars_simple_aux -> simple_type vars_simple_type . SEMICOLON
    (12) dec_vars_simple_aux -> simple_type vars_simple_type . SEMICOLON dec_vars_aux

    SEMICOLON       shift and go to state 57


state 48

    (13) vars_simple_type -> ID . add_variable
    (14) vars_simple_type -> ID . add_variable COMMA vars_simple_type
    (15) vars_simple_type -> ID . vars_simple_type_aux
    (16) vars_simple_type -> ID . vars_simple_type_aux COMMA vars_simple_type
    (106) add_variable -> .
    (17) vars_simple_type_aux -> . LBRACKET CTEI RBRACKET add_array_variable
    (18) vars_simple_type_aux -> . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET add_matrix_variable

    COMMA           reduce using rule 106 (add_variable -> .)
    SEMICOLON       reduce using rule 106 (add_variable -> .)
    LBRACKET        shift and go to state 60

    add_variable                   shift and go to state 58
    vars_simple_type_aux           shift and go to state 59

state 49

    (24) classes_aux -> add_class LBRACE dec_vars functions RBRACE .

    CLASS           reduce using rule 24 (classes_aux -> add_class LBRACE dec_vars functions RBRACE .)
    MAIN            reduce using rule 24 (classes_aux -> add_class LBRACE dec_vars functions RBRACE .)


state 50

    (29) functions -> FUNCT functions_aux functions .

    RBRACE          reduce using rule 29 (functions -> FUNCT functions_aux functions .)
    INIT            reduce using rule 29 (functions -> FUNCT functions_aux functions .)


state 51

    (30) functions_aux -> VOID ID . add_function LPAREN params RPAREN body
    (31) functions_aux -> VOID ID . add_function LPAREN RPAREN body
    (111) add_function -> .

    LPAREN          reduce using rule 111 (add_function -> .)

    add_function                   shift and go to state 61

state 52

    (32) functions_aux -> simple_type ID . add_function LPAREN RPAREN body
    (33) functions_aux -> simple_type ID . add_function LPAREN params RPAREN body
    (111) add_function -> .

    LPAREN          reduce using rule 111 (add_function -> .)

    add_function                   shift and go to state 62

state 53

    (26) classes_aux -> INHERITS ID add_inherit_class LBRACE dec_vars . functions RBRACE
    (28) functions -> . FUNCT functions_aux
    (29) functions -> . FUNCT functions_aux functions

    FUNCT           shift and go to state 26

    functions                      shift and go to state 63

state 54

    (27) classes_aux -> INHERITS ID add_inherit_class LBRACE functions . RBRACE

    RBRACE          shift and go to state 64


state 55

    (1) program -> PROGRAM ID TWOPOINTS program_classes MAIN add_class LBRACE program_body init RBRACE END .

    $end            reduce using rule 1 (program -> PROGRAM ID TWOPOINTS program_classes MAIN add_class LBRACE program_body init RBRACE END .)


state 56

    (103) init -> INIT add_init LBRACE . statutes_aux RBRACE
    (104) init -> INIT add_init LBRACE . dec_vars statutes_aux RBRACE
    (51) statutes_aux -> . statutes
    (52) statutes_aux -> . statutes statutes_aux
    (9) dec_vars -> . VAR dec_vars_aux
    (44) statutes -> . assignation SEMICOLON
    (45) statutes -> . CALL call SEMICOLON
    (46) statutes -> . read
    (47) statutes -> . write
    (48) statutes -> . condition
    (49) statutes -> . while
    (50) statutes -> . for
    (53) assignation -> . ID push_var EQUAL push_op exp
    (54) assignation -> . ID var_aux EQUAL exp
    (72) read -> . READ LPAREN ID RPAREN SEMICOLON
    (73) write -> . WRITE LPAREN write_aux RPAREN SEMICOLON
    (66) condition -> . IF condition_aux
    (78) while -> . WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (79) for -> . FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    VAR             shift and go to state 23
    CALL            shift and go to state 69
    ID              shift and go to state 75
    READ            shift and go to state 76
    WRITE           shift and go to state 77
    IF              shift and go to state 78
    WHILE           shift and go to state 79
    FROM            shift and go to state 80

    statutes_aux                   shift and go to state 65
    dec_vars                       shift and go to state 66
    statutes                       shift and go to state 67
    assignation                    shift and go to state 68
    read                           shift and go to state 70
    write                          shift and go to state 71
    condition                      shift and go to state 72
    while                          shift and go to state 73
    for                            shift and go to state 74

state 57

    (11) dec_vars_simple_aux -> simple_type vars_simple_type SEMICOLON .
    (12) dec_vars_simple_aux -> simple_type vars_simple_type SEMICOLON . dec_vars_aux
    (10) dec_vars_aux -> . dec_vars_simple_aux
    (11) dec_vars_simple_aux -> . simple_type vars_simple_type SEMICOLON
    (12) dec_vars_simple_aux -> . simple_type vars_simple_type SEMICOLON dec_vars_aux
    (19) simple_type -> . INT
    (20) simple_type -> . FLOAT
    (21) simple_type -> . CHAR

    FUNCT           reduce using rule 11 (dec_vars_simple_aux -> simple_type vars_simple_type SEMICOLON .)
    INIT            reduce using rule 11 (dec_vars_simple_aux -> simple_type vars_simple_type SEMICOLON .)
    CALL            reduce using rule 11 (dec_vars_simple_aux -> simple_type vars_simple_type SEMICOLON .)
    ID              reduce using rule 11 (dec_vars_simple_aux -> simple_type vars_simple_type SEMICOLON .)
    READ            reduce using rule 11 (dec_vars_simple_aux -> simple_type vars_simple_type SEMICOLON .)
    WRITE           reduce using rule 11 (dec_vars_simple_aux -> simple_type vars_simple_type SEMICOLON .)
    IF              reduce using rule 11 (dec_vars_simple_aux -> simple_type vars_simple_type SEMICOLON .)
    WHILE           reduce using rule 11 (dec_vars_simple_aux -> simple_type vars_simple_type SEMICOLON .)
    FROM            reduce using rule 11 (dec_vars_simple_aux -> simple_type vars_simple_type SEMICOLON .)
    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    CHAR            shift and go to state 38

    simple_type                    shift and go to state 35
    dec_vars_aux                   shift and go to state 81
    dec_vars_simple_aux            shift and go to state 34

state 58

    (13) vars_simple_type -> ID add_variable .
    (14) vars_simple_type -> ID add_variable . COMMA vars_simple_type

    SEMICOLON       reduce using rule 13 (vars_simple_type -> ID add_variable .)
    COMMA           shift and go to state 82


state 59

    (15) vars_simple_type -> ID vars_simple_type_aux .
    (16) vars_simple_type -> ID vars_simple_type_aux . COMMA vars_simple_type

    SEMICOLON       reduce using rule 15 (vars_simple_type -> ID vars_simple_type_aux .)
    COMMA           shift and go to state 83


state 60

    (17) vars_simple_type_aux -> LBRACKET . CTEI RBRACKET add_array_variable
    (18) vars_simple_type_aux -> LBRACKET . CTEI RBRACKET LBRACKET CTEI RBRACKET add_matrix_variable

    CTEI            shift and go to state 84


state 61

    (30) functions_aux -> VOID ID add_function . LPAREN params RPAREN body
    (31) functions_aux -> VOID ID add_function . LPAREN RPAREN body

    LPAREN          shift and go to state 85


state 62

    (32) functions_aux -> simple_type ID add_function . LPAREN RPAREN body
    (33) functions_aux -> simple_type ID add_function . LPAREN params RPAREN body

    LPAREN          shift and go to state 86


state 63

    (26) classes_aux -> INHERITS ID add_inherit_class LBRACE dec_vars functions . RBRACE

    RBRACE          shift and go to state 87


state 64

    (27) classes_aux -> INHERITS ID add_inherit_class LBRACE functions RBRACE .

    CLASS           reduce using rule 27 (classes_aux -> INHERITS ID add_inherit_class LBRACE functions RBRACE .)
    MAIN            reduce using rule 27 (classes_aux -> INHERITS ID add_inherit_class LBRACE functions RBRACE .)


state 65

    (103) init -> INIT add_init LBRACE statutes_aux . RBRACE

    RBRACE          shift and go to state 88


state 66

    (104) init -> INIT add_init LBRACE dec_vars . statutes_aux RBRACE
    (51) statutes_aux -> . statutes
    (52) statutes_aux -> . statutes statutes_aux
    (44) statutes -> . assignation SEMICOLON
    (45) statutes -> . CALL call SEMICOLON
    (46) statutes -> . read
    (47) statutes -> . write
    (48) statutes -> . condition
    (49) statutes -> . while
    (50) statutes -> . for
    (53) assignation -> . ID push_var EQUAL push_op exp
    (54) assignation -> . ID var_aux EQUAL exp
    (72) read -> . READ LPAREN ID RPAREN SEMICOLON
    (73) write -> . WRITE LPAREN write_aux RPAREN SEMICOLON
    (66) condition -> . IF condition_aux
    (78) while -> . WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (79) for -> . FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    CALL            shift and go to state 69
    ID              shift and go to state 75
    READ            shift and go to state 76
    WRITE           shift and go to state 77
    IF              shift and go to state 78
    WHILE           shift and go to state 79
    FROM            shift and go to state 80

    statutes_aux                   shift and go to state 89
    statutes                       shift and go to state 67
    assignation                    shift and go to state 68
    read                           shift and go to state 70
    write                          shift and go to state 71
    condition                      shift and go to state 72
    while                          shift and go to state 73
    for                            shift and go to state 74

state 67

    (51) statutes_aux -> statutes .
    (52) statutes_aux -> statutes . statutes_aux
    (51) statutes_aux -> . statutes
    (52) statutes_aux -> . statutes statutes_aux
    (44) statutes -> . assignation SEMICOLON
    (45) statutes -> . CALL call SEMICOLON
    (46) statutes -> . read
    (47) statutes -> . write
    (48) statutes -> . condition
    (49) statutes -> . while
    (50) statutes -> . for
    (53) assignation -> . ID push_var EQUAL push_op exp
    (54) assignation -> . ID var_aux EQUAL exp
    (72) read -> . READ LPAREN ID RPAREN SEMICOLON
    (73) write -> . WRITE LPAREN write_aux RPAREN SEMICOLON
    (66) condition -> . IF condition_aux
    (78) while -> . WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (79) for -> . FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    RBRACE          reduce using rule 51 (statutes_aux -> statutes .)
    RETURN          reduce using rule 51 (statutes_aux -> statutes .)
    CALL            shift and go to state 69
    ID              shift and go to state 75
    READ            shift and go to state 76
    WRITE           shift and go to state 77
    IF              shift and go to state 78
    WHILE           shift and go to state 79
    FROM            shift and go to state 80

    statutes                       shift and go to state 67
    statutes_aux                   shift and go to state 90
    assignation                    shift and go to state 68
    read                           shift and go to state 70
    write                          shift and go to state 71
    condition                      shift and go to state 72
    while                          shift and go to state 73
    for                            shift and go to state 74

state 68

    (44) statutes -> assignation . SEMICOLON

    SEMICOLON       shift and go to state 91


state 69

    (45) statutes -> CALL . call SEMICOLON
    (60) call -> . ID LPAREN RPAREN
    (61) call -> . ID POINT ID LPAREN RPAREN
    (62) call -> . ID LPAREN call_aux RPAREN
    (63) call -> . ID POINT ID LPAREN call_aux RPAREN

    ID              shift and go to state 93

    call                           shift and go to state 92

state 70

    (46) statutes -> read .

    CALL            reduce using rule 46 (statutes -> read .)
    ID              reduce using rule 46 (statutes -> read .)
    READ            reduce using rule 46 (statutes -> read .)
    WRITE           reduce using rule 46 (statutes -> read .)
    IF              reduce using rule 46 (statutes -> read .)
    WHILE           reduce using rule 46 (statutes -> read .)
    FROM            reduce using rule 46 (statutes -> read .)
    RBRACE          reduce using rule 46 (statutes -> read .)
    RETURN          reduce using rule 46 (statutes -> read .)


state 71

    (47) statutes -> write .

    CALL            reduce using rule 47 (statutes -> write .)
    ID              reduce using rule 47 (statutes -> write .)
    READ            reduce using rule 47 (statutes -> write .)
    WRITE           reduce using rule 47 (statutes -> write .)
    IF              reduce using rule 47 (statutes -> write .)
    WHILE           reduce using rule 47 (statutes -> write .)
    FROM            reduce using rule 47 (statutes -> write .)
    RBRACE          reduce using rule 47 (statutes -> write .)
    RETURN          reduce using rule 47 (statutes -> write .)


state 72

    (48) statutes -> condition .

    CALL            reduce using rule 48 (statutes -> condition .)
    ID              reduce using rule 48 (statutes -> condition .)
    READ            reduce using rule 48 (statutes -> condition .)
    WRITE           reduce using rule 48 (statutes -> condition .)
    IF              reduce using rule 48 (statutes -> condition .)
    WHILE           reduce using rule 48 (statutes -> condition .)
    FROM            reduce using rule 48 (statutes -> condition .)
    RBRACE          reduce using rule 48 (statutes -> condition .)
    RETURN          reduce using rule 48 (statutes -> condition .)


state 73

    (49) statutes -> while .

    CALL            reduce using rule 49 (statutes -> while .)
    ID              reduce using rule 49 (statutes -> while .)
    READ            reduce using rule 49 (statutes -> while .)
    WRITE           reduce using rule 49 (statutes -> while .)
    IF              reduce using rule 49 (statutes -> while .)
    WHILE           reduce using rule 49 (statutes -> while .)
    FROM            reduce using rule 49 (statutes -> while .)
    RBRACE          reduce using rule 49 (statutes -> while .)
    RETURN          reduce using rule 49 (statutes -> while .)


state 74

    (50) statutes -> for .

    CALL            reduce using rule 50 (statutes -> for .)
    ID              reduce using rule 50 (statutes -> for .)
    READ            reduce using rule 50 (statutes -> for .)
    WRITE           reduce using rule 50 (statutes -> for .)
    IF              reduce using rule 50 (statutes -> for .)
    WHILE           reduce using rule 50 (statutes -> for .)
    FROM            reduce using rule 50 (statutes -> for .)
    RBRACE          reduce using rule 50 (statutes -> for .)
    RETURN          reduce using rule 50 (statutes -> for .)


state 75

    (53) assignation -> ID . push_var EQUAL push_op exp
    (54) assignation -> ID . var_aux EQUAL exp
    (115) push_var -> .
    (55) var_aux -> . POINT ID
    (56) var_aux -> . POINT ID var_aux_2
    (57) var_aux -> . var_aux_2
    (58) var_aux_2 -> . LBRACKET exp RBRACKET
    (59) var_aux_2 -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET

    EQUAL           reduce using rule 115 (push_var -> .)
    POINT           shift and go to state 96
    LBRACKET        shift and go to state 98

    push_var                       shift and go to state 94
    var_aux                        shift and go to state 95
    var_aux_2                      shift and go to state 97

state 76

    (72) read -> READ . LPAREN ID RPAREN SEMICOLON

    LPAREN          shift and go to state 99


state 77

    (73) write -> WRITE . LPAREN write_aux RPAREN SEMICOLON

    LPAREN          shift and go to state 100


state 78

    (66) condition -> IF . condition_aux
    (67) condition_aux -> . LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3
    (68) condition_aux -> . condition_aux_2
    (69) condition_aux_2 -> . LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux

    LPAREN          shift and go to state 102

    condition_aux                  shift and go to state 101
    condition_aux_2                shift and go to state 103

state 79

    (78) while -> WHILE . LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    LPAREN          shift and go to state 104


state 80

    (79) for -> FROM . LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    LPAREN          shift and go to state 105


state 81

    (12) dec_vars_simple_aux -> simple_type vars_simple_type SEMICOLON dec_vars_aux .

    FUNCT           reduce using rule 12 (dec_vars_simple_aux -> simple_type vars_simple_type SEMICOLON dec_vars_aux .)
    INIT            reduce using rule 12 (dec_vars_simple_aux -> simple_type vars_simple_type SEMICOLON dec_vars_aux .)
    CALL            reduce using rule 12 (dec_vars_simple_aux -> simple_type vars_simple_type SEMICOLON dec_vars_aux .)
    ID              reduce using rule 12 (dec_vars_simple_aux -> simple_type vars_simple_type SEMICOLON dec_vars_aux .)
    READ            reduce using rule 12 (dec_vars_simple_aux -> simple_type vars_simple_type SEMICOLON dec_vars_aux .)
    WRITE           reduce using rule 12 (dec_vars_simple_aux -> simple_type vars_simple_type SEMICOLON dec_vars_aux .)
    IF              reduce using rule 12 (dec_vars_simple_aux -> simple_type vars_simple_type SEMICOLON dec_vars_aux .)
    WHILE           reduce using rule 12 (dec_vars_simple_aux -> simple_type vars_simple_type SEMICOLON dec_vars_aux .)
    FROM            reduce using rule 12 (dec_vars_simple_aux -> simple_type vars_simple_type SEMICOLON dec_vars_aux .)


state 82

    (14) vars_simple_type -> ID add_variable COMMA . vars_simple_type
    (13) vars_simple_type -> . ID add_variable
    (14) vars_simple_type -> . ID add_variable COMMA vars_simple_type
    (15) vars_simple_type -> . ID vars_simple_type_aux
    (16) vars_simple_type -> . ID vars_simple_type_aux COMMA vars_simple_type

    ID              shift and go to state 48

    vars_simple_type               shift and go to state 106

state 83

    (16) vars_simple_type -> ID vars_simple_type_aux COMMA . vars_simple_type
    (13) vars_simple_type -> . ID add_variable
    (14) vars_simple_type -> . ID add_variable COMMA vars_simple_type
    (15) vars_simple_type -> . ID vars_simple_type_aux
    (16) vars_simple_type -> . ID vars_simple_type_aux COMMA vars_simple_type

    ID              shift and go to state 48

    vars_simple_type               shift and go to state 107

state 84

    (17) vars_simple_type_aux -> LBRACKET CTEI . RBRACKET add_array_variable
    (18) vars_simple_type_aux -> LBRACKET CTEI . RBRACKET LBRACKET CTEI RBRACKET add_matrix_variable

    RBRACKET        shift and go to state 108


state 85

    (30) functions_aux -> VOID ID add_function LPAREN . params RPAREN body
    (31) functions_aux -> VOID ID add_function LPAREN . RPAREN body
    (34) params -> . simple_type ID add_variable
    (35) params -> . simple_type ID add_variable COMMA params
    (36) params -> . simple_type ID params_aux
    (37) params -> . simple_type ID params_aux COMMA params
    (19) simple_type -> . INT
    (20) simple_type -> . FLOAT
    (21) simple_type -> . CHAR

    RPAREN          shift and go to state 110
    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    CHAR            shift and go to state 38

    params                         shift and go to state 109
    simple_type                    shift and go to state 111

state 86

    (32) functions_aux -> simple_type ID add_function LPAREN . RPAREN body
    (33) functions_aux -> simple_type ID add_function LPAREN . params RPAREN body
    (34) params -> . simple_type ID add_variable
    (35) params -> . simple_type ID add_variable COMMA params
    (36) params -> . simple_type ID params_aux
    (37) params -> . simple_type ID params_aux COMMA params
    (19) simple_type -> . INT
    (20) simple_type -> . FLOAT
    (21) simple_type -> . CHAR

    RPAREN          shift and go to state 112
    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    CHAR            shift and go to state 38

    simple_type                    shift and go to state 111
    params                         shift and go to state 113

state 87

    (26) classes_aux -> INHERITS ID add_inherit_class LBRACE dec_vars functions RBRACE .

    CLASS           reduce using rule 26 (classes_aux -> INHERITS ID add_inherit_class LBRACE dec_vars functions RBRACE .)
    MAIN            reduce using rule 26 (classes_aux -> INHERITS ID add_inherit_class LBRACE dec_vars functions RBRACE .)


state 88

    (103) init -> INIT add_init LBRACE statutes_aux RBRACE .

    RBRACE          reduce using rule 103 (init -> INIT add_init LBRACE statutes_aux RBRACE .)


state 89

    (104) init -> INIT add_init LBRACE dec_vars statutes_aux . RBRACE

    RBRACE          shift and go to state 114


state 90

    (52) statutes_aux -> statutes statutes_aux .

    RBRACE          reduce using rule 52 (statutes_aux -> statutes statutes_aux .)
    RETURN          reduce using rule 52 (statutes_aux -> statutes statutes_aux .)


state 91

    (44) statutes -> assignation SEMICOLON .

    CALL            reduce using rule 44 (statutes -> assignation SEMICOLON .)
    ID              reduce using rule 44 (statutes -> assignation SEMICOLON .)
    READ            reduce using rule 44 (statutes -> assignation SEMICOLON .)
    WRITE           reduce using rule 44 (statutes -> assignation SEMICOLON .)
    IF              reduce using rule 44 (statutes -> assignation SEMICOLON .)
    WHILE           reduce using rule 44 (statutes -> assignation SEMICOLON .)
    FROM            reduce using rule 44 (statutes -> assignation SEMICOLON .)
    RBRACE          reduce using rule 44 (statutes -> assignation SEMICOLON .)
    RETURN          reduce using rule 44 (statutes -> assignation SEMICOLON .)


state 92

    (45) statutes -> CALL call . SEMICOLON

    SEMICOLON       shift and go to state 115


state 93

    (60) call -> ID . LPAREN RPAREN
    (61) call -> ID . POINT ID LPAREN RPAREN
    (62) call -> ID . LPAREN call_aux RPAREN
    (63) call -> ID . POINT ID LPAREN call_aux RPAREN

    LPAREN          shift and go to state 116
    POINT           shift and go to state 117


state 94

    (53) assignation -> ID push_var . EQUAL push_op exp

    EQUAL           shift and go to state 118


state 95

    (54) assignation -> ID var_aux . EQUAL exp

    EQUAL           shift and go to state 119


state 96

    (55) var_aux -> POINT . ID
    (56) var_aux -> POINT . ID var_aux_2

    ID              shift and go to state 120


state 97

    (57) var_aux -> var_aux_2 .

    EQUAL           reduce using rule 57 (var_aux -> var_aux_2 .)
    TIMES           reduce using rule 57 (var_aux -> var_aux_2 .)
    DIVIDE          reduce using rule 57 (var_aux -> var_aux_2 .)
    PLUS            reduce using rule 57 (var_aux -> var_aux_2 .)
    MINUS           reduce using rule 57 (var_aux -> var_aux_2 .)
    RELOP           reduce using rule 57 (var_aux -> var_aux_2 .)
    AND             reduce using rule 57 (var_aux -> var_aux_2 .)
    OR              reduce using rule 57 (var_aux -> var_aux_2 .)
    RBRACKET        reduce using rule 57 (var_aux -> var_aux_2 .)
    COMMA           reduce using rule 57 (var_aux -> var_aux_2 .)
    RPAREN          reduce using rule 57 (var_aux -> var_aux_2 .)
    SEMICOLON       reduce using rule 57 (var_aux -> var_aux_2 .)


state 98

    (58) var_aux_2 -> LBRACKET . exp RBRACKET
    (59) var_aux_2 -> LBRACKET . exp RBRACKET LBRACKET exp RBRACKET
    (80) exp -> . n_exp
    (81) exp -> . n_exp OR push_op exp pop_op
    (82) n_exp -> . l_exp
    (83) n_exp -> . l_exp AND push_op n_exp pop_op
    (84) l_exp -> . a_exp
    (85) l_exp -> . a_exp RELOP push_op a_exp pop_op
    (86) a_exp -> . term
    (87) a_exp -> . term PLUS push_op a_exp pop_op
    (88) a_exp -> . term MINUS push_op a_exp pop_op
    (89) term -> . factor
    (90) term -> . factor TIMES push_op term pop_op
    (91) term -> . factor DIVIDE push_op term pop_op
    (92) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (93) factor -> . call
    (94) factor -> . factor_aux
    (60) call -> . ID LPAREN RPAREN
    (61) call -> . ID POINT ID LPAREN RPAREN
    (62) call -> . ID LPAREN call_aux RPAREN
    (63) call -> . ID POINT ID LPAREN call_aux RPAREN
    (95) factor_aux -> . cte
    (96) factor_aux -> . PLUS cte
    (97) factor_aux -> . MINUS cte
    (98) cte -> . ID push_var
    (99) cte -> . ID var_aux push_var
    (100) cte -> . CTEI push_var
    (101) cte -> . CTEF push_var
    (102) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 129
    ID              shift and go to state 132
    PLUS            shift and go to state 126
    MINUS           shift and go to state 127
    CTEI            shift and go to state 134
    CTEF            shift and go to state 135
    CTECHAR         shift and go to state 136

    exp                            shift and go to state 121
    n_exp                          shift and go to state 122
    l_exp                          shift and go to state 123
    a_exp                          shift and go to state 124
    term                           shift and go to state 125
    factor                         shift and go to state 128
    call                           shift and go to state 130
    factor_aux                     shift and go to state 131
    cte                            shift and go to state 133

state 99

    (72) read -> READ LPAREN . ID RPAREN SEMICOLON

    ID              shift and go to state 137


state 100

    (73) write -> WRITE LPAREN . write_aux RPAREN SEMICOLON
    (74) write_aux -> . exp
    (75) write_aux -> . exp COMMA write_aux
    (76) write_aux -> . CTESTRING
    (77) write_aux -> . CTESTRING COMMA write_aux
    (80) exp -> . n_exp
    (81) exp -> . n_exp OR push_op exp pop_op
    (82) n_exp -> . l_exp
    (83) n_exp -> . l_exp AND push_op n_exp pop_op
    (84) l_exp -> . a_exp
    (85) l_exp -> . a_exp RELOP push_op a_exp pop_op
    (86) a_exp -> . term
    (87) a_exp -> . term PLUS push_op a_exp pop_op
    (88) a_exp -> . term MINUS push_op a_exp pop_op
    (89) term -> . factor
    (90) term -> . factor TIMES push_op term pop_op
    (91) term -> . factor DIVIDE push_op term pop_op
    (92) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (93) factor -> . call
    (94) factor -> . factor_aux
    (60) call -> . ID LPAREN RPAREN
    (61) call -> . ID POINT ID LPAREN RPAREN
    (62) call -> . ID LPAREN call_aux RPAREN
    (63) call -> . ID POINT ID LPAREN call_aux RPAREN
    (95) factor_aux -> . cte
    (96) factor_aux -> . PLUS cte
    (97) factor_aux -> . MINUS cte
    (98) cte -> . ID push_var
    (99) cte -> . ID var_aux push_var
    (100) cte -> . CTEI push_var
    (101) cte -> . CTEF push_var
    (102) cte -> . CTECHAR push_var

    CTESTRING       shift and go to state 140
    LPAREN          shift and go to state 129
    ID              shift and go to state 132
    PLUS            shift and go to state 126
    MINUS           shift and go to state 127
    CTEI            shift and go to state 134
    CTEF            shift and go to state 135
    CTECHAR         shift and go to state 136

    write_aux                      shift and go to state 138
    exp                            shift and go to state 139
    n_exp                          shift and go to state 122
    l_exp                          shift and go to state 123
    a_exp                          shift and go to state 124
    term                           shift and go to state 125
    factor                         shift and go to state 128
    call                           shift and go to state 130
    factor_aux                     shift and go to state 131
    cte                            shift and go to state 133

state 101

    (66) condition -> IF condition_aux .

    CALL            reduce using rule 66 (condition -> IF condition_aux .)
    ID              reduce using rule 66 (condition -> IF condition_aux .)
    READ            reduce using rule 66 (condition -> IF condition_aux .)
    WRITE           reduce using rule 66 (condition -> IF condition_aux .)
    IF              reduce using rule 66 (condition -> IF condition_aux .)
    WHILE           reduce using rule 66 (condition -> IF condition_aux .)
    FROM            reduce using rule 66 (condition -> IF condition_aux .)
    RBRACE          reduce using rule 66 (condition -> IF condition_aux .)
    RETURN          reduce using rule 66 (condition -> IF condition_aux .)


state 102

    (67) condition_aux -> LPAREN . exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3
    (69) condition_aux_2 -> LPAREN . exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux
    (80) exp -> . n_exp
    (81) exp -> . n_exp OR push_op exp pop_op
    (82) n_exp -> . l_exp
    (83) n_exp -> . l_exp AND push_op n_exp pop_op
    (84) l_exp -> . a_exp
    (85) l_exp -> . a_exp RELOP push_op a_exp pop_op
    (86) a_exp -> . term
    (87) a_exp -> . term PLUS push_op a_exp pop_op
    (88) a_exp -> . term MINUS push_op a_exp pop_op
    (89) term -> . factor
    (90) term -> . factor TIMES push_op term pop_op
    (91) term -> . factor DIVIDE push_op term pop_op
    (92) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (93) factor -> . call
    (94) factor -> . factor_aux
    (60) call -> . ID LPAREN RPAREN
    (61) call -> . ID POINT ID LPAREN RPAREN
    (62) call -> . ID LPAREN call_aux RPAREN
    (63) call -> . ID POINT ID LPAREN call_aux RPAREN
    (95) factor_aux -> . cte
    (96) factor_aux -> . PLUS cte
    (97) factor_aux -> . MINUS cte
    (98) cte -> . ID push_var
    (99) cte -> . ID var_aux push_var
    (100) cte -> . CTEI push_var
    (101) cte -> . CTEF push_var
    (102) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 129
    ID              shift and go to state 132
    PLUS            shift and go to state 126
    MINUS           shift and go to state 127
    CTEI            shift and go to state 134
    CTEF            shift and go to state 135
    CTECHAR         shift and go to state 136

    exp                            shift and go to state 141
    n_exp                          shift and go to state 122
    l_exp                          shift and go to state 123
    a_exp                          shift and go to state 124
    term                           shift and go to state 125
    factor                         shift and go to state 128
    call                           shift and go to state 130
    factor_aux                     shift and go to state 131
    cte                            shift and go to state 133

state 103

    (68) condition_aux -> condition_aux_2 .

    CALL            reduce using rule 68 (condition_aux -> condition_aux_2 .)
    ID              reduce using rule 68 (condition_aux -> condition_aux_2 .)
    READ            reduce using rule 68 (condition_aux -> condition_aux_2 .)
    WRITE           reduce using rule 68 (condition_aux -> condition_aux_2 .)
    IF              reduce using rule 68 (condition_aux -> condition_aux_2 .)
    WHILE           reduce using rule 68 (condition_aux -> condition_aux_2 .)
    FROM            reduce using rule 68 (condition_aux -> condition_aux_2 .)
    RBRACE          reduce using rule 68 (condition_aux -> condition_aux_2 .)
    RETURN          reduce using rule 68 (condition_aux -> condition_aux_2 .)


state 104

    (78) while -> WHILE LPAREN . exp RPAREN DO LBRACE statutes_aux RBRACE
    (80) exp -> . n_exp
    (81) exp -> . n_exp OR push_op exp pop_op
    (82) n_exp -> . l_exp
    (83) n_exp -> . l_exp AND push_op n_exp pop_op
    (84) l_exp -> . a_exp
    (85) l_exp -> . a_exp RELOP push_op a_exp pop_op
    (86) a_exp -> . term
    (87) a_exp -> . term PLUS push_op a_exp pop_op
    (88) a_exp -> . term MINUS push_op a_exp pop_op
    (89) term -> . factor
    (90) term -> . factor TIMES push_op term pop_op
    (91) term -> . factor DIVIDE push_op term pop_op
    (92) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (93) factor -> . call
    (94) factor -> . factor_aux
    (60) call -> . ID LPAREN RPAREN
    (61) call -> . ID POINT ID LPAREN RPAREN
    (62) call -> . ID LPAREN call_aux RPAREN
    (63) call -> . ID POINT ID LPAREN call_aux RPAREN
    (95) factor_aux -> . cte
    (96) factor_aux -> . PLUS cte
    (97) factor_aux -> . MINUS cte
    (98) cte -> . ID push_var
    (99) cte -> . ID var_aux push_var
    (100) cte -> . CTEI push_var
    (101) cte -> . CTEF push_var
    (102) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 129
    ID              shift and go to state 132
    PLUS            shift and go to state 126
    MINUS           shift and go to state 127
    CTEI            shift and go to state 134
    CTEF            shift and go to state 135
    CTECHAR         shift and go to state 136

    exp                            shift and go to state 142
    n_exp                          shift and go to state 122
    l_exp                          shift and go to state 123
    a_exp                          shift and go to state 124
    term                           shift and go to state 125
    factor                         shift and go to state 128
    call                           shift and go to state 130
    factor_aux                     shift and go to state 131
    cte                            shift and go to state 133

state 105

    (79) for -> FROM LPAREN . assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (53) assignation -> . ID push_var EQUAL push_op exp
    (54) assignation -> . ID var_aux EQUAL exp

    ID              shift and go to state 75

    assignation                    shift and go to state 143

state 106

    (14) vars_simple_type -> ID add_variable COMMA vars_simple_type .

    SEMICOLON       reduce using rule 14 (vars_simple_type -> ID add_variable COMMA vars_simple_type .)


state 107

    (16) vars_simple_type -> ID vars_simple_type_aux COMMA vars_simple_type .

    SEMICOLON       reduce using rule 16 (vars_simple_type -> ID vars_simple_type_aux COMMA vars_simple_type .)


state 108

    (17) vars_simple_type_aux -> LBRACKET CTEI RBRACKET . add_array_variable
    (18) vars_simple_type_aux -> LBRACKET CTEI RBRACKET . LBRACKET CTEI RBRACKET add_matrix_variable
    (107) add_array_variable -> .

    LBRACKET        shift and go to state 144
    COMMA           reduce using rule 107 (add_array_variable -> .)
    SEMICOLON       reduce using rule 107 (add_array_variable -> .)

    add_array_variable             shift and go to state 145

state 109

    (30) functions_aux -> VOID ID add_function LPAREN params . RPAREN body

    RPAREN          shift and go to state 146


state 110

    (31) functions_aux -> VOID ID add_function LPAREN RPAREN . body
    (40) body -> . LBRACE dec_vars statutes_aux RBRACE
    (41) body -> . LBRACE statutes_aux RBRACE
    (42) body -> . LBRACE statutes_aux RETURN ID SEMICOLON RBRACE
    (43) body -> . LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE

    LBRACE          shift and go to state 148

    body                           shift and go to state 147

state 111

    (34) params -> simple_type . ID add_variable
    (35) params -> simple_type . ID add_variable COMMA params
    (36) params -> simple_type . ID params_aux
    (37) params -> simple_type . ID params_aux COMMA params

    ID              shift and go to state 149


state 112

    (32) functions_aux -> simple_type ID add_function LPAREN RPAREN . body
    (40) body -> . LBRACE dec_vars statutes_aux RBRACE
    (41) body -> . LBRACE statutes_aux RBRACE
    (42) body -> . LBRACE statutes_aux RETURN ID SEMICOLON RBRACE
    (43) body -> . LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE

    LBRACE          shift and go to state 148

    body                           shift and go to state 150

state 113

    (33) functions_aux -> simple_type ID add_function LPAREN params . RPAREN body

    RPAREN          shift and go to state 151


state 114

    (104) init -> INIT add_init LBRACE dec_vars statutes_aux RBRACE .

    RBRACE          reduce using rule 104 (init -> INIT add_init LBRACE dec_vars statutes_aux RBRACE .)


state 115

    (45) statutes -> CALL call SEMICOLON .

    CALL            reduce using rule 45 (statutes -> CALL call SEMICOLON .)
    ID              reduce using rule 45 (statutes -> CALL call SEMICOLON .)
    READ            reduce using rule 45 (statutes -> CALL call SEMICOLON .)
    WRITE           reduce using rule 45 (statutes -> CALL call SEMICOLON .)
    IF              reduce using rule 45 (statutes -> CALL call SEMICOLON .)
    WHILE           reduce using rule 45 (statutes -> CALL call SEMICOLON .)
    FROM            reduce using rule 45 (statutes -> CALL call SEMICOLON .)
    RBRACE          reduce using rule 45 (statutes -> CALL call SEMICOLON .)
    RETURN          reduce using rule 45 (statutes -> CALL call SEMICOLON .)


state 116

    (60) call -> ID LPAREN . RPAREN
    (62) call -> ID LPAREN . call_aux RPAREN
    (64) call_aux -> . exp
    (65) call_aux -> . exp COMMA call_aux
    (80) exp -> . n_exp
    (81) exp -> . n_exp OR push_op exp pop_op
    (82) n_exp -> . l_exp
    (83) n_exp -> . l_exp AND push_op n_exp pop_op
    (84) l_exp -> . a_exp
    (85) l_exp -> . a_exp RELOP push_op a_exp pop_op
    (86) a_exp -> . term
    (87) a_exp -> . term PLUS push_op a_exp pop_op
    (88) a_exp -> . term MINUS push_op a_exp pop_op
    (89) term -> . factor
    (90) term -> . factor TIMES push_op term pop_op
    (91) term -> . factor DIVIDE push_op term pop_op
    (92) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (93) factor -> . call
    (94) factor -> . factor_aux
    (60) call -> . ID LPAREN RPAREN
    (61) call -> . ID POINT ID LPAREN RPAREN
    (62) call -> . ID LPAREN call_aux RPAREN
    (63) call -> . ID POINT ID LPAREN call_aux RPAREN
    (95) factor_aux -> . cte
    (96) factor_aux -> . PLUS cte
    (97) factor_aux -> . MINUS cte
    (98) cte -> . ID push_var
    (99) cte -> . ID var_aux push_var
    (100) cte -> . CTEI push_var
    (101) cte -> . CTEF push_var
    (102) cte -> . CTECHAR push_var

    RPAREN          shift and go to state 152
    LPAREN          shift and go to state 129
    ID              shift and go to state 132
    PLUS            shift and go to state 126
    MINUS           shift and go to state 127
    CTEI            shift and go to state 134
    CTEF            shift and go to state 135
    CTECHAR         shift and go to state 136

    call_aux                       shift and go to state 153
    exp                            shift and go to state 154
    n_exp                          shift and go to state 122
    l_exp                          shift and go to state 123
    a_exp                          shift and go to state 124
    term                           shift and go to state 125
    factor                         shift and go to state 128
    call                           shift and go to state 130
    factor_aux                     shift and go to state 131
    cte                            shift and go to state 133

state 117

    (61) call -> ID POINT . ID LPAREN RPAREN
    (63) call -> ID POINT . ID LPAREN call_aux RPAREN

    ID              shift and go to state 155


state 118

    (53) assignation -> ID push_var EQUAL . push_op exp
    (116) push_op -> .

    LPAREN          reduce using rule 116 (push_op -> .)
    ID              reduce using rule 116 (push_op -> .)
    PLUS            reduce using rule 116 (push_op -> .)
    MINUS           reduce using rule 116 (push_op -> .)
    CTEI            reduce using rule 116 (push_op -> .)
    CTEF            reduce using rule 116 (push_op -> .)
    CTECHAR         reduce using rule 116 (push_op -> .)

    push_op                        shift and go to state 156

state 119

    (54) assignation -> ID var_aux EQUAL . exp
    (80) exp -> . n_exp
    (81) exp -> . n_exp OR push_op exp pop_op
    (82) n_exp -> . l_exp
    (83) n_exp -> . l_exp AND push_op n_exp pop_op
    (84) l_exp -> . a_exp
    (85) l_exp -> . a_exp RELOP push_op a_exp pop_op
    (86) a_exp -> . term
    (87) a_exp -> . term PLUS push_op a_exp pop_op
    (88) a_exp -> . term MINUS push_op a_exp pop_op
    (89) term -> . factor
    (90) term -> . factor TIMES push_op term pop_op
    (91) term -> . factor DIVIDE push_op term pop_op
    (92) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (93) factor -> . call
    (94) factor -> . factor_aux
    (60) call -> . ID LPAREN RPAREN
    (61) call -> . ID POINT ID LPAREN RPAREN
    (62) call -> . ID LPAREN call_aux RPAREN
    (63) call -> . ID POINT ID LPAREN call_aux RPAREN
    (95) factor_aux -> . cte
    (96) factor_aux -> . PLUS cte
    (97) factor_aux -> . MINUS cte
    (98) cte -> . ID push_var
    (99) cte -> . ID var_aux push_var
    (100) cte -> . CTEI push_var
    (101) cte -> . CTEF push_var
    (102) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 129
    ID              shift and go to state 132
    PLUS            shift and go to state 126
    MINUS           shift and go to state 127
    CTEI            shift and go to state 134
    CTEF            shift and go to state 135
    CTECHAR         shift and go to state 136

    exp                            shift and go to state 157
    n_exp                          shift and go to state 122
    l_exp                          shift and go to state 123
    a_exp                          shift and go to state 124
    term                           shift and go to state 125
    factor                         shift and go to state 128
    call                           shift and go to state 130
    factor_aux                     shift and go to state 131
    cte                            shift and go to state 133

state 120

    (55) var_aux -> POINT ID .
    (56) var_aux -> POINT ID . var_aux_2
    (58) var_aux_2 -> . LBRACKET exp RBRACKET
    (59) var_aux_2 -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET

    EQUAL           reduce using rule 55 (var_aux -> POINT ID .)
    TIMES           reduce using rule 55 (var_aux -> POINT ID .)
    DIVIDE          reduce using rule 55 (var_aux -> POINT ID .)
    PLUS            reduce using rule 55 (var_aux -> POINT ID .)
    MINUS           reduce using rule 55 (var_aux -> POINT ID .)
    RELOP           reduce using rule 55 (var_aux -> POINT ID .)
    AND             reduce using rule 55 (var_aux -> POINT ID .)
    OR              reduce using rule 55 (var_aux -> POINT ID .)
    RBRACKET        reduce using rule 55 (var_aux -> POINT ID .)
    COMMA           reduce using rule 55 (var_aux -> POINT ID .)
    RPAREN          reduce using rule 55 (var_aux -> POINT ID .)
    SEMICOLON       reduce using rule 55 (var_aux -> POINT ID .)
    LBRACKET        shift and go to state 98

    var_aux_2                      shift and go to state 158

state 121

    (58) var_aux_2 -> LBRACKET exp . RBRACKET
    (59) var_aux_2 -> LBRACKET exp . RBRACKET LBRACKET exp RBRACKET

    RBRACKET        shift and go to state 159


state 122

    (80) exp -> n_exp .
    (81) exp -> n_exp . OR push_op exp pop_op

    RBRACKET        reduce using rule 80 (exp -> n_exp .)
    COMMA           reduce using rule 80 (exp -> n_exp .)
    RPAREN          reduce using rule 80 (exp -> n_exp .)
    SEMICOLON       reduce using rule 80 (exp -> n_exp .)
    OR              shift and go to state 160


state 123

    (82) n_exp -> l_exp .
    (83) n_exp -> l_exp . AND push_op n_exp pop_op

    OR              reduce using rule 82 (n_exp -> l_exp .)
    RBRACKET        reduce using rule 82 (n_exp -> l_exp .)
    COMMA           reduce using rule 82 (n_exp -> l_exp .)
    RPAREN          reduce using rule 82 (n_exp -> l_exp .)
    SEMICOLON       reduce using rule 82 (n_exp -> l_exp .)
    AND             shift and go to state 161


state 124

    (84) l_exp -> a_exp .
    (85) l_exp -> a_exp . RELOP push_op a_exp pop_op

    AND             reduce using rule 84 (l_exp -> a_exp .)
    OR              reduce using rule 84 (l_exp -> a_exp .)
    RBRACKET        reduce using rule 84 (l_exp -> a_exp .)
    COMMA           reduce using rule 84 (l_exp -> a_exp .)
    RPAREN          reduce using rule 84 (l_exp -> a_exp .)
    SEMICOLON       reduce using rule 84 (l_exp -> a_exp .)
    RELOP           shift and go to state 162


state 125

    (86) a_exp -> term .
    (87) a_exp -> term . PLUS push_op a_exp pop_op
    (88) a_exp -> term . MINUS push_op a_exp pop_op

    RELOP           reduce using rule 86 (a_exp -> term .)
    AND             reduce using rule 86 (a_exp -> term .)
    OR              reduce using rule 86 (a_exp -> term .)
    RBRACKET        reduce using rule 86 (a_exp -> term .)
    COMMA           reduce using rule 86 (a_exp -> term .)
    RPAREN          reduce using rule 86 (a_exp -> term .)
    SEMICOLON       reduce using rule 86 (a_exp -> term .)
    PLUS            shift and go to state 163
    MINUS           shift and go to state 164


state 126

    (96) factor_aux -> PLUS . cte
    (98) cte -> . ID push_var
    (99) cte -> . ID var_aux push_var
    (100) cte -> . CTEI push_var
    (101) cte -> . CTEF push_var
    (102) cte -> . CTECHAR push_var

    ID              shift and go to state 166
    CTEI            shift and go to state 134
    CTEF            shift and go to state 135
    CTECHAR         shift and go to state 136

    cte                            shift and go to state 165

state 127

    (97) factor_aux -> MINUS . cte
    (98) cte -> . ID push_var
    (99) cte -> . ID var_aux push_var
    (100) cte -> . CTEI push_var
    (101) cte -> . CTEF push_var
    (102) cte -> . CTECHAR push_var

    ID              shift and go to state 166
    CTEI            shift and go to state 134
    CTEF            shift and go to state 135
    CTECHAR         shift and go to state 136

    cte                            shift and go to state 167

state 128

    (89) term -> factor .
    (90) term -> factor . TIMES push_op term pop_op
    (91) term -> factor . DIVIDE push_op term pop_op

    PLUS            reduce using rule 89 (term -> factor .)
    MINUS           reduce using rule 89 (term -> factor .)
    RELOP           reduce using rule 89 (term -> factor .)
    AND             reduce using rule 89 (term -> factor .)
    OR              reduce using rule 89 (term -> factor .)
    RBRACKET        reduce using rule 89 (term -> factor .)
    COMMA           reduce using rule 89 (term -> factor .)
    RPAREN          reduce using rule 89 (term -> factor .)
    SEMICOLON       reduce using rule 89 (term -> factor .)
    TIMES           shift and go to state 168
    DIVIDE          shift and go to state 169


state 129

    (92) factor -> LPAREN . push_paren exp RPAREN pop_paren
    (118) push_paren -> .

    LPAREN          reduce using rule 118 (push_paren -> .)
    ID              reduce using rule 118 (push_paren -> .)
    PLUS            reduce using rule 118 (push_paren -> .)
    MINUS           reduce using rule 118 (push_paren -> .)
    CTEI            reduce using rule 118 (push_paren -> .)
    CTEF            reduce using rule 118 (push_paren -> .)
    CTECHAR         reduce using rule 118 (push_paren -> .)

    push_paren                     shift and go to state 170

state 130

    (93) factor -> call .

    TIMES           reduce using rule 93 (factor -> call .)
    DIVIDE          reduce using rule 93 (factor -> call .)
    PLUS            reduce using rule 93 (factor -> call .)
    MINUS           reduce using rule 93 (factor -> call .)
    RELOP           reduce using rule 93 (factor -> call .)
    AND             reduce using rule 93 (factor -> call .)
    OR              reduce using rule 93 (factor -> call .)
    RBRACKET        reduce using rule 93 (factor -> call .)
    COMMA           reduce using rule 93 (factor -> call .)
    RPAREN          reduce using rule 93 (factor -> call .)
    SEMICOLON       reduce using rule 93 (factor -> call .)


state 131

    (94) factor -> factor_aux .

    TIMES           reduce using rule 94 (factor -> factor_aux .)
    DIVIDE          reduce using rule 94 (factor -> factor_aux .)
    PLUS            reduce using rule 94 (factor -> factor_aux .)
    MINUS           reduce using rule 94 (factor -> factor_aux .)
    RELOP           reduce using rule 94 (factor -> factor_aux .)
    AND             reduce using rule 94 (factor -> factor_aux .)
    OR              reduce using rule 94 (factor -> factor_aux .)
    RBRACKET        reduce using rule 94 (factor -> factor_aux .)
    COMMA           reduce using rule 94 (factor -> factor_aux .)
    RPAREN          reduce using rule 94 (factor -> factor_aux .)
    SEMICOLON       reduce using rule 94 (factor -> factor_aux .)


state 132

    (60) call -> ID . LPAREN RPAREN
    (61) call -> ID . POINT ID LPAREN RPAREN
    (62) call -> ID . LPAREN call_aux RPAREN
    (63) call -> ID . POINT ID LPAREN call_aux RPAREN
    (98) cte -> ID . push_var
    (99) cte -> ID . var_aux push_var
    (115) push_var -> .
    (55) var_aux -> . POINT ID
    (56) var_aux -> . POINT ID var_aux_2
    (57) var_aux -> . var_aux_2
    (58) var_aux_2 -> . LBRACKET exp RBRACKET
    (59) var_aux_2 -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET

    LPAREN          shift and go to state 116
    POINT           shift and go to state 171
    TIMES           reduce using rule 115 (push_var -> .)
    DIVIDE          reduce using rule 115 (push_var -> .)
    PLUS            reduce using rule 115 (push_var -> .)
    MINUS           reduce using rule 115 (push_var -> .)
    RELOP           reduce using rule 115 (push_var -> .)
    AND             reduce using rule 115 (push_var -> .)
    OR              reduce using rule 115 (push_var -> .)
    RBRACKET        reduce using rule 115 (push_var -> .)
    COMMA           reduce using rule 115 (push_var -> .)
    RPAREN          reduce using rule 115 (push_var -> .)
    SEMICOLON       reduce using rule 115 (push_var -> .)
    LBRACKET        shift and go to state 98

    push_var                       shift and go to state 172
    var_aux                        shift and go to state 173
    var_aux_2                      shift and go to state 97

state 133

    (95) factor_aux -> cte .

    TIMES           reduce using rule 95 (factor_aux -> cte .)
    DIVIDE          reduce using rule 95 (factor_aux -> cte .)
    PLUS            reduce using rule 95 (factor_aux -> cte .)
    MINUS           reduce using rule 95 (factor_aux -> cte .)
    RELOP           reduce using rule 95 (factor_aux -> cte .)
    AND             reduce using rule 95 (factor_aux -> cte .)
    OR              reduce using rule 95 (factor_aux -> cte .)
    RBRACKET        reduce using rule 95 (factor_aux -> cte .)
    COMMA           reduce using rule 95 (factor_aux -> cte .)
    RPAREN          reduce using rule 95 (factor_aux -> cte .)
    SEMICOLON       reduce using rule 95 (factor_aux -> cte .)


state 134

    (100) cte -> CTEI . push_var
    (115) push_var -> .

    TIMES           reduce using rule 115 (push_var -> .)
    DIVIDE          reduce using rule 115 (push_var -> .)
    PLUS            reduce using rule 115 (push_var -> .)
    MINUS           reduce using rule 115 (push_var -> .)
    RELOP           reduce using rule 115 (push_var -> .)
    AND             reduce using rule 115 (push_var -> .)
    OR              reduce using rule 115 (push_var -> .)
    RBRACKET        reduce using rule 115 (push_var -> .)
    COMMA           reduce using rule 115 (push_var -> .)
    RPAREN          reduce using rule 115 (push_var -> .)
    SEMICOLON       reduce using rule 115 (push_var -> .)

    push_var                       shift and go to state 174

state 135

    (101) cte -> CTEF . push_var
    (115) push_var -> .

    TIMES           reduce using rule 115 (push_var -> .)
    DIVIDE          reduce using rule 115 (push_var -> .)
    PLUS            reduce using rule 115 (push_var -> .)
    MINUS           reduce using rule 115 (push_var -> .)
    RELOP           reduce using rule 115 (push_var -> .)
    AND             reduce using rule 115 (push_var -> .)
    OR              reduce using rule 115 (push_var -> .)
    RBRACKET        reduce using rule 115 (push_var -> .)
    COMMA           reduce using rule 115 (push_var -> .)
    RPAREN          reduce using rule 115 (push_var -> .)
    SEMICOLON       reduce using rule 115 (push_var -> .)

    push_var                       shift and go to state 175

state 136

    (102) cte -> CTECHAR . push_var
    (115) push_var -> .

    TIMES           reduce using rule 115 (push_var -> .)
    DIVIDE          reduce using rule 115 (push_var -> .)
    PLUS            reduce using rule 115 (push_var -> .)
    MINUS           reduce using rule 115 (push_var -> .)
    RELOP           reduce using rule 115 (push_var -> .)
    AND             reduce using rule 115 (push_var -> .)
    OR              reduce using rule 115 (push_var -> .)
    RBRACKET        reduce using rule 115 (push_var -> .)
    COMMA           reduce using rule 115 (push_var -> .)
    RPAREN          reduce using rule 115 (push_var -> .)
    SEMICOLON       reduce using rule 115 (push_var -> .)

    push_var                       shift and go to state 176

state 137

    (72) read -> READ LPAREN ID . RPAREN SEMICOLON

    RPAREN          shift and go to state 177


state 138

    (73) write -> WRITE LPAREN write_aux . RPAREN SEMICOLON

    RPAREN          shift and go to state 178


state 139

    (74) write_aux -> exp .
    (75) write_aux -> exp . COMMA write_aux

    RPAREN          reduce using rule 74 (write_aux -> exp .)
    COMMA           shift and go to state 179


state 140

    (76) write_aux -> CTESTRING .
    (77) write_aux -> CTESTRING . COMMA write_aux

    RPAREN          reduce using rule 76 (write_aux -> CTESTRING .)
    COMMA           shift and go to state 180


state 141

    (67) condition_aux -> LPAREN exp . RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3
    (69) condition_aux_2 -> LPAREN exp . RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux

    RPAREN          shift and go to state 181


state 142

    (78) while -> WHILE LPAREN exp . RPAREN DO LBRACE statutes_aux RBRACE

    RPAREN          shift and go to state 182


state 143

    (79) for -> FROM LPAREN assignation . RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    RPAREN          shift and go to state 183


state 144

    (18) vars_simple_type_aux -> LBRACKET CTEI RBRACKET LBRACKET . CTEI RBRACKET add_matrix_variable

    CTEI            shift and go to state 184


state 145

    (17) vars_simple_type_aux -> LBRACKET CTEI RBRACKET add_array_variable .

    COMMA           reduce using rule 17 (vars_simple_type_aux -> LBRACKET CTEI RBRACKET add_array_variable .)
    SEMICOLON       reduce using rule 17 (vars_simple_type_aux -> LBRACKET CTEI RBRACKET add_array_variable .)


state 146

    (30) functions_aux -> VOID ID add_function LPAREN params RPAREN . body
    (40) body -> . LBRACE dec_vars statutes_aux RBRACE
    (41) body -> . LBRACE statutes_aux RBRACE
    (42) body -> . LBRACE statutes_aux RETURN ID SEMICOLON RBRACE
    (43) body -> . LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE

    LBRACE          shift and go to state 148

    body                           shift and go to state 185

state 147

    (31) functions_aux -> VOID ID add_function LPAREN RPAREN body .

    FUNCT           reduce using rule 31 (functions_aux -> VOID ID add_function LPAREN RPAREN body .)
    RBRACE          reduce using rule 31 (functions_aux -> VOID ID add_function LPAREN RPAREN body .)
    INIT            reduce using rule 31 (functions_aux -> VOID ID add_function LPAREN RPAREN body .)


state 148

    (40) body -> LBRACE . dec_vars statutes_aux RBRACE
    (41) body -> LBRACE . statutes_aux RBRACE
    (42) body -> LBRACE . statutes_aux RETURN ID SEMICOLON RBRACE
    (43) body -> LBRACE . dec_vars statutes_aux RETURN ID SEMICOLON RBRACE
    (9) dec_vars -> . VAR dec_vars_aux
    (51) statutes_aux -> . statutes
    (52) statutes_aux -> . statutes statutes_aux
    (44) statutes -> . assignation SEMICOLON
    (45) statutes -> . CALL call SEMICOLON
    (46) statutes -> . read
    (47) statutes -> . write
    (48) statutes -> . condition
    (49) statutes -> . while
    (50) statutes -> . for
    (53) assignation -> . ID push_var EQUAL push_op exp
    (54) assignation -> . ID var_aux EQUAL exp
    (72) read -> . READ LPAREN ID RPAREN SEMICOLON
    (73) write -> . WRITE LPAREN write_aux RPAREN SEMICOLON
    (66) condition -> . IF condition_aux
    (78) while -> . WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (79) for -> . FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    VAR             shift and go to state 23
    CALL            shift and go to state 69
    ID              shift and go to state 75
    READ            shift and go to state 76
    WRITE           shift and go to state 77
    IF              shift and go to state 78
    WHILE           shift and go to state 79
    FROM            shift and go to state 80

    dec_vars                       shift and go to state 186
    statutes_aux                   shift and go to state 187
    statutes                       shift and go to state 67
    assignation                    shift and go to state 68
    read                           shift and go to state 70
    write                          shift and go to state 71
    condition                      shift and go to state 72
    while                          shift and go to state 73
    for                            shift and go to state 74

state 149

    (34) params -> simple_type ID . add_variable
    (35) params -> simple_type ID . add_variable COMMA params
    (36) params -> simple_type ID . params_aux
    (37) params -> simple_type ID . params_aux COMMA params
    (106) add_variable -> .
    (38) params_aux -> . LBRACKET RBRACKET add_array_var_params
    (39) params_aux -> . LBRACKET RBRACKET LBRACKET RBRACKET add_matrix_var_params

    COMMA           reduce using rule 106 (add_variable -> .)
    RPAREN          reduce using rule 106 (add_variable -> .)
    LBRACKET        shift and go to state 190

    add_variable                   shift and go to state 188
    params_aux                     shift and go to state 189

state 150

    (32) functions_aux -> simple_type ID add_function LPAREN RPAREN body .

    FUNCT           reduce using rule 32 (functions_aux -> simple_type ID add_function LPAREN RPAREN body .)
    RBRACE          reduce using rule 32 (functions_aux -> simple_type ID add_function LPAREN RPAREN body .)
    INIT            reduce using rule 32 (functions_aux -> simple_type ID add_function LPAREN RPAREN body .)


state 151

    (33) functions_aux -> simple_type ID add_function LPAREN params RPAREN . body
    (40) body -> . LBRACE dec_vars statutes_aux RBRACE
    (41) body -> . LBRACE statutes_aux RBRACE
    (42) body -> . LBRACE statutes_aux RETURN ID SEMICOLON RBRACE
    (43) body -> . LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE

    LBRACE          shift and go to state 148

    body                           shift and go to state 191

state 152

    (60) call -> ID LPAREN RPAREN .

    SEMICOLON       reduce using rule 60 (call -> ID LPAREN RPAREN .)
    TIMES           reduce using rule 60 (call -> ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 60 (call -> ID LPAREN RPAREN .)
    PLUS            reduce using rule 60 (call -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 60 (call -> ID LPAREN RPAREN .)
    RELOP           reduce using rule 60 (call -> ID LPAREN RPAREN .)
    AND             reduce using rule 60 (call -> ID LPAREN RPAREN .)
    OR              reduce using rule 60 (call -> ID LPAREN RPAREN .)
    RBRACKET        reduce using rule 60 (call -> ID LPAREN RPAREN .)
    COMMA           reduce using rule 60 (call -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 60 (call -> ID LPAREN RPAREN .)


state 153

    (62) call -> ID LPAREN call_aux . RPAREN

    RPAREN          shift and go to state 192


state 154

    (64) call_aux -> exp .
    (65) call_aux -> exp . COMMA call_aux

    RPAREN          reduce using rule 64 (call_aux -> exp .)
    COMMA           shift and go to state 193


state 155

    (61) call -> ID POINT ID . LPAREN RPAREN
    (63) call -> ID POINT ID . LPAREN call_aux RPAREN

    LPAREN          shift and go to state 194


state 156

    (53) assignation -> ID push_var EQUAL push_op . exp
    (80) exp -> . n_exp
    (81) exp -> . n_exp OR push_op exp pop_op
    (82) n_exp -> . l_exp
    (83) n_exp -> . l_exp AND push_op n_exp pop_op
    (84) l_exp -> . a_exp
    (85) l_exp -> . a_exp RELOP push_op a_exp pop_op
    (86) a_exp -> . term
    (87) a_exp -> . term PLUS push_op a_exp pop_op
    (88) a_exp -> . term MINUS push_op a_exp pop_op
    (89) term -> . factor
    (90) term -> . factor TIMES push_op term pop_op
    (91) term -> . factor DIVIDE push_op term pop_op
    (92) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (93) factor -> . call
    (94) factor -> . factor_aux
    (60) call -> . ID LPAREN RPAREN
    (61) call -> . ID POINT ID LPAREN RPAREN
    (62) call -> . ID LPAREN call_aux RPAREN
    (63) call -> . ID POINT ID LPAREN call_aux RPAREN
    (95) factor_aux -> . cte
    (96) factor_aux -> . PLUS cte
    (97) factor_aux -> . MINUS cte
    (98) cte -> . ID push_var
    (99) cte -> . ID var_aux push_var
    (100) cte -> . CTEI push_var
    (101) cte -> . CTEF push_var
    (102) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 129
    ID              shift and go to state 132
    PLUS            shift and go to state 126
    MINUS           shift and go to state 127
    CTEI            shift and go to state 134
    CTEF            shift and go to state 135
    CTECHAR         shift and go to state 136

    exp                            shift and go to state 195
    n_exp                          shift and go to state 122
    l_exp                          shift and go to state 123
    a_exp                          shift and go to state 124
    term                           shift and go to state 125
    factor                         shift and go to state 128
    call                           shift and go to state 130
    factor_aux                     shift and go to state 131
    cte                            shift and go to state 133

state 157

    (54) assignation -> ID var_aux EQUAL exp .

    SEMICOLON       reduce using rule 54 (assignation -> ID var_aux EQUAL exp .)
    RPAREN          reduce using rule 54 (assignation -> ID var_aux EQUAL exp .)


state 158

    (56) var_aux -> POINT ID var_aux_2 .

    EQUAL           reduce using rule 56 (var_aux -> POINT ID var_aux_2 .)
    TIMES           reduce using rule 56 (var_aux -> POINT ID var_aux_2 .)
    DIVIDE          reduce using rule 56 (var_aux -> POINT ID var_aux_2 .)
    PLUS            reduce using rule 56 (var_aux -> POINT ID var_aux_2 .)
    MINUS           reduce using rule 56 (var_aux -> POINT ID var_aux_2 .)
    RELOP           reduce using rule 56 (var_aux -> POINT ID var_aux_2 .)
    AND             reduce using rule 56 (var_aux -> POINT ID var_aux_2 .)
    OR              reduce using rule 56 (var_aux -> POINT ID var_aux_2 .)
    RBRACKET        reduce using rule 56 (var_aux -> POINT ID var_aux_2 .)
    COMMA           reduce using rule 56 (var_aux -> POINT ID var_aux_2 .)
    RPAREN          reduce using rule 56 (var_aux -> POINT ID var_aux_2 .)
    SEMICOLON       reduce using rule 56 (var_aux -> POINT ID var_aux_2 .)


state 159

    (58) var_aux_2 -> LBRACKET exp RBRACKET .
    (59) var_aux_2 -> LBRACKET exp RBRACKET . LBRACKET exp RBRACKET

    EQUAL           reduce using rule 58 (var_aux_2 -> LBRACKET exp RBRACKET .)
    TIMES           reduce using rule 58 (var_aux_2 -> LBRACKET exp RBRACKET .)
    DIVIDE          reduce using rule 58 (var_aux_2 -> LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 58 (var_aux_2 -> LBRACKET exp RBRACKET .)
    MINUS           reduce using rule 58 (var_aux_2 -> LBRACKET exp RBRACKET .)
    RELOP           reduce using rule 58 (var_aux_2 -> LBRACKET exp RBRACKET .)
    AND             reduce using rule 58 (var_aux_2 -> LBRACKET exp RBRACKET .)
    OR              reduce using rule 58 (var_aux_2 -> LBRACKET exp RBRACKET .)
    RBRACKET        reduce using rule 58 (var_aux_2 -> LBRACKET exp RBRACKET .)
    COMMA           reduce using rule 58 (var_aux_2 -> LBRACKET exp RBRACKET .)
    RPAREN          reduce using rule 58 (var_aux_2 -> LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 58 (var_aux_2 -> LBRACKET exp RBRACKET .)
    LBRACKET        shift and go to state 196


state 160

    (81) exp -> n_exp OR . push_op exp pop_op
    (116) push_op -> .

    LPAREN          reduce using rule 116 (push_op -> .)
    ID              reduce using rule 116 (push_op -> .)
    PLUS            reduce using rule 116 (push_op -> .)
    MINUS           reduce using rule 116 (push_op -> .)
    CTEI            reduce using rule 116 (push_op -> .)
    CTEF            reduce using rule 116 (push_op -> .)
    CTECHAR         reduce using rule 116 (push_op -> .)

    push_op                        shift and go to state 197

state 161

    (83) n_exp -> l_exp AND . push_op n_exp pop_op
    (116) push_op -> .

    LPAREN          reduce using rule 116 (push_op -> .)
    ID              reduce using rule 116 (push_op -> .)
    PLUS            reduce using rule 116 (push_op -> .)
    MINUS           reduce using rule 116 (push_op -> .)
    CTEI            reduce using rule 116 (push_op -> .)
    CTEF            reduce using rule 116 (push_op -> .)
    CTECHAR         reduce using rule 116 (push_op -> .)

    push_op                        shift and go to state 198

state 162

    (85) l_exp -> a_exp RELOP . push_op a_exp pop_op
    (116) push_op -> .

    LPAREN          reduce using rule 116 (push_op -> .)
    ID              reduce using rule 116 (push_op -> .)
    PLUS            reduce using rule 116 (push_op -> .)
    MINUS           reduce using rule 116 (push_op -> .)
    CTEI            reduce using rule 116 (push_op -> .)
    CTEF            reduce using rule 116 (push_op -> .)
    CTECHAR         reduce using rule 116 (push_op -> .)

    push_op                        shift and go to state 199

state 163

    (87) a_exp -> term PLUS . push_op a_exp pop_op
    (116) push_op -> .

    LPAREN          reduce using rule 116 (push_op -> .)
    ID              reduce using rule 116 (push_op -> .)
    PLUS            reduce using rule 116 (push_op -> .)
    MINUS           reduce using rule 116 (push_op -> .)
    CTEI            reduce using rule 116 (push_op -> .)
    CTEF            reduce using rule 116 (push_op -> .)
    CTECHAR         reduce using rule 116 (push_op -> .)

    push_op                        shift and go to state 200

state 164

    (88) a_exp -> term MINUS . push_op a_exp pop_op
    (116) push_op -> .

    LPAREN          reduce using rule 116 (push_op -> .)
    ID              reduce using rule 116 (push_op -> .)
    PLUS            reduce using rule 116 (push_op -> .)
    MINUS           reduce using rule 116 (push_op -> .)
    CTEI            reduce using rule 116 (push_op -> .)
    CTEF            reduce using rule 116 (push_op -> .)
    CTECHAR         reduce using rule 116 (push_op -> .)

    push_op                        shift and go to state 201

state 165

    (96) factor_aux -> PLUS cte .

    TIMES           reduce using rule 96 (factor_aux -> PLUS cte .)
    DIVIDE          reduce using rule 96 (factor_aux -> PLUS cte .)
    PLUS            reduce using rule 96 (factor_aux -> PLUS cte .)
    MINUS           reduce using rule 96 (factor_aux -> PLUS cte .)
    RELOP           reduce using rule 96 (factor_aux -> PLUS cte .)
    AND             reduce using rule 96 (factor_aux -> PLUS cte .)
    OR              reduce using rule 96 (factor_aux -> PLUS cte .)
    RBRACKET        reduce using rule 96 (factor_aux -> PLUS cte .)
    COMMA           reduce using rule 96 (factor_aux -> PLUS cte .)
    RPAREN          reduce using rule 96 (factor_aux -> PLUS cte .)
    SEMICOLON       reduce using rule 96 (factor_aux -> PLUS cte .)


state 166

    (98) cte -> ID . push_var
    (99) cte -> ID . var_aux push_var
    (115) push_var -> .
    (55) var_aux -> . POINT ID
    (56) var_aux -> . POINT ID var_aux_2
    (57) var_aux -> . var_aux_2
    (58) var_aux_2 -> . LBRACKET exp RBRACKET
    (59) var_aux_2 -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET

    TIMES           reduce using rule 115 (push_var -> .)
    DIVIDE          reduce using rule 115 (push_var -> .)
    PLUS            reduce using rule 115 (push_var -> .)
    MINUS           reduce using rule 115 (push_var -> .)
    RELOP           reduce using rule 115 (push_var -> .)
    AND             reduce using rule 115 (push_var -> .)
    OR              reduce using rule 115 (push_var -> .)
    RBRACKET        reduce using rule 115 (push_var -> .)
    COMMA           reduce using rule 115 (push_var -> .)
    RPAREN          reduce using rule 115 (push_var -> .)
    SEMICOLON       reduce using rule 115 (push_var -> .)
    POINT           shift and go to state 96
    LBRACKET        shift and go to state 98

    push_var                       shift and go to state 172
    var_aux                        shift and go to state 173
    var_aux_2                      shift and go to state 97

state 167

    (97) factor_aux -> MINUS cte .

    TIMES           reduce using rule 97 (factor_aux -> MINUS cte .)
    DIVIDE          reduce using rule 97 (factor_aux -> MINUS cte .)
    PLUS            reduce using rule 97 (factor_aux -> MINUS cte .)
    MINUS           reduce using rule 97 (factor_aux -> MINUS cte .)
    RELOP           reduce using rule 97 (factor_aux -> MINUS cte .)
    AND             reduce using rule 97 (factor_aux -> MINUS cte .)
    OR              reduce using rule 97 (factor_aux -> MINUS cte .)
    RBRACKET        reduce using rule 97 (factor_aux -> MINUS cte .)
    COMMA           reduce using rule 97 (factor_aux -> MINUS cte .)
    RPAREN          reduce using rule 97 (factor_aux -> MINUS cte .)
    SEMICOLON       reduce using rule 97 (factor_aux -> MINUS cte .)


state 168

    (90) term -> factor TIMES . push_op term pop_op
    (116) push_op -> .

    LPAREN          reduce using rule 116 (push_op -> .)
    ID              reduce using rule 116 (push_op -> .)
    PLUS            reduce using rule 116 (push_op -> .)
    MINUS           reduce using rule 116 (push_op -> .)
    CTEI            reduce using rule 116 (push_op -> .)
    CTEF            reduce using rule 116 (push_op -> .)
    CTECHAR         reduce using rule 116 (push_op -> .)

    push_op                        shift and go to state 202

state 169

    (91) term -> factor DIVIDE . push_op term pop_op
    (116) push_op -> .

    LPAREN          reduce using rule 116 (push_op -> .)
    ID              reduce using rule 116 (push_op -> .)
    PLUS            reduce using rule 116 (push_op -> .)
    MINUS           reduce using rule 116 (push_op -> .)
    CTEI            reduce using rule 116 (push_op -> .)
    CTEF            reduce using rule 116 (push_op -> .)
    CTECHAR         reduce using rule 116 (push_op -> .)

    push_op                        shift and go to state 203

state 170

    (92) factor -> LPAREN push_paren . exp RPAREN pop_paren
    (80) exp -> . n_exp
    (81) exp -> . n_exp OR push_op exp pop_op
    (82) n_exp -> . l_exp
    (83) n_exp -> . l_exp AND push_op n_exp pop_op
    (84) l_exp -> . a_exp
    (85) l_exp -> . a_exp RELOP push_op a_exp pop_op
    (86) a_exp -> . term
    (87) a_exp -> . term PLUS push_op a_exp pop_op
    (88) a_exp -> . term MINUS push_op a_exp pop_op
    (89) term -> . factor
    (90) term -> . factor TIMES push_op term pop_op
    (91) term -> . factor DIVIDE push_op term pop_op
    (92) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (93) factor -> . call
    (94) factor -> . factor_aux
    (60) call -> . ID LPAREN RPAREN
    (61) call -> . ID POINT ID LPAREN RPAREN
    (62) call -> . ID LPAREN call_aux RPAREN
    (63) call -> . ID POINT ID LPAREN call_aux RPAREN
    (95) factor_aux -> . cte
    (96) factor_aux -> . PLUS cte
    (97) factor_aux -> . MINUS cte
    (98) cte -> . ID push_var
    (99) cte -> . ID var_aux push_var
    (100) cte -> . CTEI push_var
    (101) cte -> . CTEF push_var
    (102) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 129
    ID              shift and go to state 132
    PLUS            shift and go to state 126
    MINUS           shift and go to state 127
    CTEI            shift and go to state 134
    CTEF            shift and go to state 135
    CTECHAR         shift and go to state 136

    exp                            shift and go to state 204
    n_exp                          shift and go to state 122
    l_exp                          shift and go to state 123
    a_exp                          shift and go to state 124
    term                           shift and go to state 125
    factor                         shift and go to state 128
    call                           shift and go to state 130
    factor_aux                     shift and go to state 131
    cte                            shift and go to state 133

state 171

    (61) call -> ID POINT . ID LPAREN RPAREN
    (63) call -> ID POINT . ID LPAREN call_aux RPAREN
    (55) var_aux -> POINT . ID
    (56) var_aux -> POINT . ID var_aux_2

    ID              shift and go to state 205


state 172

    (98) cte -> ID push_var .

    TIMES           reduce using rule 98 (cte -> ID push_var .)
    DIVIDE          reduce using rule 98 (cte -> ID push_var .)
    PLUS            reduce using rule 98 (cte -> ID push_var .)
    MINUS           reduce using rule 98 (cte -> ID push_var .)
    RELOP           reduce using rule 98 (cte -> ID push_var .)
    AND             reduce using rule 98 (cte -> ID push_var .)
    OR              reduce using rule 98 (cte -> ID push_var .)
    RBRACKET        reduce using rule 98 (cte -> ID push_var .)
    COMMA           reduce using rule 98 (cte -> ID push_var .)
    RPAREN          reduce using rule 98 (cte -> ID push_var .)
    SEMICOLON       reduce using rule 98 (cte -> ID push_var .)


state 173

    (99) cte -> ID var_aux . push_var
    (115) push_var -> .

    TIMES           reduce using rule 115 (push_var -> .)
    DIVIDE          reduce using rule 115 (push_var -> .)
    PLUS            reduce using rule 115 (push_var -> .)
    MINUS           reduce using rule 115 (push_var -> .)
    RELOP           reduce using rule 115 (push_var -> .)
    AND             reduce using rule 115 (push_var -> .)
    OR              reduce using rule 115 (push_var -> .)
    RBRACKET        reduce using rule 115 (push_var -> .)
    COMMA           reduce using rule 115 (push_var -> .)
    RPAREN          reduce using rule 115 (push_var -> .)
    SEMICOLON       reduce using rule 115 (push_var -> .)

    push_var                       shift and go to state 206

state 174

    (100) cte -> CTEI push_var .

    TIMES           reduce using rule 100 (cte -> CTEI push_var .)
    DIVIDE          reduce using rule 100 (cte -> CTEI push_var .)
    PLUS            reduce using rule 100 (cte -> CTEI push_var .)
    MINUS           reduce using rule 100 (cte -> CTEI push_var .)
    RELOP           reduce using rule 100 (cte -> CTEI push_var .)
    AND             reduce using rule 100 (cte -> CTEI push_var .)
    OR              reduce using rule 100 (cte -> CTEI push_var .)
    RBRACKET        reduce using rule 100 (cte -> CTEI push_var .)
    COMMA           reduce using rule 100 (cte -> CTEI push_var .)
    RPAREN          reduce using rule 100 (cte -> CTEI push_var .)
    SEMICOLON       reduce using rule 100 (cte -> CTEI push_var .)


state 175

    (101) cte -> CTEF push_var .

    TIMES           reduce using rule 101 (cte -> CTEF push_var .)
    DIVIDE          reduce using rule 101 (cte -> CTEF push_var .)
    PLUS            reduce using rule 101 (cte -> CTEF push_var .)
    MINUS           reduce using rule 101 (cte -> CTEF push_var .)
    RELOP           reduce using rule 101 (cte -> CTEF push_var .)
    AND             reduce using rule 101 (cte -> CTEF push_var .)
    OR              reduce using rule 101 (cte -> CTEF push_var .)
    RBRACKET        reduce using rule 101 (cte -> CTEF push_var .)
    COMMA           reduce using rule 101 (cte -> CTEF push_var .)
    RPAREN          reduce using rule 101 (cte -> CTEF push_var .)
    SEMICOLON       reduce using rule 101 (cte -> CTEF push_var .)


state 176

    (102) cte -> CTECHAR push_var .

    TIMES           reduce using rule 102 (cte -> CTECHAR push_var .)
    DIVIDE          reduce using rule 102 (cte -> CTECHAR push_var .)
    PLUS            reduce using rule 102 (cte -> CTECHAR push_var .)
    MINUS           reduce using rule 102 (cte -> CTECHAR push_var .)
    RELOP           reduce using rule 102 (cte -> CTECHAR push_var .)
    AND             reduce using rule 102 (cte -> CTECHAR push_var .)
    OR              reduce using rule 102 (cte -> CTECHAR push_var .)
    RBRACKET        reduce using rule 102 (cte -> CTECHAR push_var .)
    COMMA           reduce using rule 102 (cte -> CTECHAR push_var .)
    RPAREN          reduce using rule 102 (cte -> CTECHAR push_var .)
    SEMICOLON       reduce using rule 102 (cte -> CTECHAR push_var .)


state 177

    (72) read -> READ LPAREN ID RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 207


state 178

    (73) write -> WRITE LPAREN write_aux RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 208


state 179

    (75) write_aux -> exp COMMA . write_aux
    (74) write_aux -> . exp
    (75) write_aux -> . exp COMMA write_aux
    (76) write_aux -> . CTESTRING
    (77) write_aux -> . CTESTRING COMMA write_aux
    (80) exp -> . n_exp
    (81) exp -> . n_exp OR push_op exp pop_op
    (82) n_exp -> . l_exp
    (83) n_exp -> . l_exp AND push_op n_exp pop_op
    (84) l_exp -> . a_exp
    (85) l_exp -> . a_exp RELOP push_op a_exp pop_op
    (86) a_exp -> . term
    (87) a_exp -> . term PLUS push_op a_exp pop_op
    (88) a_exp -> . term MINUS push_op a_exp pop_op
    (89) term -> . factor
    (90) term -> . factor TIMES push_op term pop_op
    (91) term -> . factor DIVIDE push_op term pop_op
    (92) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (93) factor -> . call
    (94) factor -> . factor_aux
    (60) call -> . ID LPAREN RPAREN
    (61) call -> . ID POINT ID LPAREN RPAREN
    (62) call -> . ID LPAREN call_aux RPAREN
    (63) call -> . ID POINT ID LPAREN call_aux RPAREN
    (95) factor_aux -> . cte
    (96) factor_aux -> . PLUS cte
    (97) factor_aux -> . MINUS cte
    (98) cte -> . ID push_var
    (99) cte -> . ID var_aux push_var
    (100) cte -> . CTEI push_var
    (101) cte -> . CTEF push_var
    (102) cte -> . CTECHAR push_var

    CTESTRING       shift and go to state 140
    LPAREN          shift and go to state 129
    ID              shift and go to state 132
    PLUS            shift and go to state 126
    MINUS           shift and go to state 127
    CTEI            shift and go to state 134
    CTEF            shift and go to state 135
    CTECHAR         shift and go to state 136

    exp                            shift and go to state 139
    write_aux                      shift and go to state 209
    n_exp                          shift and go to state 122
    l_exp                          shift and go to state 123
    a_exp                          shift and go to state 124
    term                           shift and go to state 125
    factor                         shift and go to state 128
    call                           shift and go to state 130
    factor_aux                     shift and go to state 131
    cte                            shift and go to state 133

state 180

    (77) write_aux -> CTESTRING COMMA . write_aux
    (74) write_aux -> . exp
    (75) write_aux -> . exp COMMA write_aux
    (76) write_aux -> . CTESTRING
    (77) write_aux -> . CTESTRING COMMA write_aux
    (80) exp -> . n_exp
    (81) exp -> . n_exp OR push_op exp pop_op
    (82) n_exp -> . l_exp
    (83) n_exp -> . l_exp AND push_op n_exp pop_op
    (84) l_exp -> . a_exp
    (85) l_exp -> . a_exp RELOP push_op a_exp pop_op
    (86) a_exp -> . term
    (87) a_exp -> . term PLUS push_op a_exp pop_op
    (88) a_exp -> . term MINUS push_op a_exp pop_op
    (89) term -> . factor
    (90) term -> . factor TIMES push_op term pop_op
    (91) term -> . factor DIVIDE push_op term pop_op
    (92) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (93) factor -> . call
    (94) factor -> . factor_aux
    (60) call -> . ID LPAREN RPAREN
    (61) call -> . ID POINT ID LPAREN RPAREN
    (62) call -> . ID LPAREN call_aux RPAREN
    (63) call -> . ID POINT ID LPAREN call_aux RPAREN
    (95) factor_aux -> . cte
    (96) factor_aux -> . PLUS cte
    (97) factor_aux -> . MINUS cte
    (98) cte -> . ID push_var
    (99) cte -> . ID var_aux push_var
    (100) cte -> . CTEI push_var
    (101) cte -> . CTEF push_var
    (102) cte -> . CTECHAR push_var

    CTESTRING       shift and go to state 140
    LPAREN          shift and go to state 129
    ID              shift and go to state 132
    PLUS            shift and go to state 126
    MINUS           shift and go to state 127
    CTEI            shift and go to state 134
    CTEF            shift and go to state 135
    CTECHAR         shift and go to state 136

    write_aux                      shift and go to state 210
    exp                            shift and go to state 139
    n_exp                          shift and go to state 122
    l_exp                          shift and go to state 123
    a_exp                          shift and go to state 124
    term                           shift and go to state 125
    factor                         shift and go to state 128
    call                           shift and go to state 130
    factor_aux                     shift and go to state 131
    cte                            shift and go to state 133

state 181

    (67) condition_aux -> LPAREN exp RPAREN . THEN LBRACE statutes_aux RBRACE condition_aux_3
    (69) condition_aux_2 -> LPAREN exp RPAREN . THEN LBRACE statutes_aux RBRACE ELIF condition_aux

    THEN            shift and go to state 211


state 182

    (78) while -> WHILE LPAREN exp RPAREN . DO LBRACE statutes_aux RBRACE

    DO              shift and go to state 212


state 183

    (79) for -> FROM LPAREN assignation RPAREN . UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    UNTIL           shift and go to state 213


state 184

    (18) vars_simple_type_aux -> LBRACKET CTEI RBRACKET LBRACKET CTEI . RBRACKET add_matrix_variable

    RBRACKET        shift and go to state 214


state 185

    (30) functions_aux -> VOID ID add_function LPAREN params RPAREN body .

    FUNCT           reduce using rule 30 (functions_aux -> VOID ID add_function LPAREN params RPAREN body .)
    RBRACE          reduce using rule 30 (functions_aux -> VOID ID add_function LPAREN params RPAREN body .)
    INIT            reduce using rule 30 (functions_aux -> VOID ID add_function LPAREN params RPAREN body .)


state 186

    (40) body -> LBRACE dec_vars . statutes_aux RBRACE
    (43) body -> LBRACE dec_vars . statutes_aux RETURN ID SEMICOLON RBRACE
    (51) statutes_aux -> . statutes
    (52) statutes_aux -> . statutes statutes_aux
    (44) statutes -> . assignation SEMICOLON
    (45) statutes -> . CALL call SEMICOLON
    (46) statutes -> . read
    (47) statutes -> . write
    (48) statutes -> . condition
    (49) statutes -> . while
    (50) statutes -> . for
    (53) assignation -> . ID push_var EQUAL push_op exp
    (54) assignation -> . ID var_aux EQUAL exp
    (72) read -> . READ LPAREN ID RPAREN SEMICOLON
    (73) write -> . WRITE LPAREN write_aux RPAREN SEMICOLON
    (66) condition -> . IF condition_aux
    (78) while -> . WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (79) for -> . FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    CALL            shift and go to state 69
    ID              shift and go to state 75
    READ            shift and go to state 76
    WRITE           shift and go to state 77
    IF              shift and go to state 78
    WHILE           shift and go to state 79
    FROM            shift and go to state 80

    statutes_aux                   shift and go to state 215
    statutes                       shift and go to state 67
    assignation                    shift and go to state 68
    read                           shift and go to state 70
    write                          shift and go to state 71
    condition                      shift and go to state 72
    while                          shift and go to state 73
    for                            shift and go to state 74

state 187

    (41) body -> LBRACE statutes_aux . RBRACE
    (42) body -> LBRACE statutes_aux . RETURN ID SEMICOLON RBRACE

    RBRACE          shift and go to state 216
    RETURN          shift and go to state 217


state 188

    (34) params -> simple_type ID add_variable .
    (35) params -> simple_type ID add_variable . COMMA params

    RPAREN          reduce using rule 34 (params -> simple_type ID add_variable .)
    COMMA           shift and go to state 218


state 189

    (36) params -> simple_type ID params_aux .
    (37) params -> simple_type ID params_aux . COMMA params

    RPAREN          reduce using rule 36 (params -> simple_type ID params_aux .)
    COMMA           shift and go to state 219


state 190

    (38) params_aux -> LBRACKET . RBRACKET add_array_var_params
    (39) params_aux -> LBRACKET . RBRACKET LBRACKET RBRACKET add_matrix_var_params

    RBRACKET        shift and go to state 220


state 191

    (33) functions_aux -> simple_type ID add_function LPAREN params RPAREN body .

    FUNCT           reduce using rule 33 (functions_aux -> simple_type ID add_function LPAREN params RPAREN body .)
    RBRACE          reduce using rule 33 (functions_aux -> simple_type ID add_function LPAREN params RPAREN body .)
    INIT            reduce using rule 33 (functions_aux -> simple_type ID add_function LPAREN params RPAREN body .)


state 192

    (62) call -> ID LPAREN call_aux RPAREN .

    SEMICOLON       reduce using rule 62 (call -> ID LPAREN call_aux RPAREN .)
    TIMES           reduce using rule 62 (call -> ID LPAREN call_aux RPAREN .)
    DIVIDE          reduce using rule 62 (call -> ID LPAREN call_aux RPAREN .)
    PLUS            reduce using rule 62 (call -> ID LPAREN call_aux RPAREN .)
    MINUS           reduce using rule 62 (call -> ID LPAREN call_aux RPAREN .)
    RELOP           reduce using rule 62 (call -> ID LPAREN call_aux RPAREN .)
    AND             reduce using rule 62 (call -> ID LPAREN call_aux RPAREN .)
    OR              reduce using rule 62 (call -> ID LPAREN call_aux RPAREN .)
    RBRACKET        reduce using rule 62 (call -> ID LPAREN call_aux RPAREN .)
    COMMA           reduce using rule 62 (call -> ID LPAREN call_aux RPAREN .)
    RPAREN          reduce using rule 62 (call -> ID LPAREN call_aux RPAREN .)


state 193

    (65) call_aux -> exp COMMA . call_aux
    (64) call_aux -> . exp
    (65) call_aux -> . exp COMMA call_aux
    (80) exp -> . n_exp
    (81) exp -> . n_exp OR push_op exp pop_op
    (82) n_exp -> . l_exp
    (83) n_exp -> . l_exp AND push_op n_exp pop_op
    (84) l_exp -> . a_exp
    (85) l_exp -> . a_exp RELOP push_op a_exp pop_op
    (86) a_exp -> . term
    (87) a_exp -> . term PLUS push_op a_exp pop_op
    (88) a_exp -> . term MINUS push_op a_exp pop_op
    (89) term -> . factor
    (90) term -> . factor TIMES push_op term pop_op
    (91) term -> . factor DIVIDE push_op term pop_op
    (92) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (93) factor -> . call
    (94) factor -> . factor_aux
    (60) call -> . ID LPAREN RPAREN
    (61) call -> . ID POINT ID LPAREN RPAREN
    (62) call -> . ID LPAREN call_aux RPAREN
    (63) call -> . ID POINT ID LPAREN call_aux RPAREN
    (95) factor_aux -> . cte
    (96) factor_aux -> . PLUS cte
    (97) factor_aux -> . MINUS cte
    (98) cte -> . ID push_var
    (99) cte -> . ID var_aux push_var
    (100) cte -> . CTEI push_var
    (101) cte -> . CTEF push_var
    (102) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 129
    ID              shift and go to state 132
    PLUS            shift and go to state 126
    MINUS           shift and go to state 127
    CTEI            shift and go to state 134
    CTEF            shift and go to state 135
    CTECHAR         shift and go to state 136

    exp                            shift and go to state 154
    call_aux                       shift and go to state 221
    n_exp                          shift and go to state 122
    l_exp                          shift and go to state 123
    a_exp                          shift and go to state 124
    term                           shift and go to state 125
    factor                         shift and go to state 128
    call                           shift and go to state 130
    factor_aux                     shift and go to state 131
    cte                            shift and go to state 133

state 194

    (61) call -> ID POINT ID LPAREN . RPAREN
    (63) call -> ID POINT ID LPAREN . call_aux RPAREN
    (64) call_aux -> . exp
    (65) call_aux -> . exp COMMA call_aux
    (80) exp -> . n_exp
    (81) exp -> . n_exp OR push_op exp pop_op
    (82) n_exp -> . l_exp
    (83) n_exp -> . l_exp AND push_op n_exp pop_op
    (84) l_exp -> . a_exp
    (85) l_exp -> . a_exp RELOP push_op a_exp pop_op
    (86) a_exp -> . term
    (87) a_exp -> . term PLUS push_op a_exp pop_op
    (88) a_exp -> . term MINUS push_op a_exp pop_op
    (89) term -> . factor
    (90) term -> . factor TIMES push_op term pop_op
    (91) term -> . factor DIVIDE push_op term pop_op
    (92) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (93) factor -> . call
    (94) factor -> . factor_aux
    (60) call -> . ID LPAREN RPAREN
    (61) call -> . ID POINT ID LPAREN RPAREN
    (62) call -> . ID LPAREN call_aux RPAREN
    (63) call -> . ID POINT ID LPAREN call_aux RPAREN
    (95) factor_aux -> . cte
    (96) factor_aux -> . PLUS cte
    (97) factor_aux -> . MINUS cte
    (98) cte -> . ID push_var
    (99) cte -> . ID var_aux push_var
    (100) cte -> . CTEI push_var
    (101) cte -> . CTEF push_var
    (102) cte -> . CTECHAR push_var

    RPAREN          shift and go to state 222
    LPAREN          shift and go to state 129
    ID              shift and go to state 132
    PLUS            shift and go to state 126
    MINUS           shift and go to state 127
    CTEI            shift and go to state 134
    CTEF            shift and go to state 135
    CTECHAR         shift and go to state 136

    call_aux                       shift and go to state 223
    exp                            shift and go to state 154
    n_exp                          shift and go to state 122
    l_exp                          shift and go to state 123
    a_exp                          shift and go to state 124
    term                           shift and go to state 125
    factor                         shift and go to state 128
    call                           shift and go to state 130
    factor_aux                     shift and go to state 131
    cte                            shift and go to state 133

state 195

    (53) assignation -> ID push_var EQUAL push_op exp .

    SEMICOLON       reduce using rule 53 (assignation -> ID push_var EQUAL push_op exp .)
    RPAREN          reduce using rule 53 (assignation -> ID push_var EQUAL push_op exp .)


state 196

    (59) var_aux_2 -> LBRACKET exp RBRACKET LBRACKET . exp RBRACKET
    (80) exp -> . n_exp
    (81) exp -> . n_exp OR push_op exp pop_op
    (82) n_exp -> . l_exp
    (83) n_exp -> . l_exp AND push_op n_exp pop_op
    (84) l_exp -> . a_exp
    (85) l_exp -> . a_exp RELOP push_op a_exp pop_op
    (86) a_exp -> . term
    (87) a_exp -> . term PLUS push_op a_exp pop_op
    (88) a_exp -> . term MINUS push_op a_exp pop_op
    (89) term -> . factor
    (90) term -> . factor TIMES push_op term pop_op
    (91) term -> . factor DIVIDE push_op term pop_op
    (92) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (93) factor -> . call
    (94) factor -> . factor_aux
    (60) call -> . ID LPAREN RPAREN
    (61) call -> . ID POINT ID LPAREN RPAREN
    (62) call -> . ID LPAREN call_aux RPAREN
    (63) call -> . ID POINT ID LPAREN call_aux RPAREN
    (95) factor_aux -> . cte
    (96) factor_aux -> . PLUS cte
    (97) factor_aux -> . MINUS cte
    (98) cte -> . ID push_var
    (99) cte -> . ID var_aux push_var
    (100) cte -> . CTEI push_var
    (101) cte -> . CTEF push_var
    (102) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 129
    ID              shift and go to state 132
    PLUS            shift and go to state 126
    MINUS           shift and go to state 127
    CTEI            shift and go to state 134
    CTEF            shift and go to state 135
    CTECHAR         shift and go to state 136

    exp                            shift and go to state 224
    n_exp                          shift and go to state 122
    l_exp                          shift and go to state 123
    a_exp                          shift and go to state 124
    term                           shift and go to state 125
    factor                         shift and go to state 128
    call                           shift and go to state 130
    factor_aux                     shift and go to state 131
    cte                            shift and go to state 133

state 197

    (81) exp -> n_exp OR push_op . exp pop_op
    (80) exp -> . n_exp
    (81) exp -> . n_exp OR push_op exp pop_op
    (82) n_exp -> . l_exp
    (83) n_exp -> . l_exp AND push_op n_exp pop_op
    (84) l_exp -> . a_exp
    (85) l_exp -> . a_exp RELOP push_op a_exp pop_op
    (86) a_exp -> . term
    (87) a_exp -> . term PLUS push_op a_exp pop_op
    (88) a_exp -> . term MINUS push_op a_exp pop_op
    (89) term -> . factor
    (90) term -> . factor TIMES push_op term pop_op
    (91) term -> . factor DIVIDE push_op term pop_op
    (92) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (93) factor -> . call
    (94) factor -> . factor_aux
    (60) call -> . ID LPAREN RPAREN
    (61) call -> . ID POINT ID LPAREN RPAREN
    (62) call -> . ID LPAREN call_aux RPAREN
    (63) call -> . ID POINT ID LPAREN call_aux RPAREN
    (95) factor_aux -> . cte
    (96) factor_aux -> . PLUS cte
    (97) factor_aux -> . MINUS cte
    (98) cte -> . ID push_var
    (99) cte -> . ID var_aux push_var
    (100) cte -> . CTEI push_var
    (101) cte -> . CTEF push_var
    (102) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 129
    ID              shift and go to state 132
    PLUS            shift and go to state 126
    MINUS           shift and go to state 127
    CTEI            shift and go to state 134
    CTEF            shift and go to state 135
    CTECHAR         shift and go to state 136

    n_exp                          shift and go to state 122
    exp                            shift and go to state 225
    l_exp                          shift and go to state 123
    a_exp                          shift and go to state 124
    term                           shift and go to state 125
    factor                         shift and go to state 128
    call                           shift and go to state 130
    factor_aux                     shift and go to state 131
    cte                            shift and go to state 133

state 198

    (83) n_exp -> l_exp AND push_op . n_exp pop_op
    (82) n_exp -> . l_exp
    (83) n_exp -> . l_exp AND push_op n_exp pop_op
    (84) l_exp -> . a_exp
    (85) l_exp -> . a_exp RELOP push_op a_exp pop_op
    (86) a_exp -> . term
    (87) a_exp -> . term PLUS push_op a_exp pop_op
    (88) a_exp -> . term MINUS push_op a_exp pop_op
    (89) term -> . factor
    (90) term -> . factor TIMES push_op term pop_op
    (91) term -> . factor DIVIDE push_op term pop_op
    (92) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (93) factor -> . call
    (94) factor -> . factor_aux
    (60) call -> . ID LPAREN RPAREN
    (61) call -> . ID POINT ID LPAREN RPAREN
    (62) call -> . ID LPAREN call_aux RPAREN
    (63) call -> . ID POINT ID LPAREN call_aux RPAREN
    (95) factor_aux -> . cte
    (96) factor_aux -> . PLUS cte
    (97) factor_aux -> . MINUS cte
    (98) cte -> . ID push_var
    (99) cte -> . ID var_aux push_var
    (100) cte -> . CTEI push_var
    (101) cte -> . CTEF push_var
    (102) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 129
    ID              shift and go to state 132
    PLUS            shift and go to state 126
    MINUS           shift and go to state 127
    CTEI            shift and go to state 134
    CTEF            shift and go to state 135
    CTECHAR         shift and go to state 136

    l_exp                          shift and go to state 123
    n_exp                          shift and go to state 226
    a_exp                          shift and go to state 124
    term                           shift and go to state 125
    factor                         shift and go to state 128
    call                           shift and go to state 130
    factor_aux                     shift and go to state 131
    cte                            shift and go to state 133

state 199

    (85) l_exp -> a_exp RELOP push_op . a_exp pop_op
    (86) a_exp -> . term
    (87) a_exp -> . term PLUS push_op a_exp pop_op
    (88) a_exp -> . term MINUS push_op a_exp pop_op
    (89) term -> . factor
    (90) term -> . factor TIMES push_op term pop_op
    (91) term -> . factor DIVIDE push_op term pop_op
    (92) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (93) factor -> . call
    (94) factor -> . factor_aux
    (60) call -> . ID LPAREN RPAREN
    (61) call -> . ID POINT ID LPAREN RPAREN
    (62) call -> . ID LPAREN call_aux RPAREN
    (63) call -> . ID POINT ID LPAREN call_aux RPAREN
    (95) factor_aux -> . cte
    (96) factor_aux -> . PLUS cte
    (97) factor_aux -> . MINUS cte
    (98) cte -> . ID push_var
    (99) cte -> . ID var_aux push_var
    (100) cte -> . CTEI push_var
    (101) cte -> . CTEF push_var
    (102) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 129
    ID              shift and go to state 132
    PLUS            shift and go to state 126
    MINUS           shift and go to state 127
    CTEI            shift and go to state 134
    CTEF            shift and go to state 135
    CTECHAR         shift and go to state 136

    a_exp                          shift and go to state 227
    term                           shift and go to state 125
    factor                         shift and go to state 128
    call                           shift and go to state 130
    factor_aux                     shift and go to state 131
    cte                            shift and go to state 133

state 200

    (87) a_exp -> term PLUS push_op . a_exp pop_op
    (86) a_exp -> . term
    (87) a_exp -> . term PLUS push_op a_exp pop_op
    (88) a_exp -> . term MINUS push_op a_exp pop_op
    (89) term -> . factor
    (90) term -> . factor TIMES push_op term pop_op
    (91) term -> . factor DIVIDE push_op term pop_op
    (92) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (93) factor -> . call
    (94) factor -> . factor_aux
    (60) call -> . ID LPAREN RPAREN
    (61) call -> . ID POINT ID LPAREN RPAREN
    (62) call -> . ID LPAREN call_aux RPAREN
    (63) call -> . ID POINT ID LPAREN call_aux RPAREN
    (95) factor_aux -> . cte
    (96) factor_aux -> . PLUS cte
    (97) factor_aux -> . MINUS cte
    (98) cte -> . ID push_var
    (99) cte -> . ID var_aux push_var
    (100) cte -> . CTEI push_var
    (101) cte -> . CTEF push_var
    (102) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 129
    ID              shift and go to state 132
    PLUS            shift and go to state 126
    MINUS           shift and go to state 127
    CTEI            shift and go to state 134
    CTEF            shift and go to state 135
    CTECHAR         shift and go to state 136

    term                           shift and go to state 125
    a_exp                          shift and go to state 228
    factor                         shift and go to state 128
    call                           shift and go to state 130
    factor_aux                     shift and go to state 131
    cte                            shift and go to state 133

state 201

    (88) a_exp -> term MINUS push_op . a_exp pop_op
    (86) a_exp -> . term
    (87) a_exp -> . term PLUS push_op a_exp pop_op
    (88) a_exp -> . term MINUS push_op a_exp pop_op
    (89) term -> . factor
    (90) term -> . factor TIMES push_op term pop_op
    (91) term -> . factor DIVIDE push_op term pop_op
    (92) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (93) factor -> . call
    (94) factor -> . factor_aux
    (60) call -> . ID LPAREN RPAREN
    (61) call -> . ID POINT ID LPAREN RPAREN
    (62) call -> . ID LPAREN call_aux RPAREN
    (63) call -> . ID POINT ID LPAREN call_aux RPAREN
    (95) factor_aux -> . cte
    (96) factor_aux -> . PLUS cte
    (97) factor_aux -> . MINUS cte
    (98) cte -> . ID push_var
    (99) cte -> . ID var_aux push_var
    (100) cte -> . CTEI push_var
    (101) cte -> . CTEF push_var
    (102) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 129
    ID              shift and go to state 132
    PLUS            shift and go to state 126
    MINUS           shift and go to state 127
    CTEI            shift and go to state 134
    CTEF            shift and go to state 135
    CTECHAR         shift and go to state 136

    term                           shift and go to state 125
    a_exp                          shift and go to state 229
    factor                         shift and go to state 128
    call                           shift and go to state 130
    factor_aux                     shift and go to state 131
    cte                            shift and go to state 133

state 202

    (90) term -> factor TIMES push_op . term pop_op
    (89) term -> . factor
    (90) term -> . factor TIMES push_op term pop_op
    (91) term -> . factor DIVIDE push_op term pop_op
    (92) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (93) factor -> . call
    (94) factor -> . factor_aux
    (60) call -> . ID LPAREN RPAREN
    (61) call -> . ID POINT ID LPAREN RPAREN
    (62) call -> . ID LPAREN call_aux RPAREN
    (63) call -> . ID POINT ID LPAREN call_aux RPAREN
    (95) factor_aux -> . cte
    (96) factor_aux -> . PLUS cte
    (97) factor_aux -> . MINUS cte
    (98) cte -> . ID push_var
    (99) cte -> . ID var_aux push_var
    (100) cte -> . CTEI push_var
    (101) cte -> . CTEF push_var
    (102) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 129
    ID              shift and go to state 132
    PLUS            shift and go to state 126
    MINUS           shift and go to state 127
    CTEI            shift and go to state 134
    CTEF            shift and go to state 135
    CTECHAR         shift and go to state 136

    factor                         shift and go to state 128
    term                           shift and go to state 230
    call                           shift and go to state 130
    factor_aux                     shift and go to state 131
    cte                            shift and go to state 133

state 203

    (91) term -> factor DIVIDE push_op . term pop_op
    (89) term -> . factor
    (90) term -> . factor TIMES push_op term pop_op
    (91) term -> . factor DIVIDE push_op term pop_op
    (92) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (93) factor -> . call
    (94) factor -> . factor_aux
    (60) call -> . ID LPAREN RPAREN
    (61) call -> . ID POINT ID LPAREN RPAREN
    (62) call -> . ID LPAREN call_aux RPAREN
    (63) call -> . ID POINT ID LPAREN call_aux RPAREN
    (95) factor_aux -> . cte
    (96) factor_aux -> . PLUS cte
    (97) factor_aux -> . MINUS cte
    (98) cte -> . ID push_var
    (99) cte -> . ID var_aux push_var
    (100) cte -> . CTEI push_var
    (101) cte -> . CTEF push_var
    (102) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 129
    ID              shift and go to state 132
    PLUS            shift and go to state 126
    MINUS           shift and go to state 127
    CTEI            shift and go to state 134
    CTEF            shift and go to state 135
    CTECHAR         shift and go to state 136

    factor                         shift and go to state 128
    term                           shift and go to state 231
    call                           shift and go to state 130
    factor_aux                     shift and go to state 131
    cte                            shift and go to state 133

state 204

    (92) factor -> LPAREN push_paren exp . RPAREN pop_paren

    RPAREN          shift and go to state 232


state 205

    (61) call -> ID POINT ID . LPAREN RPAREN
    (63) call -> ID POINT ID . LPAREN call_aux RPAREN
    (55) var_aux -> POINT ID .
    (56) var_aux -> POINT ID . var_aux_2
    (58) var_aux_2 -> . LBRACKET exp RBRACKET
    (59) var_aux_2 -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET

    LPAREN          shift and go to state 194
    TIMES           reduce using rule 55 (var_aux -> POINT ID .)
    DIVIDE          reduce using rule 55 (var_aux -> POINT ID .)
    PLUS            reduce using rule 55 (var_aux -> POINT ID .)
    MINUS           reduce using rule 55 (var_aux -> POINT ID .)
    RELOP           reduce using rule 55 (var_aux -> POINT ID .)
    AND             reduce using rule 55 (var_aux -> POINT ID .)
    OR              reduce using rule 55 (var_aux -> POINT ID .)
    RBRACKET        reduce using rule 55 (var_aux -> POINT ID .)
    COMMA           reduce using rule 55 (var_aux -> POINT ID .)
    RPAREN          reduce using rule 55 (var_aux -> POINT ID .)
    SEMICOLON       reduce using rule 55 (var_aux -> POINT ID .)
    LBRACKET        shift and go to state 98

    var_aux_2                      shift and go to state 158

state 206

    (99) cte -> ID var_aux push_var .

    TIMES           reduce using rule 99 (cte -> ID var_aux push_var .)
    DIVIDE          reduce using rule 99 (cte -> ID var_aux push_var .)
    PLUS            reduce using rule 99 (cte -> ID var_aux push_var .)
    MINUS           reduce using rule 99 (cte -> ID var_aux push_var .)
    RELOP           reduce using rule 99 (cte -> ID var_aux push_var .)
    AND             reduce using rule 99 (cte -> ID var_aux push_var .)
    OR              reduce using rule 99 (cte -> ID var_aux push_var .)
    RBRACKET        reduce using rule 99 (cte -> ID var_aux push_var .)
    COMMA           reduce using rule 99 (cte -> ID var_aux push_var .)
    RPAREN          reduce using rule 99 (cte -> ID var_aux push_var .)
    SEMICOLON       reduce using rule 99 (cte -> ID var_aux push_var .)


state 207

    (72) read -> READ LPAREN ID RPAREN SEMICOLON .

    CALL            reduce using rule 72 (read -> READ LPAREN ID RPAREN SEMICOLON .)
    ID              reduce using rule 72 (read -> READ LPAREN ID RPAREN SEMICOLON .)
    READ            reduce using rule 72 (read -> READ LPAREN ID RPAREN SEMICOLON .)
    WRITE           reduce using rule 72 (read -> READ LPAREN ID RPAREN SEMICOLON .)
    IF              reduce using rule 72 (read -> READ LPAREN ID RPAREN SEMICOLON .)
    WHILE           reduce using rule 72 (read -> READ LPAREN ID RPAREN SEMICOLON .)
    FROM            reduce using rule 72 (read -> READ LPAREN ID RPAREN SEMICOLON .)
    RBRACE          reduce using rule 72 (read -> READ LPAREN ID RPAREN SEMICOLON .)
    RETURN          reduce using rule 72 (read -> READ LPAREN ID RPAREN SEMICOLON .)


state 208

    (73) write -> WRITE LPAREN write_aux RPAREN SEMICOLON .

    CALL            reduce using rule 73 (write -> WRITE LPAREN write_aux RPAREN SEMICOLON .)
    ID              reduce using rule 73 (write -> WRITE LPAREN write_aux RPAREN SEMICOLON .)
    READ            reduce using rule 73 (write -> WRITE LPAREN write_aux RPAREN SEMICOLON .)
    WRITE           reduce using rule 73 (write -> WRITE LPAREN write_aux RPAREN SEMICOLON .)
    IF              reduce using rule 73 (write -> WRITE LPAREN write_aux RPAREN SEMICOLON .)
    WHILE           reduce using rule 73 (write -> WRITE LPAREN write_aux RPAREN SEMICOLON .)
    FROM            reduce using rule 73 (write -> WRITE LPAREN write_aux RPAREN SEMICOLON .)
    RBRACE          reduce using rule 73 (write -> WRITE LPAREN write_aux RPAREN SEMICOLON .)
    RETURN          reduce using rule 73 (write -> WRITE LPAREN write_aux RPAREN SEMICOLON .)


state 209

    (75) write_aux -> exp COMMA write_aux .

    RPAREN          reduce using rule 75 (write_aux -> exp COMMA write_aux .)


state 210

    (77) write_aux -> CTESTRING COMMA write_aux .

    RPAREN          reduce using rule 77 (write_aux -> CTESTRING COMMA write_aux .)


state 211

    (67) condition_aux -> LPAREN exp RPAREN THEN . LBRACE statutes_aux RBRACE condition_aux_3
    (69) condition_aux_2 -> LPAREN exp RPAREN THEN . LBRACE statutes_aux RBRACE ELIF condition_aux

    LBRACE          shift and go to state 233


state 212

    (78) while -> WHILE LPAREN exp RPAREN DO . LBRACE statutes_aux RBRACE

    LBRACE          shift and go to state 234


state 213

    (79) for -> FROM LPAREN assignation RPAREN UNTIL . LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    LPAREN          shift and go to state 235


state 214

    (18) vars_simple_type_aux -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET . add_matrix_variable
    (108) add_matrix_variable -> .

    COMMA           reduce using rule 108 (add_matrix_variable -> .)
    SEMICOLON       reduce using rule 108 (add_matrix_variable -> .)

    add_matrix_variable            shift and go to state 236

state 215

    (40) body -> LBRACE dec_vars statutes_aux . RBRACE
    (43) body -> LBRACE dec_vars statutes_aux . RETURN ID SEMICOLON RBRACE

    RBRACE          shift and go to state 237
    RETURN          shift and go to state 238


state 216

    (41) body -> LBRACE statutes_aux RBRACE .

    FUNCT           reduce using rule 41 (body -> LBRACE statutes_aux RBRACE .)
    RBRACE          reduce using rule 41 (body -> LBRACE statutes_aux RBRACE .)
    INIT            reduce using rule 41 (body -> LBRACE statutes_aux RBRACE .)


state 217

    (42) body -> LBRACE statutes_aux RETURN . ID SEMICOLON RBRACE

    ID              shift and go to state 239


state 218

    (35) params -> simple_type ID add_variable COMMA . params
    (34) params -> . simple_type ID add_variable
    (35) params -> . simple_type ID add_variable COMMA params
    (36) params -> . simple_type ID params_aux
    (37) params -> . simple_type ID params_aux COMMA params
    (19) simple_type -> . INT
    (20) simple_type -> . FLOAT
    (21) simple_type -> . CHAR

    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    CHAR            shift and go to state 38

    simple_type                    shift and go to state 111
    params                         shift and go to state 240

state 219

    (37) params -> simple_type ID params_aux COMMA . params
    (34) params -> . simple_type ID add_variable
    (35) params -> . simple_type ID add_variable COMMA params
    (36) params -> . simple_type ID params_aux
    (37) params -> . simple_type ID params_aux COMMA params
    (19) simple_type -> . INT
    (20) simple_type -> . FLOAT
    (21) simple_type -> . CHAR

    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    CHAR            shift and go to state 38

    simple_type                    shift and go to state 111
    params                         shift and go to state 241

state 220

    (38) params_aux -> LBRACKET RBRACKET . add_array_var_params
    (39) params_aux -> LBRACKET RBRACKET . LBRACKET RBRACKET add_matrix_var_params
    (109) add_array_var_params -> .

    LBRACKET        shift and go to state 242
    COMMA           reduce using rule 109 (add_array_var_params -> .)
    RPAREN          reduce using rule 109 (add_array_var_params -> .)

    add_array_var_params           shift and go to state 243

state 221

    (65) call_aux -> exp COMMA call_aux .

    RPAREN          reduce using rule 65 (call_aux -> exp COMMA call_aux .)


state 222

    (61) call -> ID POINT ID LPAREN RPAREN .

    SEMICOLON       reduce using rule 61 (call -> ID POINT ID LPAREN RPAREN .)
    TIMES           reduce using rule 61 (call -> ID POINT ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 61 (call -> ID POINT ID LPAREN RPAREN .)
    PLUS            reduce using rule 61 (call -> ID POINT ID LPAREN RPAREN .)
    MINUS           reduce using rule 61 (call -> ID POINT ID LPAREN RPAREN .)
    RELOP           reduce using rule 61 (call -> ID POINT ID LPAREN RPAREN .)
    AND             reduce using rule 61 (call -> ID POINT ID LPAREN RPAREN .)
    OR              reduce using rule 61 (call -> ID POINT ID LPAREN RPAREN .)
    RBRACKET        reduce using rule 61 (call -> ID POINT ID LPAREN RPAREN .)
    COMMA           reduce using rule 61 (call -> ID POINT ID LPAREN RPAREN .)
    RPAREN          reduce using rule 61 (call -> ID POINT ID LPAREN RPAREN .)


state 223

    (63) call -> ID POINT ID LPAREN call_aux . RPAREN

    RPAREN          shift and go to state 244


state 224

    (59) var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp . RBRACKET

    RBRACKET        shift and go to state 245


state 225

    (81) exp -> n_exp OR push_op exp . pop_op
    (117) pop_op -> .

    RBRACKET        reduce using rule 117 (pop_op -> .)
    COMMA           reduce using rule 117 (pop_op -> .)
    RPAREN          reduce using rule 117 (pop_op -> .)
    SEMICOLON       reduce using rule 117 (pop_op -> .)

    pop_op                         shift and go to state 246

state 226

    (83) n_exp -> l_exp AND push_op n_exp . pop_op
    (117) pop_op -> .

    OR              reduce using rule 117 (pop_op -> .)
    RBRACKET        reduce using rule 117 (pop_op -> .)
    COMMA           reduce using rule 117 (pop_op -> .)
    RPAREN          reduce using rule 117 (pop_op -> .)
    SEMICOLON       reduce using rule 117 (pop_op -> .)

    pop_op                         shift and go to state 247

state 227

    (85) l_exp -> a_exp RELOP push_op a_exp . pop_op
    (117) pop_op -> .

    AND             reduce using rule 117 (pop_op -> .)
    OR              reduce using rule 117 (pop_op -> .)
    RBRACKET        reduce using rule 117 (pop_op -> .)
    COMMA           reduce using rule 117 (pop_op -> .)
    RPAREN          reduce using rule 117 (pop_op -> .)
    SEMICOLON       reduce using rule 117 (pop_op -> .)

    pop_op                         shift and go to state 248

state 228

    (87) a_exp -> term PLUS push_op a_exp . pop_op
    (117) pop_op -> .

    RELOP           reduce using rule 117 (pop_op -> .)
    AND             reduce using rule 117 (pop_op -> .)
    OR              reduce using rule 117 (pop_op -> .)
    RBRACKET        reduce using rule 117 (pop_op -> .)
    COMMA           reduce using rule 117 (pop_op -> .)
    RPAREN          reduce using rule 117 (pop_op -> .)
    SEMICOLON       reduce using rule 117 (pop_op -> .)

    pop_op                         shift and go to state 249

state 229

    (88) a_exp -> term MINUS push_op a_exp . pop_op
    (117) pop_op -> .

    RELOP           reduce using rule 117 (pop_op -> .)
    AND             reduce using rule 117 (pop_op -> .)
    OR              reduce using rule 117 (pop_op -> .)
    RBRACKET        reduce using rule 117 (pop_op -> .)
    COMMA           reduce using rule 117 (pop_op -> .)
    RPAREN          reduce using rule 117 (pop_op -> .)
    SEMICOLON       reduce using rule 117 (pop_op -> .)

    pop_op                         shift and go to state 250

state 230

    (90) term -> factor TIMES push_op term . pop_op
    (117) pop_op -> .

    PLUS            reduce using rule 117 (pop_op -> .)
    MINUS           reduce using rule 117 (pop_op -> .)
    RELOP           reduce using rule 117 (pop_op -> .)
    AND             reduce using rule 117 (pop_op -> .)
    OR              reduce using rule 117 (pop_op -> .)
    RBRACKET        reduce using rule 117 (pop_op -> .)
    COMMA           reduce using rule 117 (pop_op -> .)
    RPAREN          reduce using rule 117 (pop_op -> .)
    SEMICOLON       reduce using rule 117 (pop_op -> .)

    pop_op                         shift and go to state 251

state 231

    (91) term -> factor DIVIDE push_op term . pop_op
    (117) pop_op -> .

    PLUS            reduce using rule 117 (pop_op -> .)
    MINUS           reduce using rule 117 (pop_op -> .)
    RELOP           reduce using rule 117 (pop_op -> .)
    AND             reduce using rule 117 (pop_op -> .)
    OR              reduce using rule 117 (pop_op -> .)
    RBRACKET        reduce using rule 117 (pop_op -> .)
    COMMA           reduce using rule 117 (pop_op -> .)
    RPAREN          reduce using rule 117 (pop_op -> .)
    SEMICOLON       reduce using rule 117 (pop_op -> .)

    pop_op                         shift and go to state 252

state 232

    (92) factor -> LPAREN push_paren exp RPAREN . pop_paren
    (119) pop_paren -> .

    TIMES           reduce using rule 119 (pop_paren -> .)
    DIVIDE          reduce using rule 119 (pop_paren -> .)
    PLUS            reduce using rule 119 (pop_paren -> .)
    MINUS           reduce using rule 119 (pop_paren -> .)
    RELOP           reduce using rule 119 (pop_paren -> .)
    AND             reduce using rule 119 (pop_paren -> .)
    OR              reduce using rule 119 (pop_paren -> .)
    RBRACKET        reduce using rule 119 (pop_paren -> .)
    COMMA           reduce using rule 119 (pop_paren -> .)
    RPAREN          reduce using rule 119 (pop_paren -> .)
    SEMICOLON       reduce using rule 119 (pop_paren -> .)

    pop_paren                      shift and go to state 253

state 233

    (67) condition_aux -> LPAREN exp RPAREN THEN LBRACE . statutes_aux RBRACE condition_aux_3
    (69) condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE . statutes_aux RBRACE ELIF condition_aux
    (51) statutes_aux -> . statutes
    (52) statutes_aux -> . statutes statutes_aux
    (44) statutes -> . assignation SEMICOLON
    (45) statutes -> . CALL call SEMICOLON
    (46) statutes -> . read
    (47) statutes -> . write
    (48) statutes -> . condition
    (49) statutes -> . while
    (50) statutes -> . for
    (53) assignation -> . ID push_var EQUAL push_op exp
    (54) assignation -> . ID var_aux EQUAL exp
    (72) read -> . READ LPAREN ID RPAREN SEMICOLON
    (73) write -> . WRITE LPAREN write_aux RPAREN SEMICOLON
    (66) condition -> . IF condition_aux
    (78) while -> . WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (79) for -> . FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    CALL            shift and go to state 69
    ID              shift and go to state 75
    READ            shift and go to state 76
    WRITE           shift and go to state 77
    IF              shift and go to state 78
    WHILE           shift and go to state 79
    FROM            shift and go to state 80

    statutes_aux                   shift and go to state 254
    statutes                       shift and go to state 67
    assignation                    shift and go to state 68
    read                           shift and go to state 70
    write                          shift and go to state 71
    condition                      shift and go to state 72
    while                          shift and go to state 73
    for                            shift and go to state 74

state 234

    (78) while -> WHILE LPAREN exp RPAREN DO LBRACE . statutes_aux RBRACE
    (51) statutes_aux -> . statutes
    (52) statutes_aux -> . statutes statutes_aux
    (44) statutes -> . assignation SEMICOLON
    (45) statutes -> . CALL call SEMICOLON
    (46) statutes -> . read
    (47) statutes -> . write
    (48) statutes -> . condition
    (49) statutes -> . while
    (50) statutes -> . for
    (53) assignation -> . ID push_var EQUAL push_op exp
    (54) assignation -> . ID var_aux EQUAL exp
    (72) read -> . READ LPAREN ID RPAREN SEMICOLON
    (73) write -> . WRITE LPAREN write_aux RPAREN SEMICOLON
    (66) condition -> . IF condition_aux
    (78) while -> . WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (79) for -> . FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    CALL            shift and go to state 69
    ID              shift and go to state 75
    READ            shift and go to state 76
    WRITE           shift and go to state 77
    IF              shift and go to state 78
    WHILE           shift and go to state 79
    FROM            shift and go to state 80

    statutes_aux                   shift and go to state 255
    statutes                       shift and go to state 67
    assignation                    shift and go to state 68
    read                           shift and go to state 70
    write                          shift and go to state 71
    condition                      shift and go to state 72
    while                          shift and go to state 73
    for                            shift and go to state 74

state 235

    (79) for -> FROM LPAREN assignation RPAREN UNTIL LPAREN . exp RPAREN DO LBRACE statutes_aux RBRACE
    (80) exp -> . n_exp
    (81) exp -> . n_exp OR push_op exp pop_op
    (82) n_exp -> . l_exp
    (83) n_exp -> . l_exp AND push_op n_exp pop_op
    (84) l_exp -> . a_exp
    (85) l_exp -> . a_exp RELOP push_op a_exp pop_op
    (86) a_exp -> . term
    (87) a_exp -> . term PLUS push_op a_exp pop_op
    (88) a_exp -> . term MINUS push_op a_exp pop_op
    (89) term -> . factor
    (90) term -> . factor TIMES push_op term pop_op
    (91) term -> . factor DIVIDE push_op term pop_op
    (92) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (93) factor -> . call
    (94) factor -> . factor_aux
    (60) call -> . ID LPAREN RPAREN
    (61) call -> . ID POINT ID LPAREN RPAREN
    (62) call -> . ID LPAREN call_aux RPAREN
    (63) call -> . ID POINT ID LPAREN call_aux RPAREN
    (95) factor_aux -> . cte
    (96) factor_aux -> . PLUS cte
    (97) factor_aux -> . MINUS cte
    (98) cte -> . ID push_var
    (99) cte -> . ID var_aux push_var
    (100) cte -> . CTEI push_var
    (101) cte -> . CTEF push_var
    (102) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 129
    ID              shift and go to state 132
    PLUS            shift and go to state 126
    MINUS           shift and go to state 127
    CTEI            shift and go to state 134
    CTEF            shift and go to state 135
    CTECHAR         shift and go to state 136

    exp                            shift and go to state 256
    n_exp                          shift and go to state 122
    l_exp                          shift and go to state 123
    a_exp                          shift and go to state 124
    term                           shift and go to state 125
    factor                         shift and go to state 128
    call                           shift and go to state 130
    factor_aux                     shift and go to state 131
    cte                            shift and go to state 133

state 236

    (18) vars_simple_type_aux -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET add_matrix_variable .

    COMMA           reduce using rule 18 (vars_simple_type_aux -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET add_matrix_variable .)
    SEMICOLON       reduce using rule 18 (vars_simple_type_aux -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET add_matrix_variable .)


state 237

    (40) body -> LBRACE dec_vars statutes_aux RBRACE .

    FUNCT           reduce using rule 40 (body -> LBRACE dec_vars statutes_aux RBRACE .)
    RBRACE          reduce using rule 40 (body -> LBRACE dec_vars statutes_aux RBRACE .)
    INIT            reduce using rule 40 (body -> LBRACE dec_vars statutes_aux RBRACE .)


state 238

    (43) body -> LBRACE dec_vars statutes_aux RETURN . ID SEMICOLON RBRACE

    ID              shift and go to state 257


state 239

    (42) body -> LBRACE statutes_aux RETURN ID . SEMICOLON RBRACE

    SEMICOLON       shift and go to state 258


state 240

    (35) params -> simple_type ID add_variable COMMA params .

    RPAREN          reduce using rule 35 (params -> simple_type ID add_variable COMMA params .)


state 241

    (37) params -> simple_type ID params_aux COMMA params .

    RPAREN          reduce using rule 37 (params -> simple_type ID params_aux COMMA params .)


state 242

    (39) params_aux -> LBRACKET RBRACKET LBRACKET . RBRACKET add_matrix_var_params

    RBRACKET        shift and go to state 259


state 243

    (38) params_aux -> LBRACKET RBRACKET add_array_var_params .

    COMMA           reduce using rule 38 (params_aux -> LBRACKET RBRACKET add_array_var_params .)
    RPAREN          reduce using rule 38 (params_aux -> LBRACKET RBRACKET add_array_var_params .)


state 244

    (63) call -> ID POINT ID LPAREN call_aux RPAREN .

    SEMICOLON       reduce using rule 63 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    TIMES           reduce using rule 63 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    DIVIDE          reduce using rule 63 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    PLUS            reduce using rule 63 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    MINUS           reduce using rule 63 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    RELOP           reduce using rule 63 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    AND             reduce using rule 63 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    OR              reduce using rule 63 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    RBRACKET        reduce using rule 63 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    COMMA           reduce using rule 63 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    RPAREN          reduce using rule 63 (call -> ID POINT ID LPAREN call_aux RPAREN .)


state 245

    (59) var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .

    EQUAL           reduce using rule 59 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    TIMES           reduce using rule 59 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    DIVIDE          reduce using rule 59 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 59 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    MINUS           reduce using rule 59 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    RELOP           reduce using rule 59 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    AND             reduce using rule 59 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    OR              reduce using rule 59 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    RBRACKET        reduce using rule 59 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    COMMA           reduce using rule 59 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    RPAREN          reduce using rule 59 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 59 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)


state 246

    (81) exp -> n_exp OR push_op exp pop_op .

    RBRACKET        reduce using rule 81 (exp -> n_exp OR push_op exp pop_op .)
    COMMA           reduce using rule 81 (exp -> n_exp OR push_op exp pop_op .)
    RPAREN          reduce using rule 81 (exp -> n_exp OR push_op exp pop_op .)
    SEMICOLON       reduce using rule 81 (exp -> n_exp OR push_op exp pop_op .)


state 247

    (83) n_exp -> l_exp AND push_op n_exp pop_op .

    OR              reduce using rule 83 (n_exp -> l_exp AND push_op n_exp pop_op .)
    RBRACKET        reduce using rule 83 (n_exp -> l_exp AND push_op n_exp pop_op .)
    COMMA           reduce using rule 83 (n_exp -> l_exp AND push_op n_exp pop_op .)
    RPAREN          reduce using rule 83 (n_exp -> l_exp AND push_op n_exp pop_op .)
    SEMICOLON       reduce using rule 83 (n_exp -> l_exp AND push_op n_exp pop_op .)


state 248

    (85) l_exp -> a_exp RELOP push_op a_exp pop_op .

    AND             reduce using rule 85 (l_exp -> a_exp RELOP push_op a_exp pop_op .)
    OR              reduce using rule 85 (l_exp -> a_exp RELOP push_op a_exp pop_op .)
    RBRACKET        reduce using rule 85 (l_exp -> a_exp RELOP push_op a_exp pop_op .)
    COMMA           reduce using rule 85 (l_exp -> a_exp RELOP push_op a_exp pop_op .)
    RPAREN          reduce using rule 85 (l_exp -> a_exp RELOP push_op a_exp pop_op .)
    SEMICOLON       reduce using rule 85 (l_exp -> a_exp RELOP push_op a_exp pop_op .)


state 249

    (87) a_exp -> term PLUS push_op a_exp pop_op .

    RELOP           reduce using rule 87 (a_exp -> term PLUS push_op a_exp pop_op .)
    AND             reduce using rule 87 (a_exp -> term PLUS push_op a_exp pop_op .)
    OR              reduce using rule 87 (a_exp -> term PLUS push_op a_exp pop_op .)
    RBRACKET        reduce using rule 87 (a_exp -> term PLUS push_op a_exp pop_op .)
    COMMA           reduce using rule 87 (a_exp -> term PLUS push_op a_exp pop_op .)
    RPAREN          reduce using rule 87 (a_exp -> term PLUS push_op a_exp pop_op .)
    SEMICOLON       reduce using rule 87 (a_exp -> term PLUS push_op a_exp pop_op .)


state 250

    (88) a_exp -> term MINUS push_op a_exp pop_op .

    RELOP           reduce using rule 88 (a_exp -> term MINUS push_op a_exp pop_op .)
    AND             reduce using rule 88 (a_exp -> term MINUS push_op a_exp pop_op .)
    OR              reduce using rule 88 (a_exp -> term MINUS push_op a_exp pop_op .)
    RBRACKET        reduce using rule 88 (a_exp -> term MINUS push_op a_exp pop_op .)
    COMMA           reduce using rule 88 (a_exp -> term MINUS push_op a_exp pop_op .)
    RPAREN          reduce using rule 88 (a_exp -> term MINUS push_op a_exp pop_op .)
    SEMICOLON       reduce using rule 88 (a_exp -> term MINUS push_op a_exp pop_op .)


state 251

    (90) term -> factor TIMES push_op term pop_op .

    PLUS            reduce using rule 90 (term -> factor TIMES push_op term pop_op .)
    MINUS           reduce using rule 90 (term -> factor TIMES push_op term pop_op .)
    RELOP           reduce using rule 90 (term -> factor TIMES push_op term pop_op .)
    AND             reduce using rule 90 (term -> factor TIMES push_op term pop_op .)
    OR              reduce using rule 90 (term -> factor TIMES push_op term pop_op .)
    RBRACKET        reduce using rule 90 (term -> factor TIMES push_op term pop_op .)
    COMMA           reduce using rule 90 (term -> factor TIMES push_op term pop_op .)
    RPAREN          reduce using rule 90 (term -> factor TIMES push_op term pop_op .)
    SEMICOLON       reduce using rule 90 (term -> factor TIMES push_op term pop_op .)


state 252

    (91) term -> factor DIVIDE push_op term pop_op .

    PLUS            reduce using rule 91 (term -> factor DIVIDE push_op term pop_op .)
    MINUS           reduce using rule 91 (term -> factor DIVIDE push_op term pop_op .)
    RELOP           reduce using rule 91 (term -> factor DIVIDE push_op term pop_op .)
    AND             reduce using rule 91 (term -> factor DIVIDE push_op term pop_op .)
    OR              reduce using rule 91 (term -> factor DIVIDE push_op term pop_op .)
    RBRACKET        reduce using rule 91 (term -> factor DIVIDE push_op term pop_op .)
    COMMA           reduce using rule 91 (term -> factor DIVIDE push_op term pop_op .)
    RPAREN          reduce using rule 91 (term -> factor DIVIDE push_op term pop_op .)
    SEMICOLON       reduce using rule 91 (term -> factor DIVIDE push_op term pop_op .)


state 253

    (92) factor -> LPAREN push_paren exp RPAREN pop_paren .

    TIMES           reduce using rule 92 (factor -> LPAREN push_paren exp RPAREN pop_paren .)
    DIVIDE          reduce using rule 92 (factor -> LPAREN push_paren exp RPAREN pop_paren .)
    PLUS            reduce using rule 92 (factor -> LPAREN push_paren exp RPAREN pop_paren .)
    MINUS           reduce using rule 92 (factor -> LPAREN push_paren exp RPAREN pop_paren .)
    RELOP           reduce using rule 92 (factor -> LPAREN push_paren exp RPAREN pop_paren .)
    AND             reduce using rule 92 (factor -> LPAREN push_paren exp RPAREN pop_paren .)
    OR              reduce using rule 92 (factor -> LPAREN push_paren exp RPAREN pop_paren .)
    RBRACKET        reduce using rule 92 (factor -> LPAREN push_paren exp RPAREN pop_paren .)
    COMMA           reduce using rule 92 (factor -> LPAREN push_paren exp RPAREN pop_paren .)
    RPAREN          reduce using rule 92 (factor -> LPAREN push_paren exp RPAREN pop_paren .)
    SEMICOLON       reduce using rule 92 (factor -> LPAREN push_paren exp RPAREN pop_paren .)


state 254

    (67) condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux . RBRACE condition_aux_3
    (69) condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux . RBRACE ELIF condition_aux

    RBRACE          shift and go to state 260


state 255

    (78) while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux . RBRACE

    RBRACE          shift and go to state 261


state 256

    (79) for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp . RPAREN DO LBRACE statutes_aux RBRACE

    RPAREN          shift and go to state 262


state 257

    (43) body -> LBRACE dec_vars statutes_aux RETURN ID . SEMICOLON RBRACE

    SEMICOLON       shift and go to state 263


state 258

    (42) body -> LBRACE statutes_aux RETURN ID SEMICOLON . RBRACE

    RBRACE          shift and go to state 264


state 259

    (39) params_aux -> LBRACKET RBRACKET LBRACKET RBRACKET . add_matrix_var_params
    (110) add_matrix_var_params -> .

    COMMA           reduce using rule 110 (add_matrix_var_params -> .)
    RPAREN          reduce using rule 110 (add_matrix_var_params -> .)

    add_matrix_var_params          shift and go to state 265

state 260

    (67) condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE . condition_aux_3
    (69) condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE . ELIF condition_aux
    (70) condition_aux_3 -> . ELSE LBRACE statutes_aux RBRACE
    (71) condition_aux_3 -> . empty
    (105) empty -> .

    ELIF            shift and go to state 267
    ELSE            shift and go to state 268
    CALL            reduce using rule 105 (empty -> .)
    ID              reduce using rule 105 (empty -> .)
    READ            reduce using rule 105 (empty -> .)
    WRITE           reduce using rule 105 (empty -> .)
    IF              reduce using rule 105 (empty -> .)
    WHILE           reduce using rule 105 (empty -> .)
    FROM            reduce using rule 105 (empty -> .)
    RBRACE          reduce using rule 105 (empty -> .)
    RETURN          reduce using rule 105 (empty -> .)

    condition_aux_3                shift and go to state 266
    empty                          shift and go to state 269

state 261

    (78) while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .

    CALL            reduce using rule 78 (while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    ID              reduce using rule 78 (while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    READ            reduce using rule 78 (while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    WRITE           reduce using rule 78 (while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    IF              reduce using rule 78 (while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    WHILE           reduce using rule 78 (while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    FROM            reduce using rule 78 (while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    RBRACE          reduce using rule 78 (while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    RETURN          reduce using rule 78 (while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)


state 262

    (79) for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN . DO LBRACE statutes_aux RBRACE

    DO              shift and go to state 270


state 263

    (43) body -> LBRACE dec_vars statutes_aux RETURN ID SEMICOLON . RBRACE

    RBRACE          shift and go to state 271


state 264

    (42) body -> LBRACE statutes_aux RETURN ID SEMICOLON RBRACE .

    FUNCT           reduce using rule 42 (body -> LBRACE statutes_aux RETURN ID SEMICOLON RBRACE .)
    RBRACE          reduce using rule 42 (body -> LBRACE statutes_aux RETURN ID SEMICOLON RBRACE .)
    INIT            reduce using rule 42 (body -> LBRACE statutes_aux RETURN ID SEMICOLON RBRACE .)


state 265

    (39) params_aux -> LBRACKET RBRACKET LBRACKET RBRACKET add_matrix_var_params .

    COMMA           reduce using rule 39 (params_aux -> LBRACKET RBRACKET LBRACKET RBRACKET add_matrix_var_params .)
    RPAREN          reduce using rule 39 (params_aux -> LBRACKET RBRACKET LBRACKET RBRACKET add_matrix_var_params .)


state 266

    (67) condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .

    CALL            reduce using rule 67 (condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .)
    ID              reduce using rule 67 (condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .)
    READ            reduce using rule 67 (condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .)
    WRITE           reduce using rule 67 (condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .)
    IF              reduce using rule 67 (condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .)
    WHILE           reduce using rule 67 (condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .)
    FROM            reduce using rule 67 (condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .)
    RBRACE          reduce using rule 67 (condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .)
    RETURN          reduce using rule 67 (condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .)


state 267

    (69) condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF . condition_aux
    (67) condition_aux -> . LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3
    (68) condition_aux -> . condition_aux_2
    (69) condition_aux_2 -> . LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux

    LPAREN          shift and go to state 102

    condition_aux                  shift and go to state 272
    condition_aux_2                shift and go to state 103

state 268

    (70) condition_aux_3 -> ELSE . LBRACE statutes_aux RBRACE

    LBRACE          shift and go to state 273


state 269

    (71) condition_aux_3 -> empty .

    CALL            reduce using rule 71 (condition_aux_3 -> empty .)
    ID              reduce using rule 71 (condition_aux_3 -> empty .)
    READ            reduce using rule 71 (condition_aux_3 -> empty .)
    WRITE           reduce using rule 71 (condition_aux_3 -> empty .)
    IF              reduce using rule 71 (condition_aux_3 -> empty .)
    WHILE           reduce using rule 71 (condition_aux_3 -> empty .)
    FROM            reduce using rule 71 (condition_aux_3 -> empty .)
    RBRACE          reduce using rule 71 (condition_aux_3 -> empty .)
    RETURN          reduce using rule 71 (condition_aux_3 -> empty .)


state 270

    (79) for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO . LBRACE statutes_aux RBRACE

    LBRACE          shift and go to state 274


state 271

    (43) body -> LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE .

    FUNCT           reduce using rule 43 (body -> LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE .)
    RBRACE          reduce using rule 43 (body -> LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE .)
    INIT            reduce using rule 43 (body -> LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE .)


state 272

    (69) condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .

    CALL            reduce using rule 69 (condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .)
    ID              reduce using rule 69 (condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .)
    READ            reduce using rule 69 (condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .)
    WRITE           reduce using rule 69 (condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .)
    IF              reduce using rule 69 (condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .)
    WHILE           reduce using rule 69 (condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .)
    FROM            reduce using rule 69 (condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .)
    RBRACE          reduce using rule 69 (condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .)
    RETURN          reduce using rule 69 (condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .)


state 273

    (70) condition_aux_3 -> ELSE LBRACE . statutes_aux RBRACE
    (51) statutes_aux -> . statutes
    (52) statutes_aux -> . statutes statutes_aux
    (44) statutes -> . assignation SEMICOLON
    (45) statutes -> . CALL call SEMICOLON
    (46) statutes -> . read
    (47) statutes -> . write
    (48) statutes -> . condition
    (49) statutes -> . while
    (50) statutes -> . for
    (53) assignation -> . ID push_var EQUAL push_op exp
    (54) assignation -> . ID var_aux EQUAL exp
    (72) read -> . READ LPAREN ID RPAREN SEMICOLON
    (73) write -> . WRITE LPAREN write_aux RPAREN SEMICOLON
    (66) condition -> . IF condition_aux
    (78) while -> . WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (79) for -> . FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    CALL            shift and go to state 69
    ID              shift and go to state 75
    READ            shift and go to state 76
    WRITE           shift and go to state 77
    IF              shift and go to state 78
    WHILE           shift and go to state 79
    FROM            shift and go to state 80

    statutes_aux                   shift and go to state 275
    statutes                       shift and go to state 67
    assignation                    shift and go to state 68
    read                           shift and go to state 70
    write                          shift and go to state 71
    condition                      shift and go to state 72
    while                          shift and go to state 73
    for                            shift and go to state 74

state 274

    (79) for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE . statutes_aux RBRACE
    (51) statutes_aux -> . statutes
    (52) statutes_aux -> . statutes statutes_aux
    (44) statutes -> . assignation SEMICOLON
    (45) statutes -> . CALL call SEMICOLON
    (46) statutes -> . read
    (47) statutes -> . write
    (48) statutes -> . condition
    (49) statutes -> . while
    (50) statutes -> . for
    (53) assignation -> . ID push_var EQUAL push_op exp
    (54) assignation -> . ID var_aux EQUAL exp
    (72) read -> . READ LPAREN ID RPAREN SEMICOLON
    (73) write -> . WRITE LPAREN write_aux RPAREN SEMICOLON
    (66) condition -> . IF condition_aux
    (78) while -> . WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (79) for -> . FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    CALL            shift and go to state 69
    ID              shift and go to state 75
    READ            shift and go to state 76
    WRITE           shift and go to state 77
    IF              shift and go to state 78
    WHILE           shift and go to state 79
    FROM            shift and go to state 80

    assignation                    shift and go to state 68
    statutes_aux                   shift and go to state 276
    statutes                       shift and go to state 67
    read                           shift and go to state 70
    write                          shift and go to state 71
    condition                      shift and go to state 72
    while                          shift and go to state 73
    for                            shift and go to state 74

state 275

    (70) condition_aux_3 -> ELSE LBRACE statutes_aux . RBRACE

    RBRACE          shift and go to state 277


state 276

    (79) for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux . RBRACE

    RBRACE          shift and go to state 278


state 277

    (70) condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .

    CALL            reduce using rule 70 (condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .)
    ID              reduce using rule 70 (condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .)
    READ            reduce using rule 70 (condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .)
    WRITE           reduce using rule 70 (condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .)
    IF              reduce using rule 70 (condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .)
    WHILE           reduce using rule 70 (condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .)
    FROM            reduce using rule 70 (condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .)
    RBRACE          reduce using rule 70 (condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .)
    RETURN          reduce using rule 70 (condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .)


state 278

    (79) for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .

    CALL            reduce using rule 79 (for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    ID              reduce using rule 79 (for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    READ            reduce using rule 79 (for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    WRITE           reduce using rule 79 (for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    IF              reduce using rule 79 (for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    WHILE           reduce using rule 79 (for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    FROM            reduce using rule 79 (for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    RBRACE          reduce using rule 79 (for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    RETURN          reduce using rule 79 (for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)

