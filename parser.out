Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID TWOPOINTS program_classes MAIN add_class LBRACE program_body init RBRACE END
Rule 2     program_classes -> classes
Rule 3     program_classes -> empty
Rule 4     program_body -> program_body_vars program_body_funct
Rule 5     program_body_vars -> dec_vars
Rule 6     program_body_vars -> empty
Rule 7     program_body_funct -> functions
Rule 8     program_body_funct -> empty
Rule 9     dec_vars -> VAR dec_vars_aux
Rule 10    dec_vars_aux -> simple_type vars_simple_type SEMICOLON
Rule 11    dec_vars_aux -> simple_type vars_simple_type SEMICOLON dec_vars_aux
Rule 12    dec_vars_aux -> complex_type vars_complex_type SEMICOLON
Rule 13    dec_vars_aux -> complex_type vars_complex_type SEMICOLON dec_vars_aux
Rule 14    vars_complex_type -> ID
Rule 15    vars_complex_type -> ID COMMA vars_complex_type
Rule 16    vars_simple_type -> ID add_variable
Rule 17    vars_simple_type -> ID add_variable COMMA vars_simple_type
Rule 18    vars_simple_type -> ID vars_simple_type_aux
Rule 19    vars_simple_type -> ID vars_simple_type_aux COMMA vars_simple_type
Rule 20    vars_simple_type_aux -> LBRACKET CTEI RBRACKET add_array_variable
Rule 21    vars_simple_type_aux -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET add_matrix_variable
Rule 22    simple_type -> INT
Rule 23    simple_type -> FLOAT
Rule 24    simple_type -> CHAR
Rule 25    complex_type -> ID
Rule 26    classes -> CLASS ID classes_aux
Rule 27    classes -> CLASS ID classes_aux classes
Rule 28    classes_aux -> add_class LBRACE dec_vars functions RBRACE
Rule 29    classes_aux -> add_class LBRACE functions RBRACE
Rule 30    classes_aux -> INHERITS ID add_inherit_class LBRACE dec_vars functions RBRACE
Rule 31    classes_aux -> INHERITS ID add_inherit_class LBRACE functions RBRACE
Rule 32    functions -> FUNCT functions_aux
Rule 33    functions -> FUNCT functions_aux functions
Rule 34    functions_aux -> VOID ID add_function LPAREN params RPAREN body
Rule 35    functions_aux -> VOID ID add_function LPAREN RPAREN body
Rule 36    functions_aux -> simple_type ID add_function LPAREN RPAREN body
Rule 37    functions_aux -> simple_type ID add_function LPAREN params RPAREN body
Rule 38    params -> simple_type ID add_variable
Rule 39    params -> simple_type ID add_variable COMMA params
Rule 40    params -> simple_type ID params_aux
Rule 41    params -> simple_type ID params_aux COMMA params
Rule 42    params_aux -> LBRACKET RBRACKET add_array_var_params
Rule 43    params_aux -> LBRACKET RBRACKET LBRACKET RBRACKET add_matrix_var_params
Rule 44    body -> LBRACE dec_vars statutes_aux RBRACE
Rule 45    body -> LBRACE statutes_aux RBRACE
Rule 46    body -> LBRACE statutes_aux RETURN ID SEMICOLON RBRACE
Rule 47    body -> LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE
Rule 48    statutes -> assignation SEMICOLON
Rule 49    statutes -> CALL call SEMICOLON
Rule 50    statutes -> read
Rule 51    statutes -> write
Rule 52    statutes -> condition
Rule 53    statutes -> while
Rule 54    statutes -> for
Rule 55    statutes_aux -> statutes
Rule 56    statutes_aux -> statutes statutes_aux
<<<<<<< HEAD
Rule 57    assignation -> ID EQUAL exp
Rule 58    assignation -> ID var_aux EQUAL exp
Rule 59    var_aux -> POINT ID
Rule 60    var_aux -> POINT ID var_aux_2
Rule 61    var_aux -> var_aux_2
Rule 62    var_aux_2 -> LBRACKET exp RBRACKET
Rule 63    var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET
Rule 64    call -> ID LPAREN RPAREN
Rule 65    call -> ID POINT ID LPAREN RPAREN
Rule 66    call -> ID LPAREN call_aux RPAREN
Rule 67    call -> ID POINT ID LPAREN call_aux RPAREN
Rule 68    call_aux -> exp
Rule 69    call_aux -> exp COMMA call_aux
Rule 70    condition -> IF condition_aux
Rule 71    condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3
Rule 72    condition_aux -> condition_aux_2
Rule 73    condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux
Rule 74    condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE
Rule 75    condition_aux_3 -> empty
Rule 76    read -> READ LPAREN ID RPAREN SEMICOLON
Rule 77    write -> WRITE LPAREN write_aux RPAREN SEMICOLON
Rule 78    write_aux -> exp
Rule 79    write_aux -> exp COMMA write_aux
Rule 80    write_aux -> CTESTRING
Rule 81    write_aux -> CTESTRING COMMA write_aux
Rule 82    while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
Rule 83    for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
Rule 84    exp -> n_exp pop_op
Rule 85    exp -> n_exp pop_op OR push_op exp
Rule 86    n_exp -> l_exp pop_op
Rule 87    n_exp -> l_exp pop_op AND push_op n_exp
Rule 88    l_exp -> a_exp pop_op
Rule 89    l_exp -> a_exp pop_op RELOP push_op a_exp
Rule 90    a_exp -> term pop_op
Rule 91    a_exp -> term pop_op PLUS push_op a_exp
Rule 92    a_exp -> term pop_op MINUS push_op a_exp
Rule 93    term -> factor pop_op
Rule 94    term -> factor pop_op TIMES push_op term
Rule 95    term -> factor pop_op DIVIDE push_op term
Rule 96    factor -> LPAREN push_paren exp RPAREN pop_paren
Rule 97    factor -> call
Rule 98    factor -> factor_aux
Rule 99    factor_aux -> cte
Rule 100   factor_aux -> PLUS cte
Rule 101   factor_aux -> MINUS cte
Rule 102   cte -> ID push_var
Rule 103   cte -> ID var_aux push_var
=======
Rule 57    assignation -> var EQUAL exp
Rule 58    var -> ID push_var
Rule 59    var -> ID var_aux
Rule 60    var_aux -> POINT ID
Rule 61    var_aux -> POINT ID var_aux_2
Rule 62    var_aux -> var_aux_2
Rule 63    var_aux_2 -> LBRACKET exp RBRACKET
Rule 64    var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET
Rule 65    call -> ID LPAREN RPAREN
Rule 66    call -> ID POINT ID LPAREN RPAREN
Rule 67    call -> ID LPAREN call_aux RPAREN
Rule 68    call -> ID POINT ID LPAREN call_aux RPAREN
Rule 69    call_aux -> exp
Rule 70    call_aux -> exp COMMA call_aux
Rule 71    condition -> IF condition_aux
Rule 72    condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3
Rule 73    condition_aux -> condition_aux_2
Rule 74    condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux
Rule 75    condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE
Rule 76    condition_aux_3 -> empty
Rule 77    read -> READ LPAREN var RPAREN SEMICOLON
Rule 78    write -> WRITE LPAREN write_aux RPAREN SEMICOLON
Rule 79    write_aux -> exp
Rule 80    write_aux -> exp COMMA write_aux
Rule 81    write_aux -> CTESTRING
Rule 82    write_aux -> CTESTRING COMMA write_aux
Rule 83    while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
Rule 84    for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
Rule 85    exp -> n_exp
Rule 86    exp -> n_exp OR push_op exp pop_op
Rule 87    n_exp -> l_exp
Rule 88    n_exp -> l_exp AND push_op n_exp pop_op
Rule 89    l_exp -> a_exp
Rule 90    l_exp -> a_exp RELOP push_op a_exp pop_op
Rule 91    a_exp -> term
Rule 92    a_exp -> term PLUS push_op a_exp pop_op
Rule 93    a_exp -> term MINUS push_op a_exp pop_op
Rule 94    term -> factor
Rule 95    term -> factor TIMES push_op term pop_op
Rule 96    term -> factor DIVIDE push_op term pop_op
Rule 97    factor -> LPAREN push_paren exp RPAREN pop_paren
Rule 98    factor -> call
Rule 99    factor -> factor_aux
Rule 100   factor_aux -> cte
Rule 101   factor_aux -> PLUS cte
Rule 102   factor_aux -> MINUS cte
Rule 103   cte -> var
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330
Rule 104   cte -> CTEI push_var
Rule 105   cte -> CTEF push_var
Rule 106   cte -> CTECHAR push_var
Rule 107   init -> INIT add_init LBRACE statutes_aux RBRACE
Rule 108   init -> INIT add_init LBRACE dec_vars statutes_aux RBRACE
Rule 109   empty -> <empty>
Rule 110   add_variable -> <empty>
Rule 111   add_array_variable -> <empty>
Rule 112   add_matrix_variable -> <empty>
Rule 113   add_array_var_params -> <empty>
Rule 114   add_matrix_var_params -> <empty>
Rule 115   add_function -> <empty>
Rule 116   add_init -> <empty>
Rule 117   add_class -> <empty>
Rule 118   add_inherit_class -> <empty>
Rule 119   push_var -> <empty>
Rule 120   push_op -> <empty>
Rule 121   pop_op -> <empty>
Rule 122   push_paren -> <empty>
Rule 123   pop_paren -> <empty>

Terminals, with rules where they appear

AND                  : 87
CALL                 : 49
CHAR                 : 24
CLASS                : 26 27
<<<<<<< HEAD
COMMA                : 15 17 19 39 41 69 79 81
CTECHAR              : 106
CTEF                 : 105
CTEI                 : 20 21 21 104
CTESTRING            : 80 81
DIVIDE               : 95
DO                   : 82 83
ELIF                 : 73
ELSE                 : 74
=======
COMMA                : 15 17 19 39 41 70 80 82
CTECHAR              : 106
CTEF                 : 105
CTEI                 : 20 21 21 104
CTESTRING            : 81 82
DIVIDE               : 96
DO                   : 83 84
ELIF                 : 74
ELSE                 : 75
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330
END                  : 1
EQUAL                : 57 58
FLOAT                : 23
FROM                 : 83
FUNCT                : 32 33
<<<<<<< HEAD
ID                   : 1 14 15 16 17 18 19 25 26 27 30 31 34 35 36 37 38 39 40 41 46 47 57 58 59 60 64 65 65 66 67 67 76 102 103
IF                   : 70
INHERITS             : 30 31
INIT                 : 107 108
INT                  : 22
LBRACE               : 1 28 29 30 31 44 45 46 47 71 73 74 82 83 107 108
LBRACKET             : 20 21 21 42 43 43 62 63 63
LPAREN               : 34 35 36 37 64 65 66 67 71 73 76 77 82 83 83 96
MAIN                 : 1
MINUS                : 92 101
OR                   : 85
PLUS                 : 91 100
POINT                : 59 60 65 67
PROGRAM              : 1
RBRACE               : 1 28 29 30 31 44 45 46 47 71 73 74 82 83 107 108
RBRACKET             : 20 21 21 42 43 43 62 63 63
READ                 : 76
RELOP                : 89
=======
ID                   : 1 14 15 16 17 18 19 25 26 27 30 31 34 35 36 37 38 39 40 41 46 47 58 59 60 61 65 66 66 67 68 68
IF                   : 71
INHERITS             : 30 31
INIT                 : 107 108
INT                  : 22
LBRACE               : 1 28 29 30 31 44 45 46 47 72 74 75 83 84 107 108
LBRACKET             : 20 21 21 42 43 43 63 64 64
LPAREN               : 34 35 36 37 65 66 67 68 72 74 77 78 83 84 84 97
MAIN                 : 1
MINUS                : 93 102
OR                   : 86
PLUS                 : 92 101
POINT                : 60 61 66 68
PROGRAM              : 1
RBRACE               : 1 28 29 30 31 44 45 46 47 72 74 75 83 84 107 108
RBRACKET             : 20 21 21 42 43 43 63 64 64
READ                 : 77
RELOP                : 90
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330
RETURN               : 46 47
RPAREN               : 34 35 36 37 64 65 66 67 71 73 76 77 82 83 83 96
SEMICOLON            : 10 11 12 13 46 47 48 49 76 77
THEN                 : 71 73
TIMES                : 94
TWOPOINTS            : 1
UNTIL                : 83
VAR                  : 9
VOID                 : 34 35
WHILE                : 82
WRITE                : 77
error                : 

Nonterminals, with rules where they appear

a_exp                : 88 89 89 91 92
add_array_var_params : 42
add_array_variable   : 20
add_class            : 1 28 29
add_function         : 34 35 36 37
add_inherit_class    : 30 31
add_init             : 107 108
add_matrix_var_params : 43
add_matrix_variable  : 21
add_variable         : 16 17 38 39
assignation          : 48 83
body                 : 34 35 36 37
<<<<<<< HEAD
call                 : 49 97
call_aux             : 66 67 69
=======
call                 : 49 98
call_aux             : 67 68 70
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330
classes              : 2 27
classes_aux          : 26 27
complex_type         : 12 13
condition            : 52
<<<<<<< HEAD
condition_aux        : 70 73
condition_aux_2      : 72
condition_aux_3      : 71
cte                  : 99 100 101
dec_vars             : 5 28 30 44 47 108
dec_vars_aux         : 9 11 13
empty                : 3 6 8 75
exp                  : 57 58 62 63 63 68 69 71 73 78 79 82 83 85 96
factor               : 93 94 95
factor_aux           : 98
=======
condition_aux        : 71 74
condition_aux_2      : 73
condition_aux_3      : 72
cte                  : 100 101 102
dec_vars             : 5 28 30 44 47 108
dec_vars_aux         : 9 11 13
empty                : 3 6 8 76
exp                  : 57 63 64 64 69 70 72 74 79 80 83 84 86 97
factor               : 94 95 96
factor_aux           : 99
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330
for                  : 54
functions            : 7 28 29 30 31 33
functions_aux        : 32 33
init                 : 1
l_exp                : 86 87
n_exp                : 84 85 87
params               : 34 37 39 41
params_aux           : 40 41
<<<<<<< HEAD
pop_op               : 84 85 86 87 88 89 90 91 92 93 94 95
pop_paren            : 96
=======
pop_op               : 86 88 90 92 93 95 96
pop_paren            : 97
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330
program              : 0
program_body         : 1
program_body_funct   : 4
program_body_vars    : 4
program_classes      : 1
<<<<<<< HEAD
push_op              : 85 87 89 91 92 94 95
push_paren           : 96
push_var             : 102 103 104 105 106
read                 : 50
simple_type          : 10 11 36 37 38 39 40 41
statutes             : 55 56
statutes_aux         : 44 45 46 47 56 71 73 74 82 83 107 108
term                 : 90 91 92 94 95
var_aux              : 58 103
var_aux_2            : 60 61
=======
push_op              : 86 88 90 92 93 95 96
push_paren           : 97
push_var             : 58 104 105 106
read                 : 50
simple_type          : 10 11 36 37 38 39 40 41
statutes             : 55 56
statutes_aux         : 44 45 46 47 56 72 74 75 83 84 107 108
term                 : 91 92 93 95 96
var                  : 57 77 103
var_aux              : 59
var_aux_2            : 61 62
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330
vars_complex_type    : 12 13 15
vars_simple_type     : 10 11 17 19
vars_simple_type_aux : 18 19
while                : 53
write                : 51
write_aux            : 77 79 81

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID TWOPOINTS program_classes MAIN add_class LBRACE program_body init RBRACE END

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID TWOPOINTS program_classes MAIN add_class LBRACE program_body init RBRACE END

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . TWOPOINTS program_classes MAIN add_class LBRACE program_body init RBRACE END

    TWOPOINTS       shift and go to state 4


state 4

    (1) program -> PROGRAM ID TWOPOINTS . program_classes MAIN add_class LBRACE program_body init RBRACE END
    (2) program_classes -> . classes
    (3) program_classes -> . empty
    (26) classes -> . CLASS ID classes_aux
    (27) classes -> . CLASS ID classes_aux classes
    (109) empty -> .

    CLASS           shift and go to state 8
    MAIN            reduce using rule 109 (empty -> .)

    program_classes                shift and go to state 5
    classes                        shift and go to state 6
    empty                          shift and go to state 7

state 5

    (1) program -> PROGRAM ID TWOPOINTS program_classes . MAIN add_class LBRACE program_body init RBRACE END

    MAIN            shift and go to state 9


state 6

    (2) program_classes -> classes .

    MAIN            reduce using rule 2 (program_classes -> classes .)


state 7

    (3) program_classes -> empty .

    MAIN            reduce using rule 3 (program_classes -> empty .)


state 8

    (26) classes -> CLASS . ID classes_aux
    (27) classes -> CLASS . ID classes_aux classes

    ID              shift and go to state 10


state 9

    (1) program -> PROGRAM ID TWOPOINTS program_classes MAIN . add_class LBRACE program_body init RBRACE END
    (117) add_class -> .

    LBRACE          reduce using rule 117 (add_class -> .)

    add_class                      shift and go to state 11

state 10

    (26) classes -> CLASS ID . classes_aux
    (27) classes -> CLASS ID . classes_aux classes
    (28) classes_aux -> . add_class LBRACE dec_vars functions RBRACE
    (29) classes_aux -> . add_class LBRACE functions RBRACE
    (30) classes_aux -> . INHERITS ID add_inherit_class LBRACE dec_vars functions RBRACE
    (31) classes_aux -> . INHERITS ID add_inherit_class LBRACE functions RBRACE
    (117) add_class -> .

    INHERITS        shift and go to state 14
    LBRACE          reduce using rule 117 (add_class -> .)

    classes_aux                    shift and go to state 12
    add_class                      shift and go to state 13

state 11

    (1) program -> PROGRAM ID TWOPOINTS program_classes MAIN add_class . LBRACE program_body init RBRACE END

    LBRACE          shift and go to state 15


state 12

    (26) classes -> CLASS ID classes_aux .
    (27) classes -> CLASS ID classes_aux . classes
    (26) classes -> . CLASS ID classes_aux
    (27) classes -> . CLASS ID classes_aux classes

    MAIN            reduce using rule 26 (classes -> CLASS ID classes_aux .)
    CLASS           shift and go to state 8

    classes                        shift and go to state 16

state 13

    (28) classes_aux -> add_class . LBRACE dec_vars functions RBRACE
    (29) classes_aux -> add_class . LBRACE functions RBRACE

    LBRACE          shift and go to state 17


state 14

    (30) classes_aux -> INHERITS . ID add_inherit_class LBRACE dec_vars functions RBRACE
    (31) classes_aux -> INHERITS . ID add_inherit_class LBRACE functions RBRACE

    ID              shift and go to state 18


state 15

    (1) program -> PROGRAM ID TWOPOINTS program_classes MAIN add_class LBRACE . program_body init RBRACE END
    (4) program_body -> . program_body_vars program_body_funct
    (5) program_body_vars -> . dec_vars
    (6) program_body_vars -> . empty
    (9) dec_vars -> . VAR dec_vars_aux
    (109) empty -> .

    VAR             shift and go to state 23
    FUNCT           reduce using rule 109 (empty -> .)
    INIT            reduce using rule 109 (empty -> .)

    program_body                   shift and go to state 19
    program_body_vars              shift and go to state 20
    dec_vars                       shift and go to state 21
    empty                          shift and go to state 22

state 16

    (27) classes -> CLASS ID classes_aux classes .

    MAIN            reduce using rule 27 (classes -> CLASS ID classes_aux classes .)


state 17

    (28) classes_aux -> add_class LBRACE . dec_vars functions RBRACE
    (29) classes_aux -> add_class LBRACE . functions RBRACE
    (9) dec_vars -> . VAR dec_vars_aux
    (32) functions -> . FUNCT functions_aux
    (33) functions -> . FUNCT functions_aux functions

    VAR             shift and go to state 23
    FUNCT           shift and go to state 26

    dec_vars                       shift and go to state 24
    functions                      shift and go to state 25

state 18

    (30) classes_aux -> INHERITS ID . add_inherit_class LBRACE dec_vars functions RBRACE
    (31) classes_aux -> INHERITS ID . add_inherit_class LBRACE functions RBRACE
    (118) add_inherit_class -> .

    LBRACE          reduce using rule 118 (add_inherit_class -> .)

    add_inherit_class              shift and go to state 27

state 19

    (1) program -> PROGRAM ID TWOPOINTS program_classes MAIN add_class LBRACE program_body . init RBRACE END
    (107) init -> . INIT add_init LBRACE statutes_aux RBRACE
    (108) init -> . INIT add_init LBRACE dec_vars statutes_aux RBRACE

    INIT            shift and go to state 29

    init                           shift and go to state 28

state 20

    (4) program_body -> program_body_vars . program_body_funct
    (7) program_body_funct -> . functions
    (8) program_body_funct -> . empty
    (32) functions -> . FUNCT functions_aux
    (33) functions -> . FUNCT functions_aux functions
    (109) empty -> .

    FUNCT           shift and go to state 26
    INIT            reduce using rule 109 (empty -> .)

    program_body_funct             shift and go to state 30
    functions                      shift and go to state 31
    empty                          shift and go to state 32

state 21

    (5) program_body_vars -> dec_vars .

    FUNCT           reduce using rule 5 (program_body_vars -> dec_vars .)
    INIT            reduce using rule 5 (program_body_vars -> dec_vars .)


state 22

    (6) program_body_vars -> empty .

    FUNCT           reduce using rule 6 (program_body_vars -> empty .)
    INIT            reduce using rule 6 (program_body_vars -> empty .)


state 23

    (9) dec_vars -> VAR . dec_vars_aux
    (10) dec_vars_aux -> . simple_type vars_simple_type SEMICOLON
    (11) dec_vars_aux -> . simple_type vars_simple_type SEMICOLON dec_vars_aux
    (12) dec_vars_aux -> . complex_type vars_complex_type SEMICOLON
    (13) dec_vars_aux -> . complex_type vars_complex_type SEMICOLON dec_vars_aux
    (22) simple_type -> . INT
    (23) simple_type -> . FLOAT
    (24) simple_type -> . CHAR
    (25) complex_type -> . ID

    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    CHAR            shift and go to state 38
    ID              shift and go to state 39

    dec_vars_aux                   shift and go to state 33
    simple_type                    shift and go to state 34
    complex_type                   shift and go to state 35

state 24

    (28) classes_aux -> add_class LBRACE dec_vars . functions RBRACE
    (32) functions -> . FUNCT functions_aux
    (33) functions -> . FUNCT functions_aux functions

    FUNCT           shift and go to state 26

    functions                      shift and go to state 40

state 25

    (29) classes_aux -> add_class LBRACE functions . RBRACE

    RBRACE          shift and go to state 41


state 26

    (32) functions -> FUNCT . functions_aux
    (33) functions -> FUNCT . functions_aux functions
    (34) functions_aux -> . VOID ID add_function LPAREN params RPAREN body
    (35) functions_aux -> . VOID ID add_function LPAREN RPAREN body
    (36) functions_aux -> . simple_type ID add_function LPAREN RPAREN body
    (37) functions_aux -> . simple_type ID add_function LPAREN params RPAREN body
    (22) simple_type -> . INT
    (23) simple_type -> . FLOAT
    (24) simple_type -> . CHAR

    VOID            shift and go to state 43
    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    CHAR            shift and go to state 38

    functions_aux                  shift and go to state 42
    simple_type                    shift and go to state 44

state 27

    (30) classes_aux -> INHERITS ID add_inherit_class . LBRACE dec_vars functions RBRACE
    (31) classes_aux -> INHERITS ID add_inherit_class . LBRACE functions RBRACE

    LBRACE          shift and go to state 45


state 28

    (1) program -> PROGRAM ID TWOPOINTS program_classes MAIN add_class LBRACE program_body init . RBRACE END

    RBRACE          shift and go to state 46


state 29

    (107) init -> INIT . add_init LBRACE statutes_aux RBRACE
    (108) init -> INIT . add_init LBRACE dec_vars statutes_aux RBRACE
    (116) add_init -> .

    LBRACE          reduce using rule 116 (add_init -> .)

    add_init                       shift and go to state 47

state 30

    (4) program_body -> program_body_vars program_body_funct .

    INIT            reduce using rule 4 (program_body -> program_body_vars program_body_funct .)


state 31

    (7) program_body_funct -> functions .

    INIT            reduce using rule 7 (program_body_funct -> functions .)


state 32

    (8) program_body_funct -> empty .

    INIT            reduce using rule 8 (program_body_funct -> empty .)


state 33

    (9) dec_vars -> VAR dec_vars_aux .

    FUNCT           reduce using rule 9 (dec_vars -> VAR dec_vars_aux .)
    INIT            reduce using rule 9 (dec_vars -> VAR dec_vars_aux .)
    CALL            reduce using rule 9 (dec_vars -> VAR dec_vars_aux .)
    ID              reduce using rule 9 (dec_vars -> VAR dec_vars_aux .)
    READ            reduce using rule 9 (dec_vars -> VAR dec_vars_aux .)
    WRITE           reduce using rule 9 (dec_vars -> VAR dec_vars_aux .)
    IF              reduce using rule 9 (dec_vars -> VAR dec_vars_aux .)
    WHILE           reduce using rule 9 (dec_vars -> VAR dec_vars_aux .)
    FROM            reduce using rule 9 (dec_vars -> VAR dec_vars_aux .)


state 34

    (10) dec_vars_aux -> simple_type . vars_simple_type SEMICOLON
    (11) dec_vars_aux -> simple_type . vars_simple_type SEMICOLON dec_vars_aux
    (16) vars_simple_type -> . ID add_variable
    (17) vars_simple_type -> . ID add_variable COMMA vars_simple_type
    (18) vars_simple_type -> . ID vars_simple_type_aux
    (19) vars_simple_type -> . ID vars_simple_type_aux COMMA vars_simple_type

    ID              shift and go to state 49

    vars_simple_type               shift and go to state 48

state 35

    (12) dec_vars_aux -> complex_type . vars_complex_type SEMICOLON
    (13) dec_vars_aux -> complex_type . vars_complex_type SEMICOLON dec_vars_aux
    (14) vars_complex_type -> . ID
    (15) vars_complex_type -> . ID COMMA vars_complex_type

    ID              shift and go to state 51

    vars_complex_type              shift and go to state 50

state 36

    (22) simple_type -> INT .

    ID              reduce using rule 22 (simple_type -> INT .)


state 37

    (23) simple_type -> FLOAT .

    ID              reduce using rule 23 (simple_type -> FLOAT .)


state 38

    (24) simple_type -> CHAR .

    ID              reduce using rule 24 (simple_type -> CHAR .)


state 39

    (25) complex_type -> ID .

    ID              reduce using rule 25 (complex_type -> ID .)


state 40

    (28) classes_aux -> add_class LBRACE dec_vars functions . RBRACE

    RBRACE          shift and go to state 52


state 41

    (29) classes_aux -> add_class LBRACE functions RBRACE .

    CLASS           reduce using rule 29 (classes_aux -> add_class LBRACE functions RBRACE .)
    MAIN            reduce using rule 29 (classes_aux -> add_class LBRACE functions RBRACE .)


state 42

    (32) functions -> FUNCT functions_aux .
    (33) functions -> FUNCT functions_aux . functions
    (32) functions -> . FUNCT functions_aux
    (33) functions -> . FUNCT functions_aux functions

    RBRACE          reduce using rule 32 (functions -> FUNCT functions_aux .)
    INIT            reduce using rule 32 (functions -> FUNCT functions_aux .)
    FUNCT           shift and go to state 26

    functions                      shift and go to state 53

state 43

    (34) functions_aux -> VOID . ID add_function LPAREN params RPAREN body
    (35) functions_aux -> VOID . ID add_function LPAREN RPAREN body

    ID              shift and go to state 54


state 44

    (36) functions_aux -> simple_type . ID add_function LPAREN RPAREN body
    (37) functions_aux -> simple_type . ID add_function LPAREN params RPAREN body

    ID              shift and go to state 55


state 45

    (30) classes_aux -> INHERITS ID add_inherit_class LBRACE . dec_vars functions RBRACE
    (31) classes_aux -> INHERITS ID add_inherit_class LBRACE . functions RBRACE
    (9) dec_vars -> . VAR dec_vars_aux
    (32) functions -> . FUNCT functions_aux
    (33) functions -> . FUNCT functions_aux functions

    VAR             shift and go to state 23
    FUNCT           shift and go to state 26

    dec_vars                       shift and go to state 56
    functions                      shift and go to state 57

state 46

    (1) program -> PROGRAM ID TWOPOINTS program_classes MAIN add_class LBRACE program_body init RBRACE . END

    END             shift and go to state 58


state 47

    (107) init -> INIT add_init . LBRACE statutes_aux RBRACE
    (108) init -> INIT add_init . LBRACE dec_vars statutes_aux RBRACE

    LBRACE          shift and go to state 59


state 48

    (10) dec_vars_aux -> simple_type vars_simple_type . SEMICOLON
    (11) dec_vars_aux -> simple_type vars_simple_type . SEMICOLON dec_vars_aux

    SEMICOLON       shift and go to state 60


state 49

    (16) vars_simple_type -> ID . add_variable
    (17) vars_simple_type -> ID . add_variable COMMA vars_simple_type
    (18) vars_simple_type -> ID . vars_simple_type_aux
    (19) vars_simple_type -> ID . vars_simple_type_aux COMMA vars_simple_type
    (110) add_variable -> .
    (20) vars_simple_type_aux -> . LBRACKET CTEI RBRACKET add_array_variable
    (21) vars_simple_type_aux -> . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET add_matrix_variable

    COMMA           reduce using rule 110 (add_variable -> .)
    SEMICOLON       reduce using rule 110 (add_variable -> .)
    LBRACKET        shift and go to state 63

    add_variable                   shift and go to state 61
    vars_simple_type_aux           shift and go to state 62

state 50

    (12) dec_vars_aux -> complex_type vars_complex_type . SEMICOLON
    (13) dec_vars_aux -> complex_type vars_complex_type . SEMICOLON dec_vars_aux

    SEMICOLON       shift and go to state 64


state 51

    (14) vars_complex_type -> ID .
    (15) vars_complex_type -> ID . COMMA vars_complex_type

    SEMICOLON       reduce using rule 14 (vars_complex_type -> ID .)
    COMMA           shift and go to state 65


state 52

    (28) classes_aux -> add_class LBRACE dec_vars functions RBRACE .

    CLASS           reduce using rule 28 (classes_aux -> add_class LBRACE dec_vars functions RBRACE .)
    MAIN            reduce using rule 28 (classes_aux -> add_class LBRACE dec_vars functions RBRACE .)


state 53

    (33) functions -> FUNCT functions_aux functions .

    RBRACE          reduce using rule 33 (functions -> FUNCT functions_aux functions .)
    INIT            reduce using rule 33 (functions -> FUNCT functions_aux functions .)


state 54

    (34) functions_aux -> VOID ID . add_function LPAREN params RPAREN body
    (35) functions_aux -> VOID ID . add_function LPAREN RPAREN body
    (115) add_function -> .

    LPAREN          reduce using rule 115 (add_function -> .)

    add_function                   shift and go to state 66

state 55

    (36) functions_aux -> simple_type ID . add_function LPAREN RPAREN body
    (37) functions_aux -> simple_type ID . add_function LPAREN params RPAREN body
    (115) add_function -> .

    LPAREN          reduce using rule 115 (add_function -> .)

    add_function                   shift and go to state 67

state 56

    (30) classes_aux -> INHERITS ID add_inherit_class LBRACE dec_vars . functions RBRACE
    (32) functions -> . FUNCT functions_aux
    (33) functions -> . FUNCT functions_aux functions

    FUNCT           shift and go to state 26

    functions                      shift and go to state 68

state 57

    (31) classes_aux -> INHERITS ID add_inherit_class LBRACE functions . RBRACE

    RBRACE          shift and go to state 69


state 58

    (1) program -> PROGRAM ID TWOPOINTS program_classes MAIN add_class LBRACE program_body init RBRACE END .

    $end            reduce using rule 1 (program -> PROGRAM ID TWOPOINTS program_classes MAIN add_class LBRACE program_body init RBRACE END .)


state 59

    (107) init -> INIT add_init LBRACE . statutes_aux RBRACE
    (108) init -> INIT add_init LBRACE . dec_vars statutes_aux RBRACE
    (55) statutes_aux -> . statutes
    (56) statutes_aux -> . statutes statutes_aux
    (9) dec_vars -> . VAR dec_vars_aux
    (48) statutes -> . assignation SEMICOLON
    (49) statutes -> . CALL call SEMICOLON
    (50) statutes -> . read
    (51) statutes -> . write
    (52) statutes -> . condition
    (53) statutes -> . while
    (54) statutes -> . for
    (57) assignation -> . ID EQUAL exp
    (58) assignation -> . ID var_aux EQUAL exp
    (76) read -> . READ LPAREN ID RPAREN SEMICOLON
    (77) write -> . WRITE LPAREN write_aux RPAREN SEMICOLON
    (70) condition -> . IF condition_aux
    (82) while -> . WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (83) for -> . FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    VAR             shift and go to state 23
    CALL            shift and go to state 74
    ID              shift and go to state 80
    READ            shift and go to state 81
    WRITE           shift and go to state 82
    IF              shift and go to state 83
    WHILE           shift and go to state 84
    FROM            shift and go to state 85

    statutes_aux                   shift and go to state 70
    dec_vars                       shift and go to state 71
    statutes                       shift and go to state 72
    assignation                    shift and go to state 73
    read                           shift and go to state 75
    write                          shift and go to state 76
    condition                      shift and go to state 77
    while                          shift and go to state 78
    for                            shift and go to state 79

state 60

    (10) dec_vars_aux -> simple_type vars_simple_type SEMICOLON .
    (11) dec_vars_aux -> simple_type vars_simple_type SEMICOLON . dec_vars_aux
    (10) dec_vars_aux -> . simple_type vars_simple_type SEMICOLON
    (11) dec_vars_aux -> . simple_type vars_simple_type SEMICOLON dec_vars_aux
    (12) dec_vars_aux -> . complex_type vars_complex_type SEMICOLON
    (13) dec_vars_aux -> . complex_type vars_complex_type SEMICOLON dec_vars_aux
    (22) simple_type -> . INT
    (23) simple_type -> . FLOAT
    (24) simple_type -> . CHAR
    (25) complex_type -> . ID

  ! shift/reduce conflict for ID resolved as shift
    FUNCT           reduce using rule 10 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON .)
    INIT            reduce using rule 10 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON .)
    CALL            reduce using rule 10 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON .)
    READ            reduce using rule 10 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON .)
    WRITE           reduce using rule 10 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON .)
    IF              reduce using rule 10 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON .)
    WHILE           reduce using rule 10 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON .)
    FROM            reduce using rule 10 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON .)
    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    CHAR            shift and go to state 38
    ID              shift and go to state 39

  ! ID              [ reduce using rule 10 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON .) ]

    simple_type                    shift and go to state 34
    dec_vars_aux                   shift and go to state 86
    complex_type                   shift and go to state 35

state 61

    (16) vars_simple_type -> ID add_variable .
    (17) vars_simple_type -> ID add_variable . COMMA vars_simple_type

    SEMICOLON       reduce using rule 16 (vars_simple_type -> ID add_variable .)
    COMMA           shift and go to state 87


state 62

    (18) vars_simple_type -> ID vars_simple_type_aux .
    (19) vars_simple_type -> ID vars_simple_type_aux . COMMA vars_simple_type

    SEMICOLON       reduce using rule 18 (vars_simple_type -> ID vars_simple_type_aux .)
    COMMA           shift and go to state 88


state 63

    (20) vars_simple_type_aux -> LBRACKET . CTEI RBRACKET add_array_variable
    (21) vars_simple_type_aux -> LBRACKET . CTEI RBRACKET LBRACKET CTEI RBRACKET add_matrix_variable

    CTEI            shift and go to state 89


state 64

    (12) dec_vars_aux -> complex_type vars_complex_type SEMICOLON .
    (13) dec_vars_aux -> complex_type vars_complex_type SEMICOLON . dec_vars_aux
    (10) dec_vars_aux -> . simple_type vars_simple_type SEMICOLON
    (11) dec_vars_aux -> . simple_type vars_simple_type SEMICOLON dec_vars_aux
    (12) dec_vars_aux -> . complex_type vars_complex_type SEMICOLON
    (13) dec_vars_aux -> . complex_type vars_complex_type SEMICOLON dec_vars_aux
    (22) simple_type -> . INT
    (23) simple_type -> . FLOAT
    (24) simple_type -> . CHAR
    (25) complex_type -> . ID

  ! shift/reduce conflict for ID resolved as shift
    FUNCT           reduce using rule 12 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON .)
    INIT            reduce using rule 12 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON .)
    CALL            reduce using rule 12 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON .)
    READ            reduce using rule 12 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON .)
    WRITE           reduce using rule 12 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON .)
    IF              reduce using rule 12 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON .)
    WHILE           reduce using rule 12 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON .)
    FROM            reduce using rule 12 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON .)
    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    CHAR            shift and go to state 38
    ID              shift and go to state 39

  ! ID              [ reduce using rule 12 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON .) ]

    complex_type                   shift and go to state 35
    dec_vars_aux                   shift and go to state 90
    simple_type                    shift and go to state 34

state 65

    (15) vars_complex_type -> ID COMMA . vars_complex_type
    (14) vars_complex_type -> . ID
    (15) vars_complex_type -> . ID COMMA vars_complex_type

    ID              shift and go to state 51

    vars_complex_type              shift and go to state 91

state 66

    (34) functions_aux -> VOID ID add_function . LPAREN params RPAREN body
    (35) functions_aux -> VOID ID add_function . LPAREN RPAREN body

    LPAREN          shift and go to state 92


state 67

    (36) functions_aux -> simple_type ID add_function . LPAREN RPAREN body
    (37) functions_aux -> simple_type ID add_function . LPAREN params RPAREN body

    LPAREN          shift and go to state 93


state 68

    (30) classes_aux -> INHERITS ID add_inherit_class LBRACE dec_vars functions . RBRACE

    RBRACE          shift and go to state 94


state 69

    (31) classes_aux -> INHERITS ID add_inherit_class LBRACE functions RBRACE .

    CLASS           reduce using rule 31 (classes_aux -> INHERITS ID add_inherit_class LBRACE functions RBRACE .)
    MAIN            reduce using rule 31 (classes_aux -> INHERITS ID add_inherit_class LBRACE functions RBRACE .)


state 70

    (107) init -> INIT add_init LBRACE statutes_aux . RBRACE

    RBRACE          shift and go to state 95


state 71

    (108) init -> INIT add_init LBRACE dec_vars . statutes_aux RBRACE
    (55) statutes_aux -> . statutes
    (56) statutes_aux -> . statutes statutes_aux
    (48) statutes -> . assignation SEMICOLON
    (49) statutes -> . CALL call SEMICOLON
    (50) statutes -> . read
    (51) statutes -> . write
    (52) statutes -> . condition
    (53) statutes -> . while
    (54) statutes -> . for
    (57) assignation -> . ID EQUAL exp
    (58) assignation -> . ID var_aux EQUAL exp
    (76) read -> . READ LPAREN ID RPAREN SEMICOLON
    (77) write -> . WRITE LPAREN write_aux RPAREN SEMICOLON
    (70) condition -> . IF condition_aux
    (82) while -> . WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (83) for -> . FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    CALL            shift and go to state 74
    ID              shift and go to state 80
    READ            shift and go to state 81
    WRITE           shift and go to state 82
    IF              shift and go to state 83
    WHILE           shift and go to state 84
    FROM            shift and go to state 85

    statutes_aux                   shift and go to state 96
    statutes                       shift and go to state 72
    assignation                    shift and go to state 73
    read                           shift and go to state 75
    write                          shift and go to state 76
    condition                      shift and go to state 77
    while                          shift and go to state 78
    for                            shift and go to state 79

state 72

    (55) statutes_aux -> statutes .
    (56) statutes_aux -> statutes . statutes_aux
    (55) statutes_aux -> . statutes
    (56) statutes_aux -> . statutes statutes_aux
    (48) statutes -> . assignation SEMICOLON
    (49) statutes -> . CALL call SEMICOLON
    (50) statutes -> . read
    (51) statutes -> . write
    (52) statutes -> . condition
    (53) statutes -> . while
    (54) statutes -> . for
    (57) assignation -> . ID EQUAL exp
    (58) assignation -> . ID var_aux EQUAL exp
    (76) read -> . READ LPAREN ID RPAREN SEMICOLON
    (77) write -> . WRITE LPAREN write_aux RPAREN SEMICOLON
    (70) condition -> . IF condition_aux
    (82) while -> . WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (83) for -> . FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    RBRACE          reduce using rule 55 (statutes_aux -> statutes .)
    RETURN          reduce using rule 55 (statutes_aux -> statutes .)
    CALL            shift and go to state 74
    ID              shift and go to state 80
    READ            shift and go to state 81
    WRITE           shift and go to state 82
    IF              shift and go to state 83
    WHILE           shift and go to state 84
    FROM            shift and go to state 85

    statutes                       shift and go to state 72
    statutes_aux                   shift and go to state 97
    assignation                    shift and go to state 73
    read                           shift and go to state 75
    write                          shift and go to state 76
    condition                      shift and go to state 77
    while                          shift and go to state 78
    for                            shift and go to state 79

state 73

<<<<<<< HEAD
    (48) statutes -> assignation . SEMICOLON
=======
    (48) statutes -> ASSIGN . assignation SEMICOLON
    (57) assignation -> . var EQUAL exp
    (58) var -> . ID push_var
    (59) var -> . ID var_aux
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    SEMICOLON       shift and go to state 98


state 74

    (49) statutes -> CALL . call SEMICOLON
    (64) call -> . ID LPAREN RPAREN
    (65) call -> . ID POINT ID LPAREN RPAREN
    (66) call -> . ID LPAREN call_aux RPAREN
    (67) call -> . ID POINT ID LPAREN call_aux RPAREN

    ID              shift and go to state 100

    call                           shift and go to state 99

state 75

    (50) statutes -> read .

    CALL            reduce using rule 50 (statutes -> read .)
    ID              reduce using rule 50 (statutes -> read .)
    READ            reduce using rule 50 (statutes -> read .)
    WRITE           reduce using rule 50 (statutes -> read .)
    IF              reduce using rule 50 (statutes -> read .)
    WHILE           reduce using rule 50 (statutes -> read .)
    FROM            reduce using rule 50 (statutes -> read .)
    RBRACE          reduce using rule 50 (statutes -> read .)
    RETURN          reduce using rule 50 (statutes -> read .)


state 76

    (51) statutes -> write .

    CALL            reduce using rule 51 (statutes -> write .)
    ID              reduce using rule 51 (statutes -> write .)
    READ            reduce using rule 51 (statutes -> write .)
    WRITE           reduce using rule 51 (statutes -> write .)
    IF              reduce using rule 51 (statutes -> write .)
    WHILE           reduce using rule 51 (statutes -> write .)
    FROM            reduce using rule 51 (statutes -> write .)
    RBRACE          reduce using rule 51 (statutes -> write .)
    RETURN          reduce using rule 51 (statutes -> write .)


state 77

    (52) statutes -> condition .

    CALL            reduce using rule 52 (statutes -> condition .)
    ID              reduce using rule 52 (statutes -> condition .)
    READ            reduce using rule 52 (statutes -> condition .)
    WRITE           reduce using rule 52 (statutes -> condition .)
    IF              reduce using rule 52 (statutes -> condition .)
    WHILE           reduce using rule 52 (statutes -> condition .)
    FROM            reduce using rule 52 (statutes -> condition .)
    RBRACE          reduce using rule 52 (statutes -> condition .)
    RETURN          reduce using rule 52 (statutes -> condition .)


state 78

    (53) statutes -> while .

    CALL            reduce using rule 53 (statutes -> while .)
    ID              reduce using rule 53 (statutes -> while .)
    READ            reduce using rule 53 (statutes -> while .)
    WRITE           reduce using rule 53 (statutes -> while .)
    IF              reduce using rule 53 (statutes -> while .)
    WHILE           reduce using rule 53 (statutes -> while .)
    FROM            reduce using rule 53 (statutes -> while .)
    RBRACE          reduce using rule 53 (statutes -> while .)
    RETURN          reduce using rule 53 (statutes -> while .)


state 79

    (54) statutes -> for .

    CALL            reduce using rule 54 (statutes -> for .)
    ID              reduce using rule 54 (statutes -> for .)
    READ            reduce using rule 54 (statutes -> for .)
    WRITE           reduce using rule 54 (statutes -> for .)
    IF              reduce using rule 54 (statutes -> for .)
    WHILE           reduce using rule 54 (statutes -> for .)
    FROM            reduce using rule 54 (statutes -> for .)
    RBRACE          reduce using rule 54 (statutes -> for .)
    RETURN          reduce using rule 54 (statutes -> for .)


state 80

    (57) assignation -> ID . EQUAL exp
    (58) assignation -> ID . var_aux EQUAL exp
    (59) var_aux -> . POINT ID
    (60) var_aux -> . POINT ID var_aux_2
    (61) var_aux -> . var_aux_2
    (62) var_aux_2 -> . LBRACKET exp RBRACKET
    (63) var_aux_2 -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET

    EQUAL           shift and go to state 101
    POINT           shift and go to state 103
    LBRACKET        shift and go to state 105

    var_aux                        shift and go to state 102
    var_aux_2                      shift and go to state 104

state 81

    (76) read -> READ . LPAREN ID RPAREN SEMICOLON

    LPAREN          shift and go to state 106


state 82

    (77) write -> WRITE . LPAREN write_aux RPAREN SEMICOLON

    LPAREN          shift and go to state 107


state 83

    (70) condition -> IF . condition_aux
    (71) condition_aux -> . LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3
    (72) condition_aux -> . condition_aux_2
    (73) condition_aux_2 -> . LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux

    LPAREN          shift and go to state 109

    condition_aux                  shift and go to state 108
    condition_aux_2                shift and go to state 110

state 84

    (82) while -> WHILE . LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    LPAREN          shift and go to state 111


state 85

    (83) for -> FROM . LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    LPAREN          shift and go to state 112


state 86

    (11) dec_vars_aux -> simple_type vars_simple_type SEMICOLON dec_vars_aux .

    FUNCT           reduce using rule 11 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON dec_vars_aux .)
    INIT            reduce using rule 11 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON dec_vars_aux .)
    CALL            reduce using rule 11 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON dec_vars_aux .)
    ID              reduce using rule 11 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON dec_vars_aux .)
    READ            reduce using rule 11 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON dec_vars_aux .)
    WRITE           reduce using rule 11 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON dec_vars_aux .)
    IF              reduce using rule 11 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON dec_vars_aux .)
    WHILE           reduce using rule 11 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON dec_vars_aux .)
    FROM            reduce using rule 11 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON dec_vars_aux .)


state 87

    (17) vars_simple_type -> ID add_variable COMMA . vars_simple_type
    (16) vars_simple_type -> . ID add_variable
    (17) vars_simple_type -> . ID add_variable COMMA vars_simple_type
    (18) vars_simple_type -> . ID vars_simple_type_aux
    (19) vars_simple_type -> . ID vars_simple_type_aux COMMA vars_simple_type

    ID              shift and go to state 49

    vars_simple_type               shift and go to state 113

state 88

    (19) vars_simple_type -> ID vars_simple_type_aux COMMA . vars_simple_type
    (16) vars_simple_type -> . ID add_variable
    (17) vars_simple_type -> . ID add_variable COMMA vars_simple_type
    (18) vars_simple_type -> . ID vars_simple_type_aux
    (19) vars_simple_type -> . ID vars_simple_type_aux COMMA vars_simple_type

    ID              shift and go to state 49

    vars_simple_type               shift and go to state 114

state 89

    (20) vars_simple_type_aux -> LBRACKET CTEI . RBRACKET add_array_variable
    (21) vars_simple_type_aux -> LBRACKET CTEI . RBRACKET LBRACKET CTEI RBRACKET add_matrix_variable

    RBRACKET        shift and go to state 115


state 90

    (13) dec_vars_aux -> complex_type vars_complex_type SEMICOLON dec_vars_aux .

    FUNCT           reduce using rule 13 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON dec_vars_aux .)
    INIT            reduce using rule 13 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON dec_vars_aux .)
    CALL            reduce using rule 13 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON dec_vars_aux .)
    ID              reduce using rule 13 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON dec_vars_aux .)
    READ            reduce using rule 13 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON dec_vars_aux .)
    WRITE           reduce using rule 13 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON dec_vars_aux .)
    IF              reduce using rule 13 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON dec_vars_aux .)
    WHILE           reduce using rule 13 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON dec_vars_aux .)
    FROM            reduce using rule 13 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON dec_vars_aux .)


state 91

    (15) vars_complex_type -> ID COMMA vars_complex_type .

    SEMICOLON       reduce using rule 15 (vars_complex_type -> ID COMMA vars_complex_type .)


state 92

    (34) functions_aux -> VOID ID add_function LPAREN . params RPAREN body
    (35) functions_aux -> VOID ID add_function LPAREN . RPAREN body
    (38) params -> . simple_type ID add_variable
    (39) params -> . simple_type ID add_variable COMMA params
    (40) params -> . simple_type ID params_aux
    (41) params -> . simple_type ID params_aux COMMA params
    (22) simple_type -> . INT
    (23) simple_type -> . FLOAT
    (24) simple_type -> . CHAR

    RPAREN          shift and go to state 117
    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    CHAR            shift and go to state 38

    params                         shift and go to state 116
    simple_type                    shift and go to state 118

state 93

    (36) functions_aux -> simple_type ID add_function LPAREN . RPAREN body
    (37) functions_aux -> simple_type ID add_function LPAREN . params RPAREN body
    (38) params -> . simple_type ID add_variable
    (39) params -> . simple_type ID add_variable COMMA params
    (40) params -> . simple_type ID params_aux
    (41) params -> . simple_type ID params_aux COMMA params
    (22) simple_type -> . INT
    (23) simple_type -> . FLOAT
    (24) simple_type -> . CHAR

    RPAREN          shift and go to state 119
    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    CHAR            shift and go to state 38

    simple_type                    shift and go to state 118
    params                         shift and go to state 120

state 94

    (30) classes_aux -> INHERITS ID add_inherit_class LBRACE dec_vars functions RBRACE .

    CLASS           reduce using rule 30 (classes_aux -> INHERITS ID add_inherit_class LBRACE dec_vars functions RBRACE .)
    MAIN            reduce using rule 30 (classes_aux -> INHERITS ID add_inherit_class LBRACE dec_vars functions RBRACE .)


<<<<<<< HEAD
state 95

    (107) init -> INIT add_init LBRACE statutes_aux RBRACE .
=======
state 94

    (107) init -> INIT add_init LBRACE statutes_aux RBRACE .

    RBRACE          reduce using rule 107 (init -> INIT add_init LBRACE statutes_aux RBRACE .)


state 95

    (108) init -> INIT add_init LBRACE dec_vars statutes_aux . RBRACE
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    RBRACE          reduce using rule 107 (init -> INIT add_init LBRACE statutes_aux RBRACE .)


state 96

    (108) init -> INIT add_init LBRACE dec_vars statutes_aux . RBRACE

    RBRACE          shift and go to state 121


state 97

    (56) statutes_aux -> statutes statutes_aux .

    RBRACE          reduce using rule 56 (statutes_aux -> statutes statutes_aux .)
    RETURN          reduce using rule 56 (statutes_aux -> statutes statutes_aux .)


state 98

    (48) statutes -> assignation SEMICOLON .

    CALL            reduce using rule 48 (statutes -> assignation SEMICOLON .)
    ID              reduce using rule 48 (statutes -> assignation SEMICOLON .)
    READ            reduce using rule 48 (statutes -> assignation SEMICOLON .)
    WRITE           reduce using rule 48 (statutes -> assignation SEMICOLON .)
    IF              reduce using rule 48 (statutes -> assignation SEMICOLON .)
    WHILE           reduce using rule 48 (statutes -> assignation SEMICOLON .)
    FROM            reduce using rule 48 (statutes -> assignation SEMICOLON .)
    RBRACE          reduce using rule 48 (statutes -> assignation SEMICOLON .)
    RETURN          reduce using rule 48 (statutes -> assignation SEMICOLON .)


state 99

<<<<<<< HEAD
    (49) statutes -> CALL call . SEMICOLON

    SEMICOLON       shift and go to state 122

=======
    (58) var -> ID . push_var
    (59) var -> ID . var_aux
    (119) push_var -> .
    (60) var_aux -> . POINT ID
    (61) var_aux -> . POINT ID var_aux_2
    (62) var_aux -> . var_aux_2
    (63) var_aux_2 -> . LBRACKET exp RBRACKET
    (64) var_aux_2 -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET

    EQUAL           reduce using rule 119 (push_var -> .)
    RPAREN          reduce using rule 119 (push_var -> .)
    TIMES           reduce using rule 119 (push_var -> .)
    DIVIDE          reduce using rule 119 (push_var -> .)
    PLUS            reduce using rule 119 (push_var -> .)
    MINUS           reduce using rule 119 (push_var -> .)
    RELOP           reduce using rule 119 (push_var -> .)
    AND             reduce using rule 119 (push_var -> .)
    OR              reduce using rule 119 (push_var -> .)
    COMMA           reduce using rule 119 (push_var -> .)
    SEMICOLON       reduce using rule 119 (push_var -> .)
    RBRACKET        reduce using rule 119 (push_var -> .)
    POINT           shift and go to state 122
    LBRACKET        shift and go to state 124

    push_var                       shift and go to state 120
    var_aux                        shift and go to state 121
    var_aux_2                      shift and go to state 123
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

state 100

    (64) call -> ID . LPAREN RPAREN
    (65) call -> ID . POINT ID LPAREN RPAREN
    (66) call -> ID . LPAREN call_aux RPAREN
    (67) call -> ID . POINT ID LPAREN call_aux RPAREN

<<<<<<< HEAD
    LPAREN          shift and go to state 123
    POINT           shift and go to state 124
=======
    SEMICOLON       shift and go to state 125
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330


state 101

<<<<<<< HEAD
    (57) assignation -> ID EQUAL . exp
    (84) exp -> . n_exp pop_op
    (85) exp -> . n_exp pop_op OR push_op exp
    (86) n_exp -> . l_exp pop_op
    (87) n_exp -> . l_exp pop_op AND push_op n_exp
    (88) l_exp -> . a_exp pop_op
    (89) l_exp -> . a_exp pop_op RELOP push_op a_exp
    (90) a_exp -> . term pop_op
    (91) a_exp -> . term pop_op PLUS push_op a_exp
    (92) a_exp -> . term pop_op MINUS push_op a_exp
    (93) term -> . factor pop_op
    (94) term -> . factor pop_op TIMES push_op term
    (95) term -> . factor pop_op DIVIDE push_op term
    (96) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (97) factor -> . call
    (98) factor -> . factor_aux
    (64) call -> . ID LPAREN RPAREN
    (65) call -> . ID POINT ID LPAREN RPAREN
    (66) call -> . ID LPAREN call_aux RPAREN
    (67) call -> . ID POINT ID LPAREN call_aux RPAREN
    (99) factor_aux -> . cte
    (100) factor_aux -> . PLUS cte
    (101) factor_aux -> . MINUS cte
    (102) cte -> . ID push_var
    (103) cte -> . ID var_aux push_var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 134
    ID              shift and go to state 125
    PLUS            shift and go to state 131
    MINUS           shift and go to state 132
    CTEI            shift and go to state 138
    CTEF            shift and go to state 139
    CTECHAR         shift and go to state 140

    exp                            shift and go to state 126
    n_exp                          shift and go to state 127
    l_exp                          shift and go to state 128
    a_exp                          shift and go to state 129
    term                           shift and go to state 130
    factor                         shift and go to state 133
    call                           shift and go to state 135
    factor_aux                     shift and go to state 136
    cte                            shift and go to state 137

state 102

    (58) assignation -> ID var_aux . EQUAL exp
=======
    (65) call -> ID . LPAREN RPAREN
    (66) call -> ID . POINT ID LPAREN RPAREN
    (67) call -> ID . LPAREN call_aux RPAREN
    (68) call -> ID . POINT ID LPAREN call_aux RPAREN

    LPAREN          shift and go to state 126
    POINT           shift and go to state 127


state 102

    (77) read -> READ LPAREN . var RPAREN SEMICOLON
    (58) var -> . ID push_var
    (59) var -> . ID var_aux
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    EQUAL           shift and go to state 141

<<<<<<< HEAD

state 103

    (59) var_aux -> POINT . ID
    (60) var_aux -> POINT . ID var_aux_2

    ID              shift and go to state 142

=======
    var                            shift and go to state 128

state 103

    (78) write -> WRITE LPAREN . write_aux RPAREN SEMICOLON
    (79) write_aux -> . exp
    (80) write_aux -> . exp COMMA write_aux
    (81) write_aux -> . CTESTRING
    (82) write_aux -> . CTESTRING COMMA write_aux
    (85) exp -> . n_exp
    (86) exp -> . n_exp OR push_op exp pop_op
    (87) n_exp -> . l_exp
    (88) n_exp -> . l_exp AND push_op n_exp pop_op
    (89) l_exp -> . a_exp
    (90) l_exp -> . a_exp RELOP push_op a_exp pop_op
    (91) a_exp -> . term
    (92) a_exp -> . term PLUS push_op a_exp pop_op
    (93) a_exp -> . term MINUS push_op a_exp pop_op
    (94) term -> . factor
    (95) term -> . factor TIMES push_op term pop_op
    (96) term -> . factor DIVIDE push_op term pop_op
    (97) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (98) factor -> . call
    (99) factor -> . factor_aux
    (65) call -> . ID LPAREN RPAREN
    (66) call -> . ID POINT ID LPAREN RPAREN
    (67) call -> . ID LPAREN call_aux RPAREN
    (68) call -> . ID POINT ID LPAREN call_aux RPAREN
    (100) factor_aux -> . cte
    (101) factor_aux -> . PLUS cte
    (102) factor_aux -> . MINUS cte
    (103) cte -> . var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var
    (58) var -> . ID push_var
    (59) var -> . ID var_aux

    CTESTRING       shift and go to state 132
    LPAREN          shift and go to state 129
    ID              shift and go to state 142
    PLUS            shift and go to state 137
    MINUS           shift and go to state 138
    CTEI            shift and go to state 145
    CTEF            shift and go to state 146
    CTECHAR         shift and go to state 147

    write_aux                      shift and go to state 130
    exp                            shift and go to state 131
    n_exp                          shift and go to state 133
    l_exp                          shift and go to state 134
    a_exp                          shift and go to state 135
    term                           shift and go to state 136
    factor                         shift and go to state 139
    call                           shift and go to state 140
    factor_aux                     shift and go to state 141
    cte                            shift and go to state 143
    var                            shift and go to state 144
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

state 104

    (61) var_aux -> var_aux_2 .

    EQUAL           reduce using rule 61 (var_aux -> var_aux_2 .)
    TIMES           reduce using rule 61 (var_aux -> var_aux_2 .)
    DIVIDE          reduce using rule 61 (var_aux -> var_aux_2 .)
    PLUS            reduce using rule 61 (var_aux -> var_aux_2 .)
    MINUS           reduce using rule 61 (var_aux -> var_aux_2 .)
    RELOP           reduce using rule 61 (var_aux -> var_aux_2 .)
    AND             reduce using rule 61 (var_aux -> var_aux_2 .)
    OR              reduce using rule 61 (var_aux -> var_aux_2 .)
    SEMICOLON       reduce using rule 61 (var_aux -> var_aux_2 .)
    RPAREN          reduce using rule 61 (var_aux -> var_aux_2 .)
    RBRACKET        reduce using rule 61 (var_aux -> var_aux_2 .)
    COMMA           reduce using rule 61 (var_aux -> var_aux_2 .)


state 105

<<<<<<< HEAD
    (62) var_aux_2 -> LBRACKET . exp RBRACKET
    (63) var_aux_2 -> LBRACKET . exp RBRACKET LBRACKET exp RBRACKET
    (84) exp -> . n_exp pop_op
    (85) exp -> . n_exp pop_op OR push_op exp
    (86) n_exp -> . l_exp pop_op
    (87) n_exp -> . l_exp pop_op AND push_op n_exp
    (88) l_exp -> . a_exp pop_op
    (89) l_exp -> . a_exp pop_op RELOP push_op a_exp
    (90) a_exp -> . term pop_op
    (91) a_exp -> . term pop_op PLUS push_op a_exp
    (92) a_exp -> . term pop_op MINUS push_op a_exp
    (93) term -> . factor pop_op
    (94) term -> . factor pop_op TIMES push_op term
    (95) term -> . factor pop_op DIVIDE push_op term
    (96) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (97) factor -> . call
    (98) factor -> . factor_aux
    (64) call -> . ID LPAREN RPAREN
    (65) call -> . ID POINT ID LPAREN RPAREN
    (66) call -> . ID LPAREN call_aux RPAREN
    (67) call -> . ID POINT ID LPAREN call_aux RPAREN
    (99) factor_aux -> . cte
    (100) factor_aux -> . PLUS cte
    (101) factor_aux -> . MINUS cte
    (102) cte -> . ID push_var
    (103) cte -> . ID var_aux push_var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 134
    ID              shift and go to state 125
    PLUS            shift and go to state 131
    MINUS           shift and go to state 132
    CTEI            shift and go to state 138
    CTEF            shift and go to state 139
    CTECHAR         shift and go to state 140

    exp                            shift and go to state 143
    n_exp                          shift and go to state 127
    l_exp                          shift and go to state 128
    a_exp                          shift and go to state 129
    term                           shift and go to state 130
    factor                         shift and go to state 133
    call                           shift and go to state 135
    factor_aux                     shift and go to state 136
    cte                            shift and go to state 137
=======
    (72) condition_aux -> LPAREN . exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3
    (74) condition_aux_2 -> LPAREN . exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux
    (85) exp -> . n_exp
    (86) exp -> . n_exp OR push_op exp pop_op
    (87) n_exp -> . l_exp
    (88) n_exp -> . l_exp AND push_op n_exp pop_op
    (89) l_exp -> . a_exp
    (90) l_exp -> . a_exp RELOP push_op a_exp pop_op
    (91) a_exp -> . term
    (92) a_exp -> . term PLUS push_op a_exp pop_op
    (93) a_exp -> . term MINUS push_op a_exp pop_op
    (94) term -> . factor
    (95) term -> . factor TIMES push_op term pop_op
    (96) term -> . factor DIVIDE push_op term pop_op
    (97) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (98) factor -> . call
    (99) factor -> . factor_aux
    (65) call -> . ID LPAREN RPAREN
    (66) call -> . ID POINT ID LPAREN RPAREN
    (67) call -> . ID LPAREN call_aux RPAREN
    (68) call -> . ID POINT ID LPAREN call_aux RPAREN
    (100) factor_aux -> . cte
    (101) factor_aux -> . PLUS cte
    (102) factor_aux -> . MINUS cte
    (103) cte -> . var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var
    (58) var -> . ID push_var
    (59) var -> . ID var_aux

    LPAREN          shift and go to state 129
    ID              shift and go to state 142
    PLUS            shift and go to state 137
    MINUS           shift and go to state 138
    CTEI            shift and go to state 145
    CTEF            shift and go to state 146
    CTECHAR         shift and go to state 147

    exp                            shift and go to state 148
    n_exp                          shift and go to state 133
    l_exp                          shift and go to state 134
    a_exp                          shift and go to state 135
    term                           shift and go to state 136
    factor                         shift and go to state 139
    call                           shift and go to state 140
    factor_aux                     shift and go to state 141
    cte                            shift and go to state 143
    var                            shift and go to state 144
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

state 106

    (76) read -> READ LPAREN . ID RPAREN SEMICOLON

    ID              shift and go to state 144


state 107

<<<<<<< HEAD
    (77) write -> WRITE LPAREN . write_aux RPAREN SEMICOLON
    (78) write_aux -> . exp
    (79) write_aux -> . exp COMMA write_aux
    (80) write_aux -> . CTESTRING
    (81) write_aux -> . CTESTRING COMMA write_aux
    (84) exp -> . n_exp pop_op
    (85) exp -> . n_exp pop_op OR push_op exp
    (86) n_exp -> . l_exp pop_op
    (87) n_exp -> . l_exp pop_op AND push_op n_exp
    (88) l_exp -> . a_exp pop_op
    (89) l_exp -> . a_exp pop_op RELOP push_op a_exp
    (90) a_exp -> . term pop_op
    (91) a_exp -> . term pop_op PLUS push_op a_exp
    (92) a_exp -> . term pop_op MINUS push_op a_exp
    (93) term -> . factor pop_op
    (94) term -> . factor pop_op TIMES push_op term
    (95) term -> . factor pop_op DIVIDE push_op term
    (96) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (97) factor -> . call
    (98) factor -> . factor_aux
    (64) call -> . ID LPAREN RPAREN
    (65) call -> . ID POINT ID LPAREN RPAREN
    (66) call -> . ID LPAREN call_aux RPAREN
    (67) call -> . ID POINT ID LPAREN call_aux RPAREN
    (99) factor_aux -> . cte
    (100) factor_aux -> . PLUS cte
    (101) factor_aux -> . MINUS cte
    (102) cte -> . ID push_var
    (103) cte -> . ID var_aux push_var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var

    CTESTRING       shift and go to state 147
    LPAREN          shift and go to state 134
    ID              shift and go to state 125
    PLUS            shift and go to state 131
    MINUS           shift and go to state 132
    CTEI            shift and go to state 138
    CTEF            shift and go to state 139
    CTECHAR         shift and go to state 140

    write_aux                      shift and go to state 145
    exp                            shift and go to state 146
    n_exp                          shift and go to state 127
    l_exp                          shift and go to state 128
    a_exp                          shift and go to state 129
    term                           shift and go to state 130
    factor                         shift and go to state 133
    call                           shift and go to state 135
    factor_aux                     shift and go to state 136
    cte                            shift and go to state 137

state 108

    (70) condition -> IF condition_aux .
=======
    (83) while -> WHILE LPAREN . exp RPAREN DO LBRACE statutes_aux RBRACE
    (85) exp -> . n_exp
    (86) exp -> . n_exp OR push_op exp pop_op
    (87) n_exp -> . l_exp
    (88) n_exp -> . l_exp AND push_op n_exp pop_op
    (89) l_exp -> . a_exp
    (90) l_exp -> . a_exp RELOP push_op a_exp pop_op
    (91) a_exp -> . term
    (92) a_exp -> . term PLUS push_op a_exp pop_op
    (93) a_exp -> . term MINUS push_op a_exp pop_op
    (94) term -> . factor
    (95) term -> . factor TIMES push_op term pop_op
    (96) term -> . factor DIVIDE push_op term pop_op
    (97) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (98) factor -> . call
    (99) factor -> . factor_aux
    (65) call -> . ID LPAREN RPAREN
    (66) call -> . ID POINT ID LPAREN RPAREN
    (67) call -> . ID LPAREN call_aux RPAREN
    (68) call -> . ID POINT ID LPAREN call_aux RPAREN
    (100) factor_aux -> . cte
    (101) factor_aux -> . PLUS cte
    (102) factor_aux -> . MINUS cte
    (103) cte -> . var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var
    (58) var -> . ID push_var
    (59) var -> . ID var_aux

    LPAREN          shift and go to state 129
    ID              shift and go to state 142
    PLUS            shift and go to state 137
    MINUS           shift and go to state 138
    CTEI            shift and go to state 145
    CTEF            shift and go to state 146
    CTECHAR         shift and go to state 147

    exp                            shift and go to state 149
    n_exp                          shift and go to state 133
    l_exp                          shift and go to state 134
    a_exp                          shift and go to state 135
    term                           shift and go to state 136
    factor                         shift and go to state 139
    call                           shift and go to state 140
    factor_aux                     shift and go to state 141
    cte                            shift and go to state 143
    var                            shift and go to state 144

state 108

    (84) for -> FROM LPAREN . assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (57) assignation -> . var EQUAL exp
    (58) var -> . ID push_var
    (59) var -> . ID var_aux
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    CALL            reduce using rule 70 (condition -> IF condition_aux .)
    ID              reduce using rule 70 (condition -> IF condition_aux .)
    READ            reduce using rule 70 (condition -> IF condition_aux .)
    WRITE           reduce using rule 70 (condition -> IF condition_aux .)
    IF              reduce using rule 70 (condition -> IF condition_aux .)
    WHILE           reduce using rule 70 (condition -> IF condition_aux .)
    FROM            reduce using rule 70 (condition -> IF condition_aux .)
    RBRACE          reduce using rule 70 (condition -> IF condition_aux .)
    RETURN          reduce using rule 70 (condition -> IF condition_aux .)

<<<<<<< HEAD
=======
    assignation                    shift and go to state 150
    var                            shift and go to state 98
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

state 109

    (71) condition_aux -> LPAREN . exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3
    (73) condition_aux_2 -> LPAREN . exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux
    (84) exp -> . n_exp pop_op
    (85) exp -> . n_exp pop_op OR push_op exp
    (86) n_exp -> . l_exp pop_op
    (87) n_exp -> . l_exp pop_op AND push_op n_exp
    (88) l_exp -> . a_exp pop_op
    (89) l_exp -> . a_exp pop_op RELOP push_op a_exp
    (90) a_exp -> . term pop_op
    (91) a_exp -> . term pop_op PLUS push_op a_exp
    (92) a_exp -> . term pop_op MINUS push_op a_exp
    (93) term -> . factor pop_op
    (94) term -> . factor pop_op TIMES push_op term
    (95) term -> . factor pop_op DIVIDE push_op term
    (96) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (97) factor -> . call
    (98) factor -> . factor_aux
    (64) call -> . ID LPAREN RPAREN
    (65) call -> . ID POINT ID LPAREN RPAREN
    (66) call -> . ID LPAREN call_aux RPAREN
    (67) call -> . ID POINT ID LPAREN call_aux RPAREN
    (99) factor_aux -> . cte
    (100) factor_aux -> . PLUS cte
    (101) factor_aux -> . MINUS cte
    (102) cte -> . ID push_var
    (103) cte -> . ID var_aux push_var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 134
    ID              shift and go to state 125
    PLUS            shift and go to state 131
    MINUS           shift and go to state 132
    CTEI            shift and go to state 138
    CTEF            shift and go to state 139
    CTECHAR         shift and go to state 140

    exp                            shift and go to state 148
    n_exp                          shift and go to state 127
    l_exp                          shift and go to state 128
    a_exp                          shift and go to state 129
    term                           shift and go to state 130
    factor                         shift and go to state 133
    call                           shift and go to state 135
    factor_aux                     shift and go to state 136
    cte                            shift and go to state 137

state 110

    (72) condition_aux -> condition_aux_2 .

    CALL            reduce using rule 72 (condition_aux -> condition_aux_2 .)
    ID              reduce using rule 72 (condition_aux -> condition_aux_2 .)
    READ            reduce using rule 72 (condition_aux -> condition_aux_2 .)
    WRITE           reduce using rule 72 (condition_aux -> condition_aux_2 .)
    IF              reduce using rule 72 (condition_aux -> condition_aux_2 .)
    WHILE           reduce using rule 72 (condition_aux -> condition_aux_2 .)
    FROM            reduce using rule 72 (condition_aux -> condition_aux_2 .)
    RBRACE          reduce using rule 72 (condition_aux -> condition_aux_2 .)
    RETURN          reduce using rule 72 (condition_aux -> condition_aux_2 .)


state 111

<<<<<<< HEAD
    (82) while -> WHILE LPAREN . exp RPAREN DO LBRACE statutes_aux RBRACE
    (84) exp -> . n_exp pop_op
    (85) exp -> . n_exp pop_op OR push_op exp
    (86) n_exp -> . l_exp pop_op
    (87) n_exp -> . l_exp pop_op AND push_op n_exp
    (88) l_exp -> . a_exp pop_op
    (89) l_exp -> . a_exp pop_op RELOP push_op a_exp
    (90) a_exp -> . term pop_op
    (91) a_exp -> . term pop_op PLUS push_op a_exp
    (92) a_exp -> . term pop_op MINUS push_op a_exp
    (93) term -> . factor pop_op
    (94) term -> . factor pop_op TIMES push_op term
    (95) term -> . factor pop_op DIVIDE push_op term
    (96) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (97) factor -> . call
    (98) factor -> . factor_aux
    (64) call -> . ID LPAREN RPAREN
    (65) call -> . ID POINT ID LPAREN RPAREN
    (66) call -> . ID LPAREN call_aux RPAREN
    (67) call -> . ID POINT ID LPAREN call_aux RPAREN
    (99) factor_aux -> . cte
    (100) factor_aux -> . PLUS cte
    (101) factor_aux -> . MINUS cte
    (102) cte -> . ID push_var
    (103) cte -> . ID var_aux push_var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 134
    ID              shift and go to state 125
    PLUS            shift and go to state 131
    MINUS           shift and go to state 132
    CTEI            shift and go to state 138
    CTEF            shift and go to state 139
    CTECHAR         shift and go to state 140

    exp                            shift and go to state 149
    n_exp                          shift and go to state 127
    l_exp                          shift and go to state 128
    a_exp                          shift and go to state 129
    term                           shift and go to state 130
    factor                         shift and go to state 133
    call                           shift and go to state 135
    factor_aux                     shift and go to state 136
    cte                            shift and go to state 137
=======
    (20) vars_simple_type_aux -> LBRACKET CTEI RBRACKET . add_array_variable
    (21) vars_simple_type_aux -> LBRACKET CTEI RBRACKET . LBRACKET CTEI RBRACKET add_matrix_variable
    (111) add_array_variable -> .

    LBRACKET        shift and go to state 151
    COMMA           reduce using rule 111 (add_array_variable -> .)
    SEMICOLON       reduce using rule 111 (add_array_variable -> .)

    add_array_variable             shift and go to state 152
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

state 112

    (83) for -> FROM LPAREN . assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (57) assignation -> . ID EQUAL exp
    (58) assignation -> . ID var_aux EQUAL exp

<<<<<<< HEAD
    ID              shift and go to state 80
=======
    RPAREN          shift and go to state 153
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    assignation                    shift and go to state 150

state 113

    (17) vars_simple_type -> ID add_variable COMMA vars_simple_type .

<<<<<<< HEAD
    SEMICOLON       reduce using rule 17 (vars_simple_type -> ID add_variable COMMA vars_simple_type .)

=======
    LBRACE          shift and go to state 155

    body                           shift and go to state 154
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

state 114

    (19) vars_simple_type -> ID vars_simple_type_aux COMMA vars_simple_type .

<<<<<<< HEAD
    SEMICOLON       reduce using rule 19 (vars_simple_type -> ID vars_simple_type_aux COMMA vars_simple_type .)
=======
    ID              shift and go to state 156
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330


state 115

    (20) vars_simple_type_aux -> LBRACKET CTEI RBRACKET . add_array_variable
    (21) vars_simple_type_aux -> LBRACKET CTEI RBRACKET . LBRACKET CTEI RBRACKET add_matrix_variable
    (111) add_array_variable -> .

<<<<<<< HEAD
    LBRACKET        shift and go to state 151
    COMMA           reduce using rule 111 (add_array_variable -> .)
    SEMICOLON       reduce using rule 111 (add_array_variable -> .)

    add_array_variable             shift and go to state 152
=======
    LBRACE          shift and go to state 155

    body                           shift and go to state 157
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

state 116

    (34) functions_aux -> VOID ID add_function LPAREN params . RPAREN body

<<<<<<< HEAD
    RPAREN          shift and go to state 153
=======
    RPAREN          shift and go to state 158
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330


state 117

<<<<<<< HEAD
    (35) functions_aux -> VOID ID add_function LPAREN RPAREN . body
    (44) body -> . LBRACE dec_vars statutes_aux RBRACE
    (45) body -> . LBRACE statutes_aux RBRACE
    (46) body -> . LBRACE statutes_aux RETURN ID SEMICOLON RBRACE
    (47) body -> . LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE

    LBRACE          shift and go to state 155
=======
    (108) init -> INIT add_init LBRACE dec_vars statutes_aux RBRACE .

    RBRACE          reduce using rule 108 (init -> INIT add_init LBRACE dec_vars statutes_aux RBRACE .)
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    body                           shift and go to state 154

state 118

    (38) params -> simple_type . ID add_variable
    (39) params -> simple_type . ID add_variable COMMA params
    (40) params -> simple_type . ID params_aux
    (41) params -> simple_type . ID params_aux COMMA params

    ID              shift and go to state 156


state 119

<<<<<<< HEAD
    (36) functions_aux -> simple_type ID add_function LPAREN RPAREN . body
    (44) body -> . LBRACE dec_vars statutes_aux RBRACE
    (45) body -> . LBRACE statutes_aux RBRACE
    (46) body -> . LBRACE statutes_aux RETURN ID SEMICOLON RBRACE
    (47) body -> . LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE

    LBRACE          shift and go to state 155

    body                           shift and go to state 157

state 120

    (37) functions_aux -> simple_type ID add_function LPAREN params . RPAREN body
=======
    (57) assignation -> var EQUAL . exp
    (85) exp -> . n_exp
    (86) exp -> . n_exp OR push_op exp pop_op
    (87) n_exp -> . l_exp
    (88) n_exp -> . l_exp AND push_op n_exp pop_op
    (89) l_exp -> . a_exp
    (90) l_exp -> . a_exp RELOP push_op a_exp pop_op
    (91) a_exp -> . term
    (92) a_exp -> . term PLUS push_op a_exp pop_op
    (93) a_exp -> . term MINUS push_op a_exp pop_op
    (94) term -> . factor
    (95) term -> . factor TIMES push_op term pop_op
    (96) term -> . factor DIVIDE push_op term pop_op
    (97) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (98) factor -> . call
    (99) factor -> . factor_aux
    (65) call -> . ID LPAREN RPAREN
    (66) call -> . ID POINT ID LPAREN RPAREN
    (67) call -> . ID LPAREN call_aux RPAREN
    (68) call -> . ID POINT ID LPAREN call_aux RPAREN
    (100) factor_aux -> . cte
    (101) factor_aux -> . PLUS cte
    (102) factor_aux -> . MINUS cte
    (103) cte -> . var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var
    (58) var -> . ID push_var
    (59) var -> . ID var_aux

    LPAREN          shift and go to state 129
    ID              shift and go to state 142
    PLUS            shift and go to state 137
    MINUS           shift and go to state 138
    CTEI            shift and go to state 145
    CTEF            shift and go to state 146
    CTECHAR         shift and go to state 147

    var                            shift and go to state 144
    exp                            shift and go to state 159
    n_exp                          shift and go to state 133
    l_exp                          shift and go to state 134
    a_exp                          shift and go to state 135
    term                           shift and go to state 136
    factor                         shift and go to state 139
    call                           shift and go to state 140
    factor_aux                     shift and go to state 141
    cte                            shift and go to state 143

state 120

    (58) var -> ID push_var .

    EQUAL           reduce using rule 58 (var -> ID push_var .)
    RPAREN          reduce using rule 58 (var -> ID push_var .)
    TIMES           reduce using rule 58 (var -> ID push_var .)
    DIVIDE          reduce using rule 58 (var -> ID push_var .)
    PLUS            reduce using rule 58 (var -> ID push_var .)
    MINUS           reduce using rule 58 (var -> ID push_var .)
    RELOP           reduce using rule 58 (var -> ID push_var .)
    AND             reduce using rule 58 (var -> ID push_var .)
    OR              reduce using rule 58 (var -> ID push_var .)
    COMMA           reduce using rule 58 (var -> ID push_var .)
    SEMICOLON       reduce using rule 58 (var -> ID push_var .)
    RBRACKET        reduce using rule 58 (var -> ID push_var .)


state 121

    (59) var -> ID var_aux .
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    RPAREN          shift and go to state 158


state 122

    (108) init -> INIT add_init LBRACE dec_vars statutes_aux RBRACE .

<<<<<<< HEAD
    RBRACE          reduce using rule 108 (init -> INIT add_init LBRACE dec_vars statutes_aux RBRACE .)
=======
    ID              shift and go to state 160
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330


state 123

<<<<<<< HEAD
=======
    (62) var_aux -> var_aux_2 .

    EQUAL           reduce using rule 62 (var_aux -> var_aux_2 .)
    RPAREN          reduce using rule 62 (var_aux -> var_aux_2 .)
    TIMES           reduce using rule 62 (var_aux -> var_aux_2 .)
    DIVIDE          reduce using rule 62 (var_aux -> var_aux_2 .)
    PLUS            reduce using rule 62 (var_aux -> var_aux_2 .)
    MINUS           reduce using rule 62 (var_aux -> var_aux_2 .)
    RELOP           reduce using rule 62 (var_aux -> var_aux_2 .)
    AND             reduce using rule 62 (var_aux -> var_aux_2 .)
    OR              reduce using rule 62 (var_aux -> var_aux_2 .)
    COMMA           reduce using rule 62 (var_aux -> var_aux_2 .)
    SEMICOLON       reduce using rule 62 (var_aux -> var_aux_2 .)
    RBRACKET        reduce using rule 62 (var_aux -> var_aux_2 .)


state 124

    (63) var_aux_2 -> LBRACKET . exp RBRACKET
    (64) var_aux_2 -> LBRACKET . exp RBRACKET LBRACKET exp RBRACKET
    (85) exp -> . n_exp
    (86) exp -> . n_exp OR push_op exp pop_op
    (87) n_exp -> . l_exp
    (88) n_exp -> . l_exp AND push_op n_exp pop_op
    (89) l_exp -> . a_exp
    (90) l_exp -> . a_exp RELOP push_op a_exp pop_op
    (91) a_exp -> . term
    (92) a_exp -> . term PLUS push_op a_exp pop_op
    (93) a_exp -> . term MINUS push_op a_exp pop_op
    (94) term -> . factor
    (95) term -> . factor TIMES push_op term pop_op
    (96) term -> . factor DIVIDE push_op term pop_op
    (97) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (98) factor -> . call
    (99) factor -> . factor_aux
    (65) call -> . ID LPAREN RPAREN
    (66) call -> . ID POINT ID LPAREN RPAREN
    (67) call -> . ID LPAREN call_aux RPAREN
    (68) call -> . ID POINT ID LPAREN call_aux RPAREN
    (100) factor_aux -> . cte
    (101) factor_aux -> . PLUS cte
    (102) factor_aux -> . MINUS cte
    (103) cte -> . var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var
    (58) var -> . ID push_var
    (59) var -> . ID var_aux

    LPAREN          shift and go to state 129
    ID              shift and go to state 142
    PLUS            shift and go to state 137
    MINUS           shift and go to state 138
    CTEI            shift and go to state 145
    CTEF            shift and go to state 146
    CTECHAR         shift and go to state 147

    exp                            shift and go to state 161
    n_exp                          shift and go to state 133
    l_exp                          shift and go to state 134
    a_exp                          shift and go to state 135
    term                           shift and go to state 136
    factor                         shift and go to state 139
    call                           shift and go to state 140
    factor_aux                     shift and go to state 141
    cte                            shift and go to state 143
    var                            shift and go to state 144

state 125

>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330
    (49) statutes -> CALL call SEMICOLON .

    CALL            reduce using rule 49 (statutes -> CALL call SEMICOLON .)
    ID              reduce using rule 49 (statutes -> CALL call SEMICOLON .)
    READ            reduce using rule 49 (statutes -> CALL call SEMICOLON .)
    WRITE           reduce using rule 49 (statutes -> CALL call SEMICOLON .)
    IF              reduce using rule 49 (statutes -> CALL call SEMICOLON .)
    WHILE           reduce using rule 49 (statutes -> CALL call SEMICOLON .)
    FROM            reduce using rule 49 (statutes -> CALL call SEMICOLON .)
    RBRACE          reduce using rule 49 (statutes -> CALL call SEMICOLON .)
    RETURN          reduce using rule 49 (statutes -> CALL call SEMICOLON .)


<<<<<<< HEAD
state 123

    (64) call -> ID LPAREN . RPAREN
    (66) call -> ID LPAREN . call_aux RPAREN
    (68) call_aux -> . exp
    (69) call_aux -> . exp COMMA call_aux
    (84) exp -> . n_exp pop_op
    (85) exp -> . n_exp pop_op OR push_op exp
    (86) n_exp -> . l_exp pop_op
    (87) n_exp -> . l_exp pop_op AND push_op n_exp
    (88) l_exp -> . a_exp pop_op
    (89) l_exp -> . a_exp pop_op RELOP push_op a_exp
    (90) a_exp -> . term pop_op
    (91) a_exp -> . term pop_op PLUS push_op a_exp
    (92) a_exp -> . term pop_op MINUS push_op a_exp
    (93) term -> . factor pop_op
    (94) term -> . factor pop_op TIMES push_op term
    (95) term -> . factor pop_op DIVIDE push_op term
    (96) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (97) factor -> . call
    (98) factor -> . factor_aux
    (64) call -> . ID LPAREN RPAREN
    (65) call -> . ID POINT ID LPAREN RPAREN
    (66) call -> . ID LPAREN call_aux RPAREN
    (67) call -> . ID POINT ID LPAREN call_aux RPAREN
    (99) factor_aux -> . cte
    (100) factor_aux -> . PLUS cte
    (101) factor_aux -> . MINUS cte
    (102) cte -> . ID push_var
    (103) cte -> . ID var_aux push_var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var

    RPAREN          shift and go to state 159
    LPAREN          shift and go to state 134
    ID              shift and go to state 125
    PLUS            shift and go to state 131
    MINUS           shift and go to state 132
    CTEI            shift and go to state 138
    CTEF            shift and go to state 139
    CTECHAR         shift and go to state 140

    call_aux                       shift and go to state 160
    exp                            shift and go to state 161
    n_exp                          shift and go to state 127
    l_exp                          shift and go to state 128
    a_exp                          shift and go to state 129
    term                           shift and go to state 130
    factor                         shift and go to state 133
    call                           shift and go to state 135
    factor_aux                     shift and go to state 136
    cte                            shift and go to state 137

state 124

    (65) call -> ID POINT . ID LPAREN RPAREN
    (67) call -> ID POINT . ID LPAREN call_aux RPAREN

    ID              shift and go to state 162


state 125

    (64) call -> ID . LPAREN RPAREN
    (65) call -> ID . POINT ID LPAREN RPAREN
    (66) call -> ID . LPAREN call_aux RPAREN
    (67) call -> ID . POINT ID LPAREN call_aux RPAREN
    (102) cte -> ID . push_var
    (103) cte -> ID . var_aux push_var
    (119) push_var -> .
    (59) var_aux -> . POINT ID
    (60) var_aux -> . POINT ID var_aux_2
    (61) var_aux -> . var_aux_2
    (62) var_aux_2 -> . LBRACKET exp RBRACKET
    (63) var_aux_2 -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET

    LPAREN          shift and go to state 123
    POINT           shift and go to state 163
    TIMES           reduce using rule 119 (push_var -> .)
    DIVIDE          reduce using rule 119 (push_var -> .)
    PLUS            reduce using rule 119 (push_var -> .)
    MINUS           reduce using rule 119 (push_var -> .)
    RELOP           reduce using rule 119 (push_var -> .)
    AND             reduce using rule 119 (push_var -> .)
    OR              reduce using rule 119 (push_var -> .)
    SEMICOLON       reduce using rule 119 (push_var -> .)
    RPAREN          reduce using rule 119 (push_var -> .)
    RBRACKET        reduce using rule 119 (push_var -> .)
    COMMA           reduce using rule 119 (push_var -> .)
    LBRACKET        shift and go to state 105

    push_var                       shift and go to state 164
    var_aux                        shift and go to state 165
    var_aux_2                      shift and go to state 104
=======
state 126

    (65) call -> ID LPAREN . RPAREN
    (67) call -> ID LPAREN . call_aux RPAREN
    (69) call_aux -> . exp
    (70) call_aux -> . exp COMMA call_aux
    (85) exp -> . n_exp
    (86) exp -> . n_exp OR push_op exp pop_op
    (87) n_exp -> . l_exp
    (88) n_exp -> . l_exp AND push_op n_exp pop_op
    (89) l_exp -> . a_exp
    (90) l_exp -> . a_exp RELOP push_op a_exp pop_op
    (91) a_exp -> . term
    (92) a_exp -> . term PLUS push_op a_exp pop_op
    (93) a_exp -> . term MINUS push_op a_exp pop_op
    (94) term -> . factor
    (95) term -> . factor TIMES push_op term pop_op
    (96) term -> . factor DIVIDE push_op term pop_op
    (97) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (98) factor -> . call
    (99) factor -> . factor_aux
    (65) call -> . ID LPAREN RPAREN
    (66) call -> . ID POINT ID LPAREN RPAREN
    (67) call -> . ID LPAREN call_aux RPAREN
    (68) call -> . ID POINT ID LPAREN call_aux RPAREN
    (100) factor_aux -> . cte
    (101) factor_aux -> . PLUS cte
    (102) factor_aux -> . MINUS cte
    (103) cte -> . var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var
    (58) var -> . ID push_var
    (59) var -> . ID var_aux

    RPAREN          shift and go to state 162
    LPAREN          shift and go to state 129
    ID              shift and go to state 142
    PLUS            shift and go to state 137
    MINUS           shift and go to state 138
    CTEI            shift and go to state 145
    CTEF            shift and go to state 146
    CTECHAR         shift and go to state 147

    call_aux                       shift and go to state 163
    exp                            shift and go to state 164
    n_exp                          shift and go to state 133
    l_exp                          shift and go to state 134
    a_exp                          shift and go to state 135
    term                           shift and go to state 136
    factor                         shift and go to state 139
    call                           shift and go to state 140
    factor_aux                     shift and go to state 141
    cte                            shift and go to state 143
    var                            shift and go to state 144
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

state 127

    (57) assignation -> ID EQUAL exp .

<<<<<<< HEAD
    SEMICOLON       reduce using rule 57 (assignation -> ID EQUAL exp .)
    RPAREN          reduce using rule 57 (assignation -> ID EQUAL exp .)
=======
    ID              shift and go to state 165
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330


state 128

    (84) exp -> n_exp . pop_op
    (85) exp -> n_exp . pop_op OR push_op exp
    (121) pop_op -> .

<<<<<<< HEAD
    OR              reduce using rule 121 (pop_op -> .)
    SEMICOLON       reduce using rule 121 (pop_op -> .)
    RPAREN          reduce using rule 121 (pop_op -> .)
    RBRACKET        reduce using rule 121 (pop_op -> .)
    COMMA           reduce using rule 121 (pop_op -> .)
=======
    RPAREN          shift and go to state 166
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    pop_op                         shift and go to state 166

state 129

<<<<<<< HEAD
    (86) n_exp -> l_exp . pop_op
    (87) n_exp -> l_exp . pop_op AND push_op n_exp
    (121) pop_op -> .

    AND             reduce using rule 121 (pop_op -> .)
    OR              reduce using rule 121 (pop_op -> .)
    SEMICOLON       reduce using rule 121 (pop_op -> .)
    RPAREN          reduce using rule 121 (pop_op -> .)
    RBRACKET        reduce using rule 121 (pop_op -> .)
    COMMA           reduce using rule 121 (pop_op -> .)

    pop_op                         shift and go to state 167
=======
    (97) factor -> LPAREN . push_paren exp RPAREN pop_paren
    (122) push_paren -> .
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    LPAREN          reduce using rule 122 (push_paren -> .)
    ID              reduce using rule 122 (push_paren -> .)
    PLUS            reduce using rule 122 (push_paren -> .)
    MINUS           reduce using rule 122 (push_paren -> .)
    CTEI            reduce using rule 122 (push_paren -> .)
    CTEF            reduce using rule 122 (push_paren -> .)
    CTECHAR         reduce using rule 122 (push_paren -> .)

    push_paren                     shift and go to state 167

state 130

    (88) l_exp -> a_exp . pop_op
    (89) l_exp -> a_exp . pop_op RELOP push_op a_exp
    (121) pop_op -> .

<<<<<<< HEAD
    RELOP           reduce using rule 121 (pop_op -> .)
    AND             reduce using rule 121 (pop_op -> .)
    OR              reduce using rule 121 (pop_op -> .)
    SEMICOLON       reduce using rule 121 (pop_op -> .)
    RPAREN          reduce using rule 121 (pop_op -> .)
    RBRACKET        reduce using rule 121 (pop_op -> .)
    COMMA           reduce using rule 121 (pop_op -> .)
=======
    RPAREN          shift and go to state 168
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    pop_op                         shift and go to state 168

state 131

    (90) a_exp -> term . pop_op
    (91) a_exp -> term . pop_op PLUS push_op a_exp
    (92) a_exp -> term . pop_op MINUS push_op a_exp
    (121) pop_op -> .

<<<<<<< HEAD
    PLUS            reduce using rule 121 (pop_op -> .)
    MINUS           reduce using rule 121 (pop_op -> .)
    RELOP           reduce using rule 121 (pop_op -> .)
    AND             reduce using rule 121 (pop_op -> .)
    OR              reduce using rule 121 (pop_op -> .)
    SEMICOLON       reduce using rule 121 (pop_op -> .)
    RPAREN          reduce using rule 121 (pop_op -> .)
    RBRACKET        reduce using rule 121 (pop_op -> .)
    COMMA           reduce using rule 121 (pop_op -> .)
=======
    RPAREN          reduce using rule 79 (write_aux -> exp .)
    COMMA           shift and go to state 169
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    pop_op                         shift and go to state 169

state 132

    (100) factor_aux -> PLUS . cte
    (102) cte -> . ID push_var
    (103) cte -> . ID var_aux push_var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var

<<<<<<< HEAD
    ID              shift and go to state 171
    CTEI            shift and go to state 138
    CTEF            shift and go to state 139
    CTECHAR         shift and go to state 140
=======
    RPAREN          reduce using rule 81 (write_aux -> CTESTRING .)
    COMMA           shift and go to state 170
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    cte                            shift and go to state 170

state 133

<<<<<<< HEAD
    (101) factor_aux -> MINUS . cte
    (102) cte -> . ID push_var
    (103) cte -> . ID var_aux push_var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var

    ID              shift and go to state 171
    CTEI            shift and go to state 138
    CTEF            shift and go to state 139
    CTECHAR         shift and go to state 140
=======
    (85) exp -> n_exp .
    (86) exp -> n_exp . OR push_op exp pop_op

    COMMA           reduce using rule 85 (exp -> n_exp .)
    RPAREN          reduce using rule 85 (exp -> n_exp .)
    SEMICOLON       reduce using rule 85 (exp -> n_exp .)
    RBRACKET        reduce using rule 85 (exp -> n_exp .)
    OR              shift and go to state 171
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    cte                            shift and go to state 172

state 134

<<<<<<< HEAD
    (93) term -> factor . pop_op
    (94) term -> factor . pop_op TIMES push_op term
    (95) term -> factor . pop_op DIVIDE push_op term
    (121) pop_op -> .

    TIMES           reduce using rule 121 (pop_op -> .)
    DIVIDE          reduce using rule 121 (pop_op -> .)
    PLUS            reduce using rule 121 (pop_op -> .)
    MINUS           reduce using rule 121 (pop_op -> .)
    RELOP           reduce using rule 121 (pop_op -> .)
    AND             reduce using rule 121 (pop_op -> .)
    OR              reduce using rule 121 (pop_op -> .)
    SEMICOLON       reduce using rule 121 (pop_op -> .)
    RPAREN          reduce using rule 121 (pop_op -> .)
    RBRACKET        reduce using rule 121 (pop_op -> .)
    COMMA           reduce using rule 121 (pop_op -> .)

    pop_op                         shift and go to state 173
=======
    (87) n_exp -> l_exp .
    (88) n_exp -> l_exp . AND push_op n_exp pop_op

    OR              reduce using rule 87 (n_exp -> l_exp .)
    COMMA           reduce using rule 87 (n_exp -> l_exp .)
    RPAREN          reduce using rule 87 (n_exp -> l_exp .)
    SEMICOLON       reduce using rule 87 (n_exp -> l_exp .)
    RBRACKET        reduce using rule 87 (n_exp -> l_exp .)
    AND             shift and go to state 172

>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

state 135

<<<<<<< HEAD
    (96) factor -> LPAREN . push_paren exp RPAREN pop_paren
    (122) push_paren -> .

    LPAREN          reduce using rule 122 (push_paren -> .)
    ID              reduce using rule 122 (push_paren -> .)
    PLUS            reduce using rule 122 (push_paren -> .)
    MINUS           reduce using rule 122 (push_paren -> .)
    CTEI            reduce using rule 122 (push_paren -> .)
    CTEF            reduce using rule 122 (push_paren -> .)
    CTECHAR         reduce using rule 122 (push_paren -> .)
=======
    (89) l_exp -> a_exp .
    (90) l_exp -> a_exp . RELOP push_op a_exp pop_op

    AND             reduce using rule 89 (l_exp -> a_exp .)
    OR              reduce using rule 89 (l_exp -> a_exp .)
    COMMA           reduce using rule 89 (l_exp -> a_exp .)
    RPAREN          reduce using rule 89 (l_exp -> a_exp .)
    SEMICOLON       reduce using rule 89 (l_exp -> a_exp .)
    RBRACKET        reduce using rule 89 (l_exp -> a_exp .)
    RELOP           shift and go to state 173
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    push_paren                     shift and go to state 174

state 136

<<<<<<< HEAD
    (97) factor -> call .

    TIMES           reduce using rule 97 (factor -> call .)
    DIVIDE          reduce using rule 97 (factor -> call .)
    PLUS            reduce using rule 97 (factor -> call .)
    MINUS           reduce using rule 97 (factor -> call .)
    RELOP           reduce using rule 97 (factor -> call .)
    AND             reduce using rule 97 (factor -> call .)
    OR              reduce using rule 97 (factor -> call .)
    SEMICOLON       reduce using rule 97 (factor -> call .)
    RPAREN          reduce using rule 97 (factor -> call .)
    RBRACKET        reduce using rule 97 (factor -> call .)
    COMMA           reduce using rule 97 (factor -> call .)
=======
    (91) a_exp -> term .
    (92) a_exp -> term . PLUS push_op a_exp pop_op
    (93) a_exp -> term . MINUS push_op a_exp pop_op

    RELOP           reduce using rule 91 (a_exp -> term .)
    AND             reduce using rule 91 (a_exp -> term .)
    OR              reduce using rule 91 (a_exp -> term .)
    COMMA           reduce using rule 91 (a_exp -> term .)
    RPAREN          reduce using rule 91 (a_exp -> term .)
    SEMICOLON       reduce using rule 91 (a_exp -> term .)
    RBRACKET        reduce using rule 91 (a_exp -> term .)
    PLUS            shift and go to state 174
    MINUS           shift and go to state 175
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330


state 137

<<<<<<< HEAD
    (98) factor -> factor_aux .

    TIMES           reduce using rule 98 (factor -> factor_aux .)
    DIVIDE          reduce using rule 98 (factor -> factor_aux .)
    PLUS            reduce using rule 98 (factor -> factor_aux .)
    MINUS           reduce using rule 98 (factor -> factor_aux .)
    RELOP           reduce using rule 98 (factor -> factor_aux .)
    AND             reduce using rule 98 (factor -> factor_aux .)
    OR              reduce using rule 98 (factor -> factor_aux .)
    SEMICOLON       reduce using rule 98 (factor -> factor_aux .)
    RPAREN          reduce using rule 98 (factor -> factor_aux .)
    RBRACKET        reduce using rule 98 (factor -> factor_aux .)
    COMMA           reduce using rule 98 (factor -> factor_aux .)

=======
    (101) factor_aux -> PLUS . cte
    (103) cte -> . var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var
    (58) var -> . ID push_var
    (59) var -> . ID var_aux

    CTEI            shift and go to state 145
    CTEF            shift and go to state 146
    CTECHAR         shift and go to state 147
    ID              shift and go to state 99

    cte                            shift and go to state 176
    var                            shift and go to state 144
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

state 138

<<<<<<< HEAD
    (99) factor_aux -> cte .

    TIMES           reduce using rule 99 (factor_aux -> cte .)
    DIVIDE          reduce using rule 99 (factor_aux -> cte .)
    PLUS            reduce using rule 99 (factor_aux -> cte .)
    MINUS           reduce using rule 99 (factor_aux -> cte .)
    RELOP           reduce using rule 99 (factor_aux -> cte .)
    AND             reduce using rule 99 (factor_aux -> cte .)
    OR              reduce using rule 99 (factor_aux -> cte .)
    SEMICOLON       reduce using rule 99 (factor_aux -> cte .)
    RPAREN          reduce using rule 99 (factor_aux -> cte .)
    RBRACKET        reduce using rule 99 (factor_aux -> cte .)
    COMMA           reduce using rule 99 (factor_aux -> cte .)

=======
    (102) factor_aux -> MINUS . cte
    (103) cte -> . var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var
    (58) var -> . ID push_var
    (59) var -> . ID var_aux

    CTEI            shift and go to state 145
    CTEF            shift and go to state 146
    CTECHAR         shift and go to state 147
    ID              shift and go to state 99

    cte                            shift and go to state 177
    var                            shift and go to state 144
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

state 139

<<<<<<< HEAD
    (104) cte -> CTEI . push_var
    (119) push_var -> .
=======
    (94) term -> factor .
    (95) term -> factor . TIMES push_op term pop_op
    (96) term -> factor . DIVIDE push_op term pop_op
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    TIMES           reduce using rule 119 (push_var -> .)
    DIVIDE          reduce using rule 119 (push_var -> .)
    PLUS            reduce using rule 119 (push_var -> .)
    MINUS           reduce using rule 119 (push_var -> .)
    RELOP           reduce using rule 119 (push_var -> .)
    AND             reduce using rule 119 (push_var -> .)
    OR              reduce using rule 119 (push_var -> .)
    SEMICOLON       reduce using rule 119 (push_var -> .)
    RPAREN          reduce using rule 119 (push_var -> .)
    RBRACKET        reduce using rule 119 (push_var -> .)
    COMMA           reduce using rule 119 (push_var -> .)

    push_var                       shift and go to state 175

<<<<<<< HEAD
state 139

    (105) cte -> CTEF . push_var
    (119) push_var -> .

    TIMES           reduce using rule 119 (push_var -> .)
    DIVIDE          reduce using rule 119 (push_var -> .)
    PLUS            reduce using rule 119 (push_var -> .)
    MINUS           reduce using rule 119 (push_var -> .)
    RELOP           reduce using rule 119 (push_var -> .)
    AND             reduce using rule 119 (push_var -> .)
    OR              reduce using rule 119 (push_var -> .)
    SEMICOLON       reduce using rule 119 (push_var -> .)
    RPAREN          reduce using rule 119 (push_var -> .)
    RBRACKET        reduce using rule 119 (push_var -> .)
    COMMA           reduce using rule 119 (push_var -> .)

    push_var                       shift and go to state 176

state 140

    (106) cte -> CTECHAR . push_var
    (119) push_var -> .

    TIMES           reduce using rule 119 (push_var -> .)
    DIVIDE          reduce using rule 119 (push_var -> .)
    PLUS            reduce using rule 119 (push_var -> .)
    MINUS           reduce using rule 119 (push_var -> .)
    RELOP           reduce using rule 119 (push_var -> .)
    AND             reduce using rule 119 (push_var -> .)
    OR              reduce using rule 119 (push_var -> .)
    SEMICOLON       reduce using rule 119 (push_var -> .)
    RPAREN          reduce using rule 119 (push_var -> .)
    RBRACKET        reduce using rule 119 (push_var -> .)
    COMMA           reduce using rule 119 (push_var -> .)
=======
state 140

    (98) factor -> call .

    TIMES           reduce using rule 98 (factor -> call .)
    DIVIDE          reduce using rule 98 (factor -> call .)
    PLUS            reduce using rule 98 (factor -> call .)
    MINUS           reduce using rule 98 (factor -> call .)
    RELOP           reduce using rule 98 (factor -> call .)
    AND             reduce using rule 98 (factor -> call .)
    OR              reduce using rule 98 (factor -> call .)
    COMMA           reduce using rule 98 (factor -> call .)
    RPAREN          reduce using rule 98 (factor -> call .)
    SEMICOLON       reduce using rule 98 (factor -> call .)
    RBRACKET        reduce using rule 98 (factor -> call .)
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    push_var                       shift and go to state 177

state 141

<<<<<<< HEAD
    (58) assignation -> ID var_aux EQUAL . exp
    (84) exp -> . n_exp pop_op
    (85) exp -> . n_exp pop_op OR push_op exp
    (86) n_exp -> . l_exp pop_op
    (87) n_exp -> . l_exp pop_op AND push_op n_exp
    (88) l_exp -> . a_exp pop_op
    (89) l_exp -> . a_exp pop_op RELOP push_op a_exp
    (90) a_exp -> . term pop_op
    (91) a_exp -> . term pop_op PLUS push_op a_exp
    (92) a_exp -> . term pop_op MINUS push_op a_exp
    (93) term -> . factor pop_op
    (94) term -> . factor pop_op TIMES push_op term
    (95) term -> . factor pop_op DIVIDE push_op term
    (96) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (97) factor -> . call
    (98) factor -> . factor_aux
    (64) call -> . ID LPAREN RPAREN
    (65) call -> . ID POINT ID LPAREN RPAREN
    (66) call -> . ID LPAREN call_aux RPAREN
    (67) call -> . ID POINT ID LPAREN call_aux RPAREN
    (99) factor_aux -> . cte
    (100) factor_aux -> . PLUS cte
    (101) factor_aux -> . MINUS cte
    (102) cte -> . ID push_var
    (103) cte -> . ID var_aux push_var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 134
    ID              shift and go to state 125
    PLUS            shift and go to state 131
    MINUS           shift and go to state 132
    CTEI            shift and go to state 138
    CTEF            shift and go to state 139
    CTECHAR         shift and go to state 140

    exp                            shift and go to state 178
    n_exp                          shift and go to state 127
    l_exp                          shift and go to state 128
    a_exp                          shift and go to state 129
    term                           shift and go to state 130
    factor                         shift and go to state 133
    call                           shift and go to state 135
    factor_aux                     shift and go to state 136
    cte                            shift and go to state 137

state 142

    (59) var_aux -> POINT ID .
    (60) var_aux -> POINT ID . var_aux_2
    (62) var_aux_2 -> . LBRACKET exp RBRACKET
    (63) var_aux_2 -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET

    EQUAL           reduce using rule 59 (var_aux -> POINT ID .)
    TIMES           reduce using rule 59 (var_aux -> POINT ID .)
    DIVIDE          reduce using rule 59 (var_aux -> POINT ID .)
    PLUS            reduce using rule 59 (var_aux -> POINT ID .)
    MINUS           reduce using rule 59 (var_aux -> POINT ID .)
    RELOP           reduce using rule 59 (var_aux -> POINT ID .)
    AND             reduce using rule 59 (var_aux -> POINT ID .)
    OR              reduce using rule 59 (var_aux -> POINT ID .)
    SEMICOLON       reduce using rule 59 (var_aux -> POINT ID .)
    RPAREN          reduce using rule 59 (var_aux -> POINT ID .)
    RBRACKET        reduce using rule 59 (var_aux -> POINT ID .)
    COMMA           reduce using rule 59 (var_aux -> POINT ID .)
    LBRACKET        shift and go to state 105

    var_aux_2                      shift and go to state 179

state 143

    (62) var_aux_2 -> LBRACKET exp . RBRACKET
    (63) var_aux_2 -> LBRACKET exp . RBRACKET LBRACKET exp RBRACKET

    RBRACKET        shift and go to state 180
=======
    (99) factor -> factor_aux .

    TIMES           reduce using rule 99 (factor -> factor_aux .)
    DIVIDE          reduce using rule 99 (factor -> factor_aux .)
    PLUS            reduce using rule 99 (factor -> factor_aux .)
    MINUS           reduce using rule 99 (factor -> factor_aux .)
    RELOP           reduce using rule 99 (factor -> factor_aux .)
    AND             reduce using rule 99 (factor -> factor_aux .)
    OR              reduce using rule 99 (factor -> factor_aux .)
    COMMA           reduce using rule 99 (factor -> factor_aux .)
    RPAREN          reduce using rule 99 (factor -> factor_aux .)
    SEMICOLON       reduce using rule 99 (factor -> factor_aux .)
    RBRACKET        reduce using rule 99 (factor -> factor_aux .)


state 142

    (65) call -> ID . LPAREN RPAREN
    (66) call -> ID . POINT ID LPAREN RPAREN
    (67) call -> ID . LPAREN call_aux RPAREN
    (68) call -> ID . POINT ID LPAREN call_aux RPAREN
    (58) var -> ID . push_var
    (59) var -> ID . var_aux
    (119) push_var -> .
    (60) var_aux -> . POINT ID
    (61) var_aux -> . POINT ID var_aux_2
    (62) var_aux -> . var_aux_2
    (63) var_aux_2 -> . LBRACKET exp RBRACKET
    (64) var_aux_2 -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET

    LPAREN          shift and go to state 126
    POINT           shift and go to state 180
    TIMES           reduce using rule 119 (push_var -> .)
    DIVIDE          reduce using rule 119 (push_var -> .)
    PLUS            reduce using rule 119 (push_var -> .)
    MINUS           reduce using rule 119 (push_var -> .)
    RELOP           reduce using rule 119 (push_var -> .)
    AND             reduce using rule 119 (push_var -> .)
    OR              reduce using rule 119 (push_var -> .)
    COMMA           reduce using rule 119 (push_var -> .)
    RPAREN          reduce using rule 119 (push_var -> .)
    SEMICOLON       reduce using rule 119 (push_var -> .)
    RBRACKET        reduce using rule 119 (push_var -> .)
    LBRACKET        shift and go to state 124

    push_var                       shift and go to state 120
    var_aux                        shift and go to state 121
    var_aux_2                      shift and go to state 123

state 143

    (100) factor_aux -> cte .

    TIMES           reduce using rule 100 (factor_aux -> cte .)
    DIVIDE          reduce using rule 100 (factor_aux -> cte .)
    PLUS            reduce using rule 100 (factor_aux -> cte .)
    MINUS           reduce using rule 100 (factor_aux -> cte .)
    RELOP           reduce using rule 100 (factor_aux -> cte .)
    AND             reduce using rule 100 (factor_aux -> cte .)
    OR              reduce using rule 100 (factor_aux -> cte .)
    COMMA           reduce using rule 100 (factor_aux -> cte .)
    RPAREN          reduce using rule 100 (factor_aux -> cte .)
    SEMICOLON       reduce using rule 100 (factor_aux -> cte .)
    RBRACKET        reduce using rule 100 (factor_aux -> cte .)
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330


state 144

<<<<<<< HEAD
    (76) read -> READ LPAREN ID . RPAREN SEMICOLON

    RPAREN          shift and go to state 181
=======
    (103) cte -> var .

    TIMES           reduce using rule 103 (cte -> var .)
    DIVIDE          reduce using rule 103 (cte -> var .)
    PLUS            reduce using rule 103 (cte -> var .)
    MINUS           reduce using rule 103 (cte -> var .)
    RELOP           reduce using rule 103 (cte -> var .)
    AND             reduce using rule 103 (cte -> var .)
    OR              reduce using rule 103 (cte -> var .)
    COMMA           reduce using rule 103 (cte -> var .)
    RPAREN          reduce using rule 103 (cte -> var .)
    SEMICOLON       reduce using rule 103 (cte -> var .)
    RBRACKET        reduce using rule 103 (cte -> var .)
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330


state 145

<<<<<<< HEAD
    (77) write -> WRITE LPAREN write_aux . RPAREN SEMICOLON

    RPAREN          shift and go to state 182
=======
    (104) cte -> CTEI . push_var
    (119) push_var -> .

    TIMES           reduce using rule 119 (push_var -> .)
    DIVIDE          reduce using rule 119 (push_var -> .)
    PLUS            reduce using rule 119 (push_var -> .)
    MINUS           reduce using rule 119 (push_var -> .)
    RELOP           reduce using rule 119 (push_var -> .)
    AND             reduce using rule 119 (push_var -> .)
    OR              reduce using rule 119 (push_var -> .)
    COMMA           reduce using rule 119 (push_var -> .)
    RPAREN          reduce using rule 119 (push_var -> .)
    SEMICOLON       reduce using rule 119 (push_var -> .)
    RBRACKET        reduce using rule 119 (push_var -> .)
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    push_var                       shift and go to state 181

state 146

<<<<<<< HEAD
    (78) write_aux -> exp .
    (79) write_aux -> exp . COMMA write_aux

    RPAREN          reduce using rule 78 (write_aux -> exp .)
    COMMA           shift and go to state 183
=======
    (105) cte -> CTEF . push_var
    (119) push_var -> .

    TIMES           reduce using rule 119 (push_var -> .)
    DIVIDE          reduce using rule 119 (push_var -> .)
    PLUS            reduce using rule 119 (push_var -> .)
    MINUS           reduce using rule 119 (push_var -> .)
    RELOP           reduce using rule 119 (push_var -> .)
    AND             reduce using rule 119 (push_var -> .)
    OR              reduce using rule 119 (push_var -> .)
    COMMA           reduce using rule 119 (push_var -> .)
    RPAREN          reduce using rule 119 (push_var -> .)
    SEMICOLON       reduce using rule 119 (push_var -> .)
    RBRACKET        reduce using rule 119 (push_var -> .)
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    push_var                       shift and go to state 182

state 147

<<<<<<< HEAD
    (80) write_aux -> CTESTRING .
    (81) write_aux -> CTESTRING . COMMA write_aux

    RPAREN          reduce using rule 80 (write_aux -> CTESTRING .)
    COMMA           shift and go to state 184
=======
    (106) cte -> CTECHAR . push_var
    (119) push_var -> .

    TIMES           reduce using rule 119 (push_var -> .)
    DIVIDE          reduce using rule 119 (push_var -> .)
    PLUS            reduce using rule 119 (push_var -> .)
    MINUS           reduce using rule 119 (push_var -> .)
    RELOP           reduce using rule 119 (push_var -> .)
    AND             reduce using rule 119 (push_var -> .)
    OR              reduce using rule 119 (push_var -> .)
    COMMA           reduce using rule 119 (push_var -> .)
    RPAREN          reduce using rule 119 (push_var -> .)
    SEMICOLON       reduce using rule 119 (push_var -> .)
    RBRACKET        reduce using rule 119 (push_var -> .)

    push_var                       shift and go to state 183

state 148

    (72) condition_aux -> LPAREN exp . RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3
    (74) condition_aux_2 -> LPAREN exp . RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux

    RPAREN          shift and go to state 184
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330


state 149

    (71) condition_aux -> LPAREN exp . RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3
    (73) condition_aux_2 -> LPAREN exp . RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux

    RPAREN          shift and go to state 185


state 150

    (82) while -> WHILE LPAREN exp . RPAREN DO LBRACE statutes_aux RBRACE

    RPAREN          shift and go to state 186


state 151

    (83) for -> FROM LPAREN assignation . RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

<<<<<<< HEAD
    RPAREN          shift and go to state 187
=======
    CTEI            shift and go to state 187
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330


state 152

    (21) vars_simple_type_aux -> LBRACKET CTEI RBRACKET LBRACKET . CTEI RBRACKET add_matrix_variable

    CTEI            shift and go to state 188


state 152

    (20) vars_simple_type_aux -> LBRACKET CTEI RBRACKET add_array_variable .

    COMMA           reduce using rule 20 (vars_simple_type_aux -> LBRACKET CTEI RBRACKET add_array_variable .)
    SEMICOLON       reduce using rule 20 (vars_simple_type_aux -> LBRACKET CTEI RBRACKET add_array_variable .)


state 153

    (34) functions_aux -> VOID ID add_function LPAREN params RPAREN . body
    (44) body -> . LBRACE dec_vars statutes_aux RBRACE
    (45) body -> . LBRACE statutes_aux RBRACE
    (46) body -> . LBRACE statutes_aux RETURN ID SEMICOLON RBRACE
    (47) body -> . LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE

    LBRACE          shift and go to state 155

<<<<<<< HEAD
    body                           shift and go to state 189
=======
    body                           shift and go to state 188
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

state 154

    (35) functions_aux -> VOID ID add_function LPAREN RPAREN body .

    FUNCT           reduce using rule 35 (functions_aux -> VOID ID add_function LPAREN RPAREN body .)
    RBRACE          reduce using rule 35 (functions_aux -> VOID ID add_function LPAREN RPAREN body .)
    INIT            reduce using rule 35 (functions_aux -> VOID ID add_function LPAREN RPAREN body .)


state 155

    (44) body -> LBRACE . dec_vars statutes_aux RBRACE
    (45) body -> LBRACE . statutes_aux RBRACE
    (46) body -> LBRACE . statutes_aux RETURN ID SEMICOLON RBRACE
    (47) body -> LBRACE . dec_vars statutes_aux RETURN ID SEMICOLON RBRACE
    (9) dec_vars -> . VAR dec_vars_aux
    (55) statutes_aux -> . statutes
    (56) statutes_aux -> . statutes statutes_aux
    (48) statutes -> . assignation SEMICOLON
    (49) statutes -> . CALL call SEMICOLON
    (50) statutes -> . read
    (51) statutes -> . write
    (52) statutes -> . condition
    (53) statutes -> . while
    (54) statutes -> . for
    (57) assignation -> . ID EQUAL exp
    (58) assignation -> . ID var_aux EQUAL exp
    (76) read -> . READ LPAREN ID RPAREN SEMICOLON
    (77) write -> . WRITE LPAREN write_aux RPAREN SEMICOLON
    (70) condition -> . IF condition_aux
    (82) while -> . WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (83) for -> . FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    VAR             shift and go to state 23
    CALL            shift and go to state 74
<<<<<<< HEAD
    ID              shift and go to state 80
    READ            shift and go to state 81
    WRITE           shift and go to state 82
    IF              shift and go to state 83
    WHILE           shift and go to state 84
    FROM            shift and go to state 85

    dec_vars                       shift and go to state 190
    statutes_aux                   shift and go to state 191
=======
    READ            shift and go to state 80
    WRITE           shift and go to state 81
    IF              shift and go to state 82
    WHILE           shift and go to state 83
    FROM            shift and go to state 84

    dec_vars                       shift and go to state 189
    statutes_aux                   shift and go to state 190
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330
    statutes                       shift and go to state 72
    assignation                    shift and go to state 73
    read                           shift and go to state 75
    write                          shift and go to state 76
    condition                      shift and go to state 77
    while                          shift and go to state 78
    for                            shift and go to state 79

state 156

    (38) params -> simple_type ID . add_variable
    (39) params -> simple_type ID . add_variable COMMA params
    (40) params -> simple_type ID . params_aux
    (41) params -> simple_type ID . params_aux COMMA params
    (110) add_variable -> .
    (42) params_aux -> . LBRACKET RBRACKET add_array_var_params
    (43) params_aux -> . LBRACKET RBRACKET LBRACKET RBRACKET add_matrix_var_params

    COMMA           reduce using rule 110 (add_variable -> .)
    RPAREN          reduce using rule 110 (add_variable -> .)
<<<<<<< HEAD
    LBRACKET        shift and go to state 194

    add_variable                   shift and go to state 192
    params_aux                     shift and go to state 193
=======
    LBRACKET        shift and go to state 193

    add_variable                   shift and go to state 191
    params_aux                     shift and go to state 192
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

state 157

    (36) functions_aux -> simple_type ID add_function LPAREN RPAREN body .

    FUNCT           reduce using rule 36 (functions_aux -> simple_type ID add_function LPAREN RPAREN body .)
    RBRACE          reduce using rule 36 (functions_aux -> simple_type ID add_function LPAREN RPAREN body .)
    INIT            reduce using rule 36 (functions_aux -> simple_type ID add_function LPAREN RPAREN body .)


state 158

    (37) functions_aux -> simple_type ID add_function LPAREN params RPAREN . body
    (44) body -> . LBRACE dec_vars statutes_aux RBRACE
    (45) body -> . LBRACE statutes_aux RBRACE
    (46) body -> . LBRACE statutes_aux RETURN ID SEMICOLON RBRACE
    (47) body -> . LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE

    LBRACE          shift and go to state 155
<<<<<<< HEAD
=======

    body                           shift and go to state 194

state 159

    (57) assignation -> var EQUAL exp .

    SEMICOLON       reduce using rule 57 (assignation -> var EQUAL exp .)
    RPAREN          reduce using rule 57 (assignation -> var EQUAL exp .)
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    body                           shift and go to state 195

state 160

    (64) call -> ID LPAREN RPAREN .

<<<<<<< HEAD
    SEMICOLON       reduce using rule 64 (call -> ID LPAREN RPAREN .)
    TIMES           reduce using rule 64 (call -> ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 64 (call -> ID LPAREN RPAREN .)
    PLUS            reduce using rule 64 (call -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 64 (call -> ID LPAREN RPAREN .)
    RELOP           reduce using rule 64 (call -> ID LPAREN RPAREN .)
    AND             reduce using rule 64 (call -> ID LPAREN RPAREN .)
    OR              reduce using rule 64 (call -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 64 (call -> ID LPAREN RPAREN .)
    RBRACKET        reduce using rule 64 (call -> ID LPAREN RPAREN .)
    COMMA           reduce using rule 64 (call -> ID LPAREN RPAREN .)

=======
    EQUAL           reduce using rule 60 (var_aux -> POINT ID .)
    RPAREN          reduce using rule 60 (var_aux -> POINT ID .)
    TIMES           reduce using rule 60 (var_aux -> POINT ID .)
    DIVIDE          reduce using rule 60 (var_aux -> POINT ID .)
    PLUS            reduce using rule 60 (var_aux -> POINT ID .)
    MINUS           reduce using rule 60 (var_aux -> POINT ID .)
    RELOP           reduce using rule 60 (var_aux -> POINT ID .)
    AND             reduce using rule 60 (var_aux -> POINT ID .)
    OR              reduce using rule 60 (var_aux -> POINT ID .)
    COMMA           reduce using rule 60 (var_aux -> POINT ID .)
    SEMICOLON       reduce using rule 60 (var_aux -> POINT ID .)
    RBRACKET        reduce using rule 60 (var_aux -> POINT ID .)
    LBRACKET        shift and go to state 124

    var_aux_2                      shift and go to state 195
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

state 161

    (66) call -> ID LPAREN call_aux . RPAREN

<<<<<<< HEAD
    RPAREN          shift and go to state 196
=======
    RBRACKET        shift and go to state 196
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330


state 162

    (68) call_aux -> exp .
    (69) call_aux -> exp . COMMA call_aux

    RPAREN          reduce using rule 68 (call_aux -> exp .)
    COMMA           shift and go to state 197


state 163

    (65) call -> ID POINT ID . LPAREN RPAREN
    (67) call -> ID POINT ID . LPAREN call_aux RPAREN

<<<<<<< HEAD
    LPAREN          shift and go to state 198
=======
    RPAREN          shift and go to state 197
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330


state 164

    (65) call -> ID POINT . ID LPAREN RPAREN
    (67) call -> ID POINT . ID LPAREN call_aux RPAREN
    (59) var_aux -> POINT . ID
    (60) var_aux -> POINT . ID var_aux_2

<<<<<<< HEAD
    ID              shift and go to state 199
=======
    RPAREN          reduce using rule 69 (call_aux -> exp .)
    COMMA           shift and go to state 198
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330


state 165

    (102) cte -> ID push_var .

<<<<<<< HEAD
    TIMES           reduce using rule 102 (cte -> ID push_var .)
    DIVIDE          reduce using rule 102 (cte -> ID push_var .)
    PLUS            reduce using rule 102 (cte -> ID push_var .)
    MINUS           reduce using rule 102 (cte -> ID push_var .)
    RELOP           reduce using rule 102 (cte -> ID push_var .)
    AND             reduce using rule 102 (cte -> ID push_var .)
    OR              reduce using rule 102 (cte -> ID push_var .)
    SEMICOLON       reduce using rule 102 (cte -> ID push_var .)
    RPAREN          reduce using rule 102 (cte -> ID push_var .)
    RBRACKET        reduce using rule 102 (cte -> ID push_var .)
    COMMA           reduce using rule 102 (cte -> ID push_var .)


state 165

    (103) cte -> ID var_aux . push_var
    (119) push_var -> .

    TIMES           reduce using rule 119 (push_var -> .)
    DIVIDE          reduce using rule 119 (push_var -> .)
    PLUS            reduce using rule 119 (push_var -> .)
    MINUS           reduce using rule 119 (push_var -> .)
    RELOP           reduce using rule 119 (push_var -> .)
    AND             reduce using rule 119 (push_var -> .)
    OR              reduce using rule 119 (push_var -> .)
    SEMICOLON       reduce using rule 119 (push_var -> .)
    RPAREN          reduce using rule 119 (push_var -> .)
    RBRACKET        reduce using rule 119 (push_var -> .)
    COMMA           reduce using rule 119 (push_var -> .)
=======
    LPAREN          shift and go to state 199
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    push_var                       shift and go to state 200

state 166

<<<<<<< HEAD
    (84) exp -> n_exp pop_op .
    (85) exp -> n_exp pop_op . OR push_op exp

    SEMICOLON       reduce using rule 84 (exp -> n_exp pop_op .)
    RPAREN          reduce using rule 84 (exp -> n_exp pop_op .)
    RBRACKET        reduce using rule 84 (exp -> n_exp pop_op .)
    COMMA           reduce using rule 84 (exp -> n_exp pop_op .)
    OR              shift and go to state 201
=======
    (77) read -> READ LPAREN var RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 200
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330


state 167

<<<<<<< HEAD
    (86) n_exp -> l_exp pop_op .
    (87) n_exp -> l_exp pop_op . AND push_op n_exp

    OR              reduce using rule 86 (n_exp -> l_exp pop_op .)
    SEMICOLON       reduce using rule 86 (n_exp -> l_exp pop_op .)
    RPAREN          reduce using rule 86 (n_exp -> l_exp pop_op .)
    RBRACKET        reduce using rule 86 (n_exp -> l_exp pop_op .)
    COMMA           reduce using rule 86 (n_exp -> l_exp pop_op .)
    AND             shift and go to state 202


state 168

    (88) l_exp -> a_exp pop_op .
    (89) l_exp -> a_exp pop_op . RELOP push_op a_exp

    AND             reduce using rule 88 (l_exp -> a_exp pop_op .)
    OR              reduce using rule 88 (l_exp -> a_exp pop_op .)
    SEMICOLON       reduce using rule 88 (l_exp -> a_exp pop_op .)
    RPAREN          reduce using rule 88 (l_exp -> a_exp pop_op .)
    RBRACKET        reduce using rule 88 (l_exp -> a_exp pop_op .)
    COMMA           reduce using rule 88 (l_exp -> a_exp pop_op .)
    RELOP           shift and go to state 203
=======
    (97) factor -> LPAREN push_paren . exp RPAREN pop_paren
    (85) exp -> . n_exp
    (86) exp -> . n_exp OR push_op exp pop_op
    (87) n_exp -> . l_exp
    (88) n_exp -> . l_exp AND push_op n_exp pop_op
    (89) l_exp -> . a_exp
    (90) l_exp -> . a_exp RELOP push_op a_exp pop_op
    (91) a_exp -> . term
    (92) a_exp -> . term PLUS push_op a_exp pop_op
    (93) a_exp -> . term MINUS push_op a_exp pop_op
    (94) term -> . factor
    (95) term -> . factor TIMES push_op term pop_op
    (96) term -> . factor DIVIDE push_op term pop_op
    (97) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (98) factor -> . call
    (99) factor -> . factor_aux
    (65) call -> . ID LPAREN RPAREN
    (66) call -> . ID POINT ID LPAREN RPAREN
    (67) call -> . ID LPAREN call_aux RPAREN
    (68) call -> . ID POINT ID LPAREN call_aux RPAREN
    (100) factor_aux -> . cte
    (101) factor_aux -> . PLUS cte
    (102) factor_aux -> . MINUS cte
    (103) cte -> . var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var
    (58) var -> . ID push_var
    (59) var -> . ID var_aux

    LPAREN          shift and go to state 129
    ID              shift and go to state 142
    PLUS            shift and go to state 137
    MINUS           shift and go to state 138
    CTEI            shift and go to state 145
    CTEF            shift and go to state 146
    CTECHAR         shift and go to state 147

    exp                            shift and go to state 201
    n_exp                          shift and go to state 133
    l_exp                          shift and go to state 134
    a_exp                          shift and go to state 135
    term                           shift and go to state 136
    factor                         shift and go to state 139
    call                           shift and go to state 140
    factor_aux                     shift and go to state 141
    cte                            shift and go to state 143
    var                            shift and go to state 144

state 168

    (78) write -> WRITE LPAREN write_aux RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 202
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330


state 169

<<<<<<< HEAD
    (90) a_exp -> term pop_op .
    (91) a_exp -> term pop_op . PLUS push_op a_exp
    (92) a_exp -> term pop_op . MINUS push_op a_exp

    RELOP           reduce using rule 90 (a_exp -> term pop_op .)
    AND             reduce using rule 90 (a_exp -> term pop_op .)
    OR              reduce using rule 90 (a_exp -> term pop_op .)
    SEMICOLON       reduce using rule 90 (a_exp -> term pop_op .)
    RPAREN          reduce using rule 90 (a_exp -> term pop_op .)
    RBRACKET        reduce using rule 90 (a_exp -> term pop_op .)
    COMMA           reduce using rule 90 (a_exp -> term pop_op .)
    PLUS            shift and go to state 204
    MINUS           shift and go to state 205


state 170

    (100) factor_aux -> PLUS cte .

    TIMES           reduce using rule 100 (factor_aux -> PLUS cte .)
    DIVIDE          reduce using rule 100 (factor_aux -> PLUS cte .)
    PLUS            reduce using rule 100 (factor_aux -> PLUS cte .)
    MINUS           reduce using rule 100 (factor_aux -> PLUS cte .)
    RELOP           reduce using rule 100 (factor_aux -> PLUS cte .)
    AND             reduce using rule 100 (factor_aux -> PLUS cte .)
    OR              reduce using rule 100 (factor_aux -> PLUS cte .)
    SEMICOLON       reduce using rule 100 (factor_aux -> PLUS cte .)
    RPAREN          reduce using rule 100 (factor_aux -> PLUS cte .)
    RBRACKET        reduce using rule 100 (factor_aux -> PLUS cte .)
    COMMA           reduce using rule 100 (factor_aux -> PLUS cte .)


state 171

    (102) cte -> ID . push_var
    (103) cte -> ID . var_aux push_var
    (119) push_var -> .
    (59) var_aux -> . POINT ID
    (60) var_aux -> . POINT ID var_aux_2
    (61) var_aux -> . var_aux_2
    (62) var_aux_2 -> . LBRACKET exp RBRACKET
    (63) var_aux_2 -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET

    TIMES           reduce using rule 119 (push_var -> .)
    DIVIDE          reduce using rule 119 (push_var -> .)
    PLUS            reduce using rule 119 (push_var -> .)
    MINUS           reduce using rule 119 (push_var -> .)
    RELOP           reduce using rule 119 (push_var -> .)
    AND             reduce using rule 119 (push_var -> .)
    OR              reduce using rule 119 (push_var -> .)
    SEMICOLON       reduce using rule 119 (push_var -> .)
    RPAREN          reduce using rule 119 (push_var -> .)
    RBRACKET        reduce using rule 119 (push_var -> .)
    COMMA           reduce using rule 119 (push_var -> .)
    POINT           shift and go to state 103
    LBRACKET        shift and go to state 105

    push_var                       shift and go to state 164
    var_aux                        shift and go to state 165
    var_aux_2                      shift and go to state 104

state 172

    (101) factor_aux -> MINUS cte .

    TIMES           reduce using rule 101 (factor_aux -> MINUS cte .)
    DIVIDE          reduce using rule 101 (factor_aux -> MINUS cte .)
    PLUS            reduce using rule 101 (factor_aux -> MINUS cte .)
    MINUS           reduce using rule 101 (factor_aux -> MINUS cte .)
    RELOP           reduce using rule 101 (factor_aux -> MINUS cte .)
    AND             reduce using rule 101 (factor_aux -> MINUS cte .)
    OR              reduce using rule 101 (factor_aux -> MINUS cte .)
    SEMICOLON       reduce using rule 101 (factor_aux -> MINUS cte .)
    RPAREN          reduce using rule 101 (factor_aux -> MINUS cte .)
    RBRACKET        reduce using rule 101 (factor_aux -> MINUS cte .)
    COMMA           reduce using rule 101 (factor_aux -> MINUS cte .)


state 173

    (93) term -> factor pop_op .
    (94) term -> factor pop_op . TIMES push_op term
    (95) term -> factor pop_op . DIVIDE push_op term

    PLUS            reduce using rule 93 (term -> factor pop_op .)
    MINUS           reduce using rule 93 (term -> factor pop_op .)
    RELOP           reduce using rule 93 (term -> factor pop_op .)
    AND             reduce using rule 93 (term -> factor pop_op .)
    OR              reduce using rule 93 (term -> factor pop_op .)
    SEMICOLON       reduce using rule 93 (term -> factor pop_op .)
    RPAREN          reduce using rule 93 (term -> factor pop_op .)
    RBRACKET        reduce using rule 93 (term -> factor pop_op .)
    COMMA           reduce using rule 93 (term -> factor pop_op .)
    TIMES           shift and go to state 206
    DIVIDE          shift and go to state 207


state 174

    (96) factor -> LPAREN push_paren . exp RPAREN pop_paren
    (84) exp -> . n_exp pop_op
    (85) exp -> . n_exp pop_op OR push_op exp
    (86) n_exp -> . l_exp pop_op
    (87) n_exp -> . l_exp pop_op AND push_op n_exp
    (88) l_exp -> . a_exp pop_op
    (89) l_exp -> . a_exp pop_op RELOP push_op a_exp
    (90) a_exp -> . term pop_op
    (91) a_exp -> . term pop_op PLUS push_op a_exp
    (92) a_exp -> . term pop_op MINUS push_op a_exp
    (93) term -> . factor pop_op
    (94) term -> . factor pop_op TIMES push_op term
    (95) term -> . factor pop_op DIVIDE push_op term
    (96) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (97) factor -> . call
    (98) factor -> . factor_aux
    (64) call -> . ID LPAREN RPAREN
    (65) call -> . ID POINT ID LPAREN RPAREN
    (66) call -> . ID LPAREN call_aux RPAREN
    (67) call -> . ID POINT ID LPAREN call_aux RPAREN
    (99) factor_aux -> . cte
    (100) factor_aux -> . PLUS cte
    (101) factor_aux -> . MINUS cte
    (102) cte -> . ID push_var
    (103) cte -> . ID var_aux push_var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 134
    ID              shift and go to state 125
    PLUS            shift and go to state 131
    MINUS           shift and go to state 132
    CTEI            shift and go to state 138
    CTEF            shift and go to state 139
    CTECHAR         shift and go to state 140

    exp                            shift and go to state 208
    n_exp                          shift and go to state 127
    l_exp                          shift and go to state 128
    a_exp                          shift and go to state 129
    term                           shift and go to state 130
    factor                         shift and go to state 133
    call                           shift and go to state 135
    factor_aux                     shift and go to state 136
    cte                            shift and go to state 137

state 175

    (104) cte -> CTEI push_var .

    TIMES           reduce using rule 104 (cte -> CTEI push_var .)
    DIVIDE          reduce using rule 104 (cte -> CTEI push_var .)
    PLUS            reduce using rule 104 (cte -> CTEI push_var .)
    MINUS           reduce using rule 104 (cte -> CTEI push_var .)
    RELOP           reduce using rule 104 (cte -> CTEI push_var .)
    AND             reduce using rule 104 (cte -> CTEI push_var .)
    OR              reduce using rule 104 (cte -> CTEI push_var .)
    SEMICOLON       reduce using rule 104 (cte -> CTEI push_var .)
    RPAREN          reduce using rule 104 (cte -> CTEI push_var .)
    RBRACKET        reduce using rule 104 (cte -> CTEI push_var .)
    COMMA           reduce using rule 104 (cte -> CTEI push_var .)
=======
    (80) write_aux -> exp COMMA . write_aux
    (79) write_aux -> . exp
    (80) write_aux -> . exp COMMA write_aux
    (81) write_aux -> . CTESTRING
    (82) write_aux -> . CTESTRING COMMA write_aux
    (85) exp -> . n_exp
    (86) exp -> . n_exp OR push_op exp pop_op
    (87) n_exp -> . l_exp
    (88) n_exp -> . l_exp AND push_op n_exp pop_op
    (89) l_exp -> . a_exp
    (90) l_exp -> . a_exp RELOP push_op a_exp pop_op
    (91) a_exp -> . term
    (92) a_exp -> . term PLUS push_op a_exp pop_op
    (93) a_exp -> . term MINUS push_op a_exp pop_op
    (94) term -> . factor
    (95) term -> . factor TIMES push_op term pop_op
    (96) term -> . factor DIVIDE push_op term pop_op
    (97) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (98) factor -> . call
    (99) factor -> . factor_aux
    (65) call -> . ID LPAREN RPAREN
    (66) call -> . ID POINT ID LPAREN RPAREN
    (67) call -> . ID LPAREN call_aux RPAREN
    (68) call -> . ID POINT ID LPAREN call_aux RPAREN
    (100) factor_aux -> . cte
    (101) factor_aux -> . PLUS cte
    (102) factor_aux -> . MINUS cte
    (103) cte -> . var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var
    (58) var -> . ID push_var
    (59) var -> . ID var_aux

    CTESTRING       shift and go to state 132
    LPAREN          shift and go to state 129
    ID              shift and go to state 142
    PLUS            shift and go to state 137
    MINUS           shift and go to state 138
    CTEI            shift and go to state 145
    CTEF            shift and go to state 146
    CTECHAR         shift and go to state 147

    exp                            shift and go to state 131
    write_aux                      shift and go to state 203
    n_exp                          shift and go to state 133
    l_exp                          shift and go to state 134
    a_exp                          shift and go to state 135
    term                           shift and go to state 136
    factor                         shift and go to state 139
    call                           shift and go to state 140
    factor_aux                     shift and go to state 141
    cte                            shift and go to state 143
    var                            shift and go to state 144

state 170

    (82) write_aux -> CTESTRING COMMA . write_aux
    (79) write_aux -> . exp
    (80) write_aux -> . exp COMMA write_aux
    (81) write_aux -> . CTESTRING
    (82) write_aux -> . CTESTRING COMMA write_aux
    (85) exp -> . n_exp
    (86) exp -> . n_exp OR push_op exp pop_op
    (87) n_exp -> . l_exp
    (88) n_exp -> . l_exp AND push_op n_exp pop_op
    (89) l_exp -> . a_exp
    (90) l_exp -> . a_exp RELOP push_op a_exp pop_op
    (91) a_exp -> . term
    (92) a_exp -> . term PLUS push_op a_exp pop_op
    (93) a_exp -> . term MINUS push_op a_exp pop_op
    (94) term -> . factor
    (95) term -> . factor TIMES push_op term pop_op
    (96) term -> . factor DIVIDE push_op term pop_op
    (97) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (98) factor -> . call
    (99) factor -> . factor_aux
    (65) call -> . ID LPAREN RPAREN
    (66) call -> . ID POINT ID LPAREN RPAREN
    (67) call -> . ID LPAREN call_aux RPAREN
    (68) call -> . ID POINT ID LPAREN call_aux RPAREN
    (100) factor_aux -> . cte
    (101) factor_aux -> . PLUS cte
    (102) factor_aux -> . MINUS cte
    (103) cte -> . var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var
    (58) var -> . ID push_var
    (59) var -> . ID var_aux

    CTESTRING       shift and go to state 132
    LPAREN          shift and go to state 129
    ID              shift and go to state 142
    PLUS            shift and go to state 137
    MINUS           shift and go to state 138
    CTEI            shift and go to state 145
    CTEF            shift and go to state 146
    CTECHAR         shift and go to state 147

    write_aux                      shift and go to state 204
    exp                            shift and go to state 131
    n_exp                          shift and go to state 133
    l_exp                          shift and go to state 134
    a_exp                          shift and go to state 135
    term                           shift and go to state 136
    factor                         shift and go to state 139
    call                           shift and go to state 140
    factor_aux                     shift and go to state 141
    cte                            shift and go to state 143
    var                            shift and go to state 144

state 171

    (86) exp -> n_exp OR . push_op exp pop_op
    (120) push_op -> .

    LPAREN          reduce using rule 120 (push_op -> .)
    ID              reduce using rule 120 (push_op -> .)
    PLUS            reduce using rule 120 (push_op -> .)
    MINUS           reduce using rule 120 (push_op -> .)
    CTEI            reduce using rule 120 (push_op -> .)
    CTEF            reduce using rule 120 (push_op -> .)
    CTECHAR         reduce using rule 120 (push_op -> .)

    push_op                        shift and go to state 205

state 172

    (88) n_exp -> l_exp AND . push_op n_exp pop_op
    (120) push_op -> .

    LPAREN          reduce using rule 120 (push_op -> .)
    ID              reduce using rule 120 (push_op -> .)
    PLUS            reduce using rule 120 (push_op -> .)
    MINUS           reduce using rule 120 (push_op -> .)
    CTEI            reduce using rule 120 (push_op -> .)
    CTEF            reduce using rule 120 (push_op -> .)
    CTECHAR         reduce using rule 120 (push_op -> .)

    push_op                        shift and go to state 206

state 173

    (90) l_exp -> a_exp RELOP . push_op a_exp pop_op
    (120) push_op -> .

    LPAREN          reduce using rule 120 (push_op -> .)
    ID              reduce using rule 120 (push_op -> .)
    PLUS            reduce using rule 120 (push_op -> .)
    MINUS           reduce using rule 120 (push_op -> .)
    CTEI            reduce using rule 120 (push_op -> .)
    CTEF            reduce using rule 120 (push_op -> .)
    CTECHAR         reduce using rule 120 (push_op -> .)

    push_op                        shift and go to state 207

state 174

    (92) a_exp -> term PLUS . push_op a_exp pop_op
    (120) push_op -> .

    LPAREN          reduce using rule 120 (push_op -> .)
    ID              reduce using rule 120 (push_op -> .)
    PLUS            reduce using rule 120 (push_op -> .)
    MINUS           reduce using rule 120 (push_op -> .)
    CTEI            reduce using rule 120 (push_op -> .)
    CTEF            reduce using rule 120 (push_op -> .)
    CTECHAR         reduce using rule 120 (push_op -> .)

    push_op                        shift and go to state 208

state 175

    (93) a_exp -> term MINUS . push_op a_exp pop_op
    (120) push_op -> .

    LPAREN          reduce using rule 120 (push_op -> .)
    ID              reduce using rule 120 (push_op -> .)
    PLUS            reduce using rule 120 (push_op -> .)
    MINUS           reduce using rule 120 (push_op -> .)
    CTEI            reduce using rule 120 (push_op -> .)
    CTEF            reduce using rule 120 (push_op -> .)
    CTECHAR         reduce using rule 120 (push_op -> .)
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    push_op                        shift and go to state 209

state 176

<<<<<<< HEAD
    (105) cte -> CTEF push_var .

    TIMES           reduce using rule 105 (cte -> CTEF push_var .)
    DIVIDE          reduce using rule 105 (cte -> CTEF push_var .)
    PLUS            reduce using rule 105 (cte -> CTEF push_var .)
    MINUS           reduce using rule 105 (cte -> CTEF push_var .)
    RELOP           reduce using rule 105 (cte -> CTEF push_var .)
    AND             reduce using rule 105 (cte -> CTEF push_var .)
    OR              reduce using rule 105 (cte -> CTEF push_var .)
    SEMICOLON       reduce using rule 105 (cte -> CTEF push_var .)
    RPAREN          reduce using rule 105 (cte -> CTEF push_var .)
    RBRACKET        reduce using rule 105 (cte -> CTEF push_var .)
    COMMA           reduce using rule 105 (cte -> CTEF push_var .)
=======
    (101) factor_aux -> PLUS cte .

    TIMES           reduce using rule 101 (factor_aux -> PLUS cte .)
    DIVIDE          reduce using rule 101 (factor_aux -> PLUS cte .)
    PLUS            reduce using rule 101 (factor_aux -> PLUS cte .)
    MINUS           reduce using rule 101 (factor_aux -> PLUS cte .)
    RELOP           reduce using rule 101 (factor_aux -> PLUS cte .)
    AND             reduce using rule 101 (factor_aux -> PLUS cte .)
    OR              reduce using rule 101 (factor_aux -> PLUS cte .)
    COMMA           reduce using rule 101 (factor_aux -> PLUS cte .)
    RPAREN          reduce using rule 101 (factor_aux -> PLUS cte .)
    SEMICOLON       reduce using rule 101 (factor_aux -> PLUS cte .)
    RBRACKET        reduce using rule 101 (factor_aux -> PLUS cte .)
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330


state 177

<<<<<<< HEAD
    (106) cte -> CTECHAR push_var .

    TIMES           reduce using rule 106 (cte -> CTECHAR push_var .)
    DIVIDE          reduce using rule 106 (cte -> CTECHAR push_var .)
    PLUS            reduce using rule 106 (cte -> CTECHAR push_var .)
    MINUS           reduce using rule 106 (cte -> CTECHAR push_var .)
    RELOP           reduce using rule 106 (cte -> CTECHAR push_var .)
    AND             reduce using rule 106 (cte -> CTECHAR push_var .)
    OR              reduce using rule 106 (cte -> CTECHAR push_var .)
    SEMICOLON       reduce using rule 106 (cte -> CTECHAR push_var .)
    RPAREN          reduce using rule 106 (cte -> CTECHAR push_var .)
    RBRACKET        reduce using rule 106 (cte -> CTECHAR push_var .)
    COMMA           reduce using rule 106 (cte -> CTECHAR push_var .)
=======
    (102) factor_aux -> MINUS cte .

    TIMES           reduce using rule 102 (factor_aux -> MINUS cte .)
    DIVIDE          reduce using rule 102 (factor_aux -> MINUS cte .)
    PLUS            reduce using rule 102 (factor_aux -> MINUS cte .)
    MINUS           reduce using rule 102 (factor_aux -> MINUS cte .)
    RELOP           reduce using rule 102 (factor_aux -> MINUS cte .)
    AND             reduce using rule 102 (factor_aux -> MINUS cte .)
    OR              reduce using rule 102 (factor_aux -> MINUS cte .)
    COMMA           reduce using rule 102 (factor_aux -> MINUS cte .)
    RPAREN          reduce using rule 102 (factor_aux -> MINUS cte .)
    SEMICOLON       reduce using rule 102 (factor_aux -> MINUS cte .)
    RBRACKET        reduce using rule 102 (factor_aux -> MINUS cte .)
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330


state 178

<<<<<<< HEAD
    (58) assignation -> ID var_aux EQUAL exp .

    SEMICOLON       reduce using rule 58 (assignation -> ID var_aux EQUAL exp .)
    RPAREN          reduce using rule 58 (assignation -> ID var_aux EQUAL exp .)


state 179

    (60) var_aux -> POINT ID var_aux_2 .

    EQUAL           reduce using rule 60 (var_aux -> POINT ID var_aux_2 .)
    TIMES           reduce using rule 60 (var_aux -> POINT ID var_aux_2 .)
    DIVIDE          reduce using rule 60 (var_aux -> POINT ID var_aux_2 .)
    PLUS            reduce using rule 60 (var_aux -> POINT ID var_aux_2 .)
    MINUS           reduce using rule 60 (var_aux -> POINT ID var_aux_2 .)
    RELOP           reduce using rule 60 (var_aux -> POINT ID var_aux_2 .)
    AND             reduce using rule 60 (var_aux -> POINT ID var_aux_2 .)
    OR              reduce using rule 60 (var_aux -> POINT ID var_aux_2 .)
    SEMICOLON       reduce using rule 60 (var_aux -> POINT ID var_aux_2 .)
    RPAREN          reduce using rule 60 (var_aux -> POINT ID var_aux_2 .)
    RBRACKET        reduce using rule 60 (var_aux -> POINT ID var_aux_2 .)
    COMMA           reduce using rule 60 (var_aux -> POINT ID var_aux_2 .)

=======
    (95) term -> factor TIMES . push_op term pop_op
    (120) push_op -> .

    LPAREN          reduce using rule 120 (push_op -> .)
    ID              reduce using rule 120 (push_op -> .)
    PLUS            reduce using rule 120 (push_op -> .)
    MINUS           reduce using rule 120 (push_op -> .)
    CTEI            reduce using rule 120 (push_op -> .)
    CTEF            reduce using rule 120 (push_op -> .)
    CTECHAR         reduce using rule 120 (push_op -> .)

    push_op                        shift and go to state 210

state 179

    (96) term -> factor DIVIDE . push_op term pop_op
    (120) push_op -> .

    LPAREN          reduce using rule 120 (push_op -> .)
    ID              reduce using rule 120 (push_op -> .)
    PLUS            reduce using rule 120 (push_op -> .)
    MINUS           reduce using rule 120 (push_op -> .)
    CTEI            reduce using rule 120 (push_op -> .)
    CTEF            reduce using rule 120 (push_op -> .)
    CTECHAR         reduce using rule 120 (push_op -> .)

    push_op                        shift and go to state 211
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

state 180

    (62) var_aux_2 -> LBRACKET exp RBRACKET .
    (63) var_aux_2 -> LBRACKET exp RBRACKET . LBRACKET exp RBRACKET

<<<<<<< HEAD
    EQUAL           reduce using rule 62 (var_aux_2 -> LBRACKET exp RBRACKET .)
    TIMES           reduce using rule 62 (var_aux_2 -> LBRACKET exp RBRACKET .)
    DIVIDE          reduce using rule 62 (var_aux_2 -> LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 62 (var_aux_2 -> LBRACKET exp RBRACKET .)
    MINUS           reduce using rule 62 (var_aux_2 -> LBRACKET exp RBRACKET .)
    RELOP           reduce using rule 62 (var_aux_2 -> LBRACKET exp RBRACKET .)
    AND             reduce using rule 62 (var_aux_2 -> LBRACKET exp RBRACKET .)
    OR              reduce using rule 62 (var_aux_2 -> LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 62 (var_aux_2 -> LBRACKET exp RBRACKET .)
    RPAREN          reduce using rule 62 (var_aux_2 -> LBRACKET exp RBRACKET .)
    RBRACKET        reduce using rule 62 (var_aux_2 -> LBRACKET exp RBRACKET .)
    COMMA           reduce using rule 62 (var_aux_2 -> LBRACKET exp RBRACKET .)
    LBRACKET        shift and go to state 209
=======
    ID              shift and go to state 212
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330


state 181

<<<<<<< HEAD
    (76) read -> READ LPAREN ID RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 210
=======
    (104) cte -> CTEI push_var .

    TIMES           reduce using rule 104 (cte -> CTEI push_var .)
    DIVIDE          reduce using rule 104 (cte -> CTEI push_var .)
    PLUS            reduce using rule 104 (cte -> CTEI push_var .)
    MINUS           reduce using rule 104 (cte -> CTEI push_var .)
    RELOP           reduce using rule 104 (cte -> CTEI push_var .)
    AND             reduce using rule 104 (cte -> CTEI push_var .)
    OR              reduce using rule 104 (cte -> CTEI push_var .)
    COMMA           reduce using rule 104 (cte -> CTEI push_var .)
    RPAREN          reduce using rule 104 (cte -> CTEI push_var .)
    SEMICOLON       reduce using rule 104 (cte -> CTEI push_var .)
    RBRACKET        reduce using rule 104 (cte -> CTEI push_var .)


state 182

    (105) cte -> CTEF push_var .

    TIMES           reduce using rule 105 (cte -> CTEF push_var .)
    DIVIDE          reduce using rule 105 (cte -> CTEF push_var .)
    PLUS            reduce using rule 105 (cte -> CTEF push_var .)
    MINUS           reduce using rule 105 (cte -> CTEF push_var .)
    RELOP           reduce using rule 105 (cte -> CTEF push_var .)
    AND             reduce using rule 105 (cte -> CTEF push_var .)
    OR              reduce using rule 105 (cte -> CTEF push_var .)
    COMMA           reduce using rule 105 (cte -> CTEF push_var .)
    RPAREN          reduce using rule 105 (cte -> CTEF push_var .)
    SEMICOLON       reduce using rule 105 (cte -> CTEF push_var .)
    RBRACKET        reduce using rule 105 (cte -> CTEF push_var .)


state 183

    (106) cte -> CTECHAR push_var .

    TIMES           reduce using rule 106 (cte -> CTECHAR push_var .)
    DIVIDE          reduce using rule 106 (cte -> CTECHAR push_var .)
    PLUS            reduce using rule 106 (cte -> CTECHAR push_var .)
    MINUS           reduce using rule 106 (cte -> CTECHAR push_var .)
    RELOP           reduce using rule 106 (cte -> CTECHAR push_var .)
    AND             reduce using rule 106 (cte -> CTECHAR push_var .)
    OR              reduce using rule 106 (cte -> CTECHAR push_var .)
    COMMA           reduce using rule 106 (cte -> CTECHAR push_var .)
    RPAREN          reduce using rule 106 (cte -> CTECHAR push_var .)
    SEMICOLON       reduce using rule 106 (cte -> CTECHAR push_var .)
    RBRACKET        reduce using rule 106 (cte -> CTECHAR push_var .)


state 184

    (72) condition_aux -> LPAREN exp RPAREN . THEN LBRACE statutes_aux RBRACE condition_aux_3
    (74) condition_aux_2 -> LPAREN exp RPAREN . THEN LBRACE statutes_aux RBRACE ELIF condition_aux

    THEN            shift and go to state 213
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330


state 185

    (77) write -> WRITE LPAREN write_aux RPAREN . SEMICOLON

<<<<<<< HEAD
    SEMICOLON       shift and go to state 211
=======
    DO              shift and go to state 214
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330


state 186

    (79) write_aux -> exp COMMA . write_aux
    (78) write_aux -> . exp
    (79) write_aux -> . exp COMMA write_aux
    (80) write_aux -> . CTESTRING
    (81) write_aux -> . CTESTRING COMMA write_aux
    (84) exp -> . n_exp pop_op
    (85) exp -> . n_exp pop_op OR push_op exp
    (86) n_exp -> . l_exp pop_op
    (87) n_exp -> . l_exp pop_op AND push_op n_exp
    (88) l_exp -> . a_exp pop_op
    (89) l_exp -> . a_exp pop_op RELOP push_op a_exp
    (90) a_exp -> . term pop_op
    (91) a_exp -> . term pop_op PLUS push_op a_exp
    (92) a_exp -> . term pop_op MINUS push_op a_exp
    (93) term -> . factor pop_op
    (94) term -> . factor pop_op TIMES push_op term
    (95) term -> . factor pop_op DIVIDE push_op term
    (96) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (97) factor -> . call
    (98) factor -> . factor_aux
    (64) call -> . ID LPAREN RPAREN
    (65) call -> . ID POINT ID LPAREN RPAREN
    (66) call -> . ID LPAREN call_aux RPAREN
    (67) call -> . ID POINT ID LPAREN call_aux RPAREN
    (99) factor_aux -> . cte
    (100) factor_aux -> . PLUS cte
    (101) factor_aux -> . MINUS cte
    (102) cte -> . ID push_var
    (103) cte -> . ID var_aux push_var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var

    CTESTRING       shift and go to state 147
    LPAREN          shift and go to state 134
    ID              shift and go to state 125
    PLUS            shift and go to state 131
    MINUS           shift and go to state 132
    CTEI            shift and go to state 138
    CTEF            shift and go to state 139
    CTECHAR         shift and go to state 140

    exp                            shift and go to state 146
    write_aux                      shift and go to state 212
    n_exp                          shift and go to state 127
    l_exp                          shift and go to state 128
    a_exp                          shift and go to state 129
    term                           shift and go to state 130
    factor                         shift and go to state 133
    call                           shift and go to state 135
    factor_aux                     shift and go to state 136
    cte                            shift and go to state 137

<<<<<<< HEAD
state 184
=======
    UNTIL           shift and go to state 215
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    (81) write_aux -> CTESTRING COMMA . write_aux
    (78) write_aux -> . exp
    (79) write_aux -> . exp COMMA write_aux
    (80) write_aux -> . CTESTRING
    (81) write_aux -> . CTESTRING COMMA write_aux
    (84) exp -> . n_exp pop_op
    (85) exp -> . n_exp pop_op OR push_op exp
    (86) n_exp -> . l_exp pop_op
    (87) n_exp -> . l_exp pop_op AND push_op n_exp
    (88) l_exp -> . a_exp pop_op
    (89) l_exp -> . a_exp pop_op RELOP push_op a_exp
    (90) a_exp -> . term pop_op
    (91) a_exp -> . term pop_op PLUS push_op a_exp
    (92) a_exp -> . term pop_op MINUS push_op a_exp
    (93) term -> . factor pop_op
    (94) term -> . factor pop_op TIMES push_op term
    (95) term -> . factor pop_op DIVIDE push_op term
    (96) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (97) factor -> . call
    (98) factor -> . factor_aux
    (64) call -> . ID LPAREN RPAREN
    (65) call -> . ID POINT ID LPAREN RPAREN
    (66) call -> . ID LPAREN call_aux RPAREN
    (67) call -> . ID POINT ID LPAREN call_aux RPAREN
    (99) factor_aux -> . cte
    (100) factor_aux -> . PLUS cte
    (101) factor_aux -> . MINUS cte
    (102) cte -> . ID push_var
    (103) cte -> . ID var_aux push_var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var

    CTESTRING       shift and go to state 147
    LPAREN          shift and go to state 134
    ID              shift and go to state 125
    PLUS            shift and go to state 131
    MINUS           shift and go to state 132
    CTEI            shift and go to state 138
    CTEF            shift and go to state 139
    CTECHAR         shift and go to state 140

    write_aux                      shift and go to state 213
    exp                            shift and go to state 146
    n_exp                          shift and go to state 127
    l_exp                          shift and go to state 128
    a_exp                          shift and go to state 129
    term                           shift and go to state 130
    factor                         shift and go to state 133
    call                           shift and go to state 135
    factor_aux                     shift and go to state 136
    cte                            shift and go to state 137

<<<<<<< HEAD
state 185

    (71) condition_aux -> LPAREN exp RPAREN . THEN LBRACE statutes_aux RBRACE condition_aux_3
    (73) condition_aux_2 -> LPAREN exp RPAREN . THEN LBRACE statutes_aux RBRACE ELIF condition_aux

    THEN            shift and go to state 214


state 186

    (82) while -> WHILE LPAREN exp RPAREN . DO LBRACE statutes_aux RBRACE

    DO              shift and go to state 215


state 187

    (83) for -> FROM LPAREN assignation RPAREN . UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    UNTIL           shift and go to state 216


state 188

    (21) vars_simple_type_aux -> LBRACKET CTEI RBRACKET LBRACKET CTEI . RBRACKET add_matrix_variable

    RBRACKET        shift and go to state 217


state 189
=======
state 187

    (21) vars_simple_type_aux -> LBRACKET CTEI RBRACKET LBRACKET CTEI . RBRACKET add_matrix_variable

    RBRACKET        shift and go to state 216


state 188
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    (34) functions_aux -> VOID ID add_function LPAREN params RPAREN body .

    FUNCT           reduce using rule 34 (functions_aux -> VOID ID add_function LPAREN params RPAREN body .)
    RBRACE          reduce using rule 34 (functions_aux -> VOID ID add_function LPAREN params RPAREN body .)
    INIT            reduce using rule 34 (functions_aux -> VOID ID add_function LPAREN params RPAREN body .)


<<<<<<< HEAD
state 190
=======
state 189
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    (44) body -> LBRACE dec_vars . statutes_aux RBRACE
    (47) body -> LBRACE dec_vars . statutes_aux RETURN ID SEMICOLON RBRACE
    (55) statutes_aux -> . statutes
    (56) statutes_aux -> . statutes statutes_aux
    (48) statutes -> . assignation SEMICOLON
    (49) statutes -> . CALL call SEMICOLON
    (50) statutes -> . read
    (51) statutes -> . write
    (52) statutes -> . condition
    (53) statutes -> . while
    (54) statutes -> . for
    (57) assignation -> . ID EQUAL exp
    (58) assignation -> . ID var_aux EQUAL exp
    (76) read -> . READ LPAREN ID RPAREN SEMICOLON
    (77) write -> . WRITE LPAREN write_aux RPAREN SEMICOLON
    (70) condition -> . IF condition_aux
    (82) while -> . WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (83) for -> . FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    CALL            shift and go to state 74
<<<<<<< HEAD
    ID              shift and go to state 80
    READ            shift and go to state 81
    WRITE           shift and go to state 82
    IF              shift and go to state 83
    WHILE           shift and go to state 84
    FROM            shift and go to state 85

    statutes_aux                   shift and go to state 218
=======
    READ            shift and go to state 80
    WRITE           shift and go to state 81
    IF              shift and go to state 82
    WHILE           shift and go to state 83
    FROM            shift and go to state 84

    statutes_aux                   shift and go to state 217
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330
    statutes                       shift and go to state 72
    assignation                    shift and go to state 73
    read                           shift and go to state 75
    write                          shift and go to state 76
    condition                      shift and go to state 77
    while                          shift and go to state 78
    for                            shift and go to state 79

<<<<<<< HEAD
state 191
=======
state 190
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    (45) body -> LBRACE statutes_aux . RBRACE
    (46) body -> LBRACE statutes_aux . RETURN ID SEMICOLON RBRACE

<<<<<<< HEAD
    RBRACE          shift and go to state 219
    RETURN          shift and go to state 220


state 192
=======
    RBRACE          shift and go to state 218
    RETURN          shift and go to state 219


state 191
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    (38) params -> simple_type ID add_variable .
    (39) params -> simple_type ID add_variable . COMMA params

    RPAREN          reduce using rule 38 (params -> simple_type ID add_variable .)
<<<<<<< HEAD
    COMMA           shift and go to state 221


state 193
=======
    COMMA           shift and go to state 220


state 192
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    (40) params -> simple_type ID params_aux .
    (41) params -> simple_type ID params_aux . COMMA params

    RPAREN          reduce using rule 40 (params -> simple_type ID params_aux .)
<<<<<<< HEAD
    COMMA           shift and go to state 222


state 194
=======
    COMMA           shift and go to state 221


state 193
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    (42) params_aux -> LBRACKET . RBRACKET add_array_var_params
    (43) params_aux -> LBRACKET . RBRACKET LBRACKET RBRACKET add_matrix_var_params

<<<<<<< HEAD
    RBRACKET        shift and go to state 223


state 195
=======
    RBRACKET        shift and go to state 222


state 194
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    (37) functions_aux -> simple_type ID add_function LPAREN params RPAREN body .

    FUNCT           reduce using rule 37 (functions_aux -> simple_type ID add_function LPAREN params RPAREN body .)
    RBRACE          reduce using rule 37 (functions_aux -> simple_type ID add_function LPAREN params RPAREN body .)
    INIT            reduce using rule 37 (functions_aux -> simple_type ID add_function LPAREN params RPAREN body .)


<<<<<<< HEAD
state 196

    (66) call -> ID LPAREN call_aux RPAREN .

    SEMICOLON       reduce using rule 66 (call -> ID LPAREN call_aux RPAREN .)
    TIMES           reduce using rule 66 (call -> ID LPAREN call_aux RPAREN .)
    DIVIDE          reduce using rule 66 (call -> ID LPAREN call_aux RPAREN .)
    PLUS            reduce using rule 66 (call -> ID LPAREN call_aux RPAREN .)
    MINUS           reduce using rule 66 (call -> ID LPAREN call_aux RPAREN .)
    RELOP           reduce using rule 66 (call -> ID LPAREN call_aux RPAREN .)
    AND             reduce using rule 66 (call -> ID LPAREN call_aux RPAREN .)
    OR              reduce using rule 66 (call -> ID LPAREN call_aux RPAREN .)
    RPAREN          reduce using rule 66 (call -> ID LPAREN call_aux RPAREN .)
    RBRACKET        reduce using rule 66 (call -> ID LPAREN call_aux RPAREN .)
    COMMA           reduce using rule 66 (call -> ID LPAREN call_aux RPAREN .)
=======
state 195

    (61) var_aux -> POINT ID var_aux_2 .

    EQUAL           reduce using rule 61 (var_aux -> POINT ID var_aux_2 .)
    RPAREN          reduce using rule 61 (var_aux -> POINT ID var_aux_2 .)
    TIMES           reduce using rule 61 (var_aux -> POINT ID var_aux_2 .)
    DIVIDE          reduce using rule 61 (var_aux -> POINT ID var_aux_2 .)
    PLUS            reduce using rule 61 (var_aux -> POINT ID var_aux_2 .)
    MINUS           reduce using rule 61 (var_aux -> POINT ID var_aux_2 .)
    RELOP           reduce using rule 61 (var_aux -> POINT ID var_aux_2 .)
    AND             reduce using rule 61 (var_aux -> POINT ID var_aux_2 .)
    OR              reduce using rule 61 (var_aux -> POINT ID var_aux_2 .)
    COMMA           reduce using rule 61 (var_aux -> POINT ID var_aux_2 .)
    SEMICOLON       reduce using rule 61 (var_aux -> POINT ID var_aux_2 .)
    RBRACKET        reduce using rule 61 (var_aux -> POINT ID var_aux_2 .)


state 196

    (63) var_aux_2 -> LBRACKET exp RBRACKET .
    (64) var_aux_2 -> LBRACKET exp RBRACKET . LBRACKET exp RBRACKET

    EQUAL           reduce using rule 63 (var_aux_2 -> LBRACKET exp RBRACKET .)
    RPAREN          reduce using rule 63 (var_aux_2 -> LBRACKET exp RBRACKET .)
    TIMES           reduce using rule 63 (var_aux_2 -> LBRACKET exp RBRACKET .)
    DIVIDE          reduce using rule 63 (var_aux_2 -> LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 63 (var_aux_2 -> LBRACKET exp RBRACKET .)
    MINUS           reduce using rule 63 (var_aux_2 -> LBRACKET exp RBRACKET .)
    RELOP           reduce using rule 63 (var_aux_2 -> LBRACKET exp RBRACKET .)
    AND             reduce using rule 63 (var_aux_2 -> LBRACKET exp RBRACKET .)
    OR              reduce using rule 63 (var_aux_2 -> LBRACKET exp RBRACKET .)
    COMMA           reduce using rule 63 (var_aux_2 -> LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 63 (var_aux_2 -> LBRACKET exp RBRACKET .)
    RBRACKET        reduce using rule 63 (var_aux_2 -> LBRACKET exp RBRACKET .)
    LBRACKET        shift and go to state 223


state 197

    (67) call -> ID LPAREN call_aux RPAREN .

    SEMICOLON       reduce using rule 67 (call -> ID LPAREN call_aux RPAREN .)
    TIMES           reduce using rule 67 (call -> ID LPAREN call_aux RPAREN .)
    DIVIDE          reduce using rule 67 (call -> ID LPAREN call_aux RPAREN .)
    PLUS            reduce using rule 67 (call -> ID LPAREN call_aux RPAREN .)
    MINUS           reduce using rule 67 (call -> ID LPAREN call_aux RPAREN .)
    RELOP           reduce using rule 67 (call -> ID LPAREN call_aux RPAREN .)
    AND             reduce using rule 67 (call -> ID LPAREN call_aux RPAREN .)
    OR              reduce using rule 67 (call -> ID LPAREN call_aux RPAREN .)
    COMMA           reduce using rule 67 (call -> ID LPAREN call_aux RPAREN .)
    RPAREN          reduce using rule 67 (call -> ID LPAREN call_aux RPAREN .)
    RBRACKET        reduce using rule 67 (call -> ID LPAREN call_aux RPAREN .)


state 198

    (70) call_aux -> exp COMMA . call_aux
    (69) call_aux -> . exp
    (70) call_aux -> . exp COMMA call_aux
    (85) exp -> . n_exp
    (86) exp -> . n_exp OR push_op exp pop_op
    (87) n_exp -> . l_exp
    (88) n_exp -> . l_exp AND push_op n_exp pop_op
    (89) l_exp -> . a_exp
    (90) l_exp -> . a_exp RELOP push_op a_exp pop_op
    (91) a_exp -> . term
    (92) a_exp -> . term PLUS push_op a_exp pop_op
    (93) a_exp -> . term MINUS push_op a_exp pop_op
    (94) term -> . factor
    (95) term -> . factor TIMES push_op term pop_op
    (96) term -> . factor DIVIDE push_op term pop_op
    (97) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (98) factor -> . call
    (99) factor -> . factor_aux
    (65) call -> . ID LPAREN RPAREN
    (66) call -> . ID POINT ID LPAREN RPAREN
    (67) call -> . ID LPAREN call_aux RPAREN
    (68) call -> . ID POINT ID LPAREN call_aux RPAREN
    (100) factor_aux -> . cte
    (101) factor_aux -> . PLUS cte
    (102) factor_aux -> . MINUS cte
    (103) cte -> . var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var
    (58) var -> . ID push_var
    (59) var -> . ID var_aux

    LPAREN          shift and go to state 129
    ID              shift and go to state 142
    PLUS            shift and go to state 137
    MINUS           shift and go to state 138
    CTEI            shift and go to state 145
    CTEF            shift and go to state 146
    CTECHAR         shift and go to state 147

    exp                            shift and go to state 164
    call_aux                       shift and go to state 224
    n_exp                          shift and go to state 133
    l_exp                          shift and go to state 134
    a_exp                          shift and go to state 135
    term                           shift and go to state 136
    factor                         shift and go to state 139
    call                           shift and go to state 140
    factor_aux                     shift and go to state 141
    cte                            shift and go to state 143
    var                            shift and go to state 144

state 199

    (66) call -> ID POINT ID LPAREN . RPAREN
    (68) call -> ID POINT ID LPAREN . call_aux RPAREN
    (69) call_aux -> . exp
    (70) call_aux -> . exp COMMA call_aux
    (85) exp -> . n_exp
    (86) exp -> . n_exp OR push_op exp pop_op
    (87) n_exp -> . l_exp
    (88) n_exp -> . l_exp AND push_op n_exp pop_op
    (89) l_exp -> . a_exp
    (90) l_exp -> . a_exp RELOP push_op a_exp pop_op
    (91) a_exp -> . term
    (92) a_exp -> . term PLUS push_op a_exp pop_op
    (93) a_exp -> . term MINUS push_op a_exp pop_op
    (94) term -> . factor
    (95) term -> . factor TIMES push_op term pop_op
    (96) term -> . factor DIVIDE push_op term pop_op
    (97) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (98) factor -> . call
    (99) factor -> . factor_aux
    (65) call -> . ID LPAREN RPAREN
    (66) call -> . ID POINT ID LPAREN RPAREN
    (67) call -> . ID LPAREN call_aux RPAREN
    (68) call -> . ID POINT ID LPAREN call_aux RPAREN
    (100) factor_aux -> . cte
    (101) factor_aux -> . PLUS cte
    (102) factor_aux -> . MINUS cte
    (103) cte -> . var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var
    (58) var -> . ID push_var
    (59) var -> . ID var_aux

    RPAREN          shift and go to state 225
    LPAREN          shift and go to state 129
    ID              shift and go to state 142
    PLUS            shift and go to state 137
    MINUS           shift and go to state 138
    CTEI            shift and go to state 145
    CTEF            shift and go to state 146
    CTECHAR         shift and go to state 147

    call_aux                       shift and go to state 226
    exp                            shift and go to state 164
    n_exp                          shift and go to state 133
    l_exp                          shift and go to state 134
    a_exp                          shift and go to state 135
    term                           shift and go to state 136
    factor                         shift and go to state 139
    call                           shift and go to state 140
    factor_aux                     shift and go to state 141
    cte                            shift and go to state 143
    var                            shift and go to state 144

state 200
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330


state 197

    (69) call_aux -> exp COMMA . call_aux
    (68) call_aux -> . exp
    (69) call_aux -> . exp COMMA call_aux
    (84) exp -> . n_exp pop_op
    (85) exp -> . n_exp pop_op OR push_op exp
    (86) n_exp -> . l_exp pop_op
    (87) n_exp -> . l_exp pop_op AND push_op n_exp
    (88) l_exp -> . a_exp pop_op
    (89) l_exp -> . a_exp pop_op RELOP push_op a_exp
    (90) a_exp -> . term pop_op
    (91) a_exp -> . term pop_op PLUS push_op a_exp
    (92) a_exp -> . term pop_op MINUS push_op a_exp
    (93) term -> . factor pop_op
    (94) term -> . factor pop_op TIMES push_op term
    (95) term -> . factor pop_op DIVIDE push_op term
    (96) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (97) factor -> . call
    (98) factor -> . factor_aux
    (64) call -> . ID LPAREN RPAREN
    (65) call -> . ID POINT ID LPAREN RPAREN
    (66) call -> . ID LPAREN call_aux RPAREN
    (67) call -> . ID POINT ID LPAREN call_aux RPAREN
    (99) factor_aux -> . cte
    (100) factor_aux -> . PLUS cte
    (101) factor_aux -> . MINUS cte
    (102) cte -> . ID push_var
    (103) cte -> . ID var_aux push_var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 134
    ID              shift and go to state 125
    PLUS            shift and go to state 131
    MINUS           shift and go to state 132
    CTEI            shift and go to state 138
    CTEF            shift and go to state 139
    CTECHAR         shift and go to state 140

    exp                            shift and go to state 161
    call_aux                       shift and go to state 224
    n_exp                          shift and go to state 127
    l_exp                          shift and go to state 128
    a_exp                          shift and go to state 129
    term                           shift and go to state 130
    factor                         shift and go to state 133
    call                           shift and go to state 135
    factor_aux                     shift and go to state 136
    cte                            shift and go to state 137

state 201

<<<<<<< HEAD
    (65) call -> ID POINT ID LPAREN . RPAREN
    (67) call -> ID POINT ID LPAREN . call_aux RPAREN
    (68) call_aux -> . exp
    (69) call_aux -> . exp COMMA call_aux
    (84) exp -> . n_exp pop_op
    (85) exp -> . n_exp pop_op OR push_op exp
    (86) n_exp -> . l_exp pop_op
    (87) n_exp -> . l_exp pop_op AND push_op n_exp
    (88) l_exp -> . a_exp pop_op
    (89) l_exp -> . a_exp pop_op RELOP push_op a_exp
    (90) a_exp -> . term pop_op
    (91) a_exp -> . term pop_op PLUS push_op a_exp
    (92) a_exp -> . term pop_op MINUS push_op a_exp
    (93) term -> . factor pop_op
    (94) term -> . factor pop_op TIMES push_op term
    (95) term -> . factor pop_op DIVIDE push_op term
    (96) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (97) factor -> . call
    (98) factor -> . factor_aux
    (64) call -> . ID LPAREN RPAREN
    (65) call -> . ID POINT ID LPAREN RPAREN
    (66) call -> . ID LPAREN call_aux RPAREN
    (67) call -> . ID POINT ID LPAREN call_aux RPAREN
    (99) factor_aux -> . cte
    (100) factor_aux -> . PLUS cte
    (101) factor_aux -> . MINUS cte
    (102) cte -> . ID push_var
    (103) cte -> . ID var_aux push_var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var

    RPAREN          shift and go to state 225
    LPAREN          shift and go to state 134
    ID              shift and go to state 125
    PLUS            shift and go to state 131
    MINUS           shift and go to state 132
    CTEI            shift and go to state 138
    CTEF            shift and go to state 139
    CTECHAR         shift and go to state 140

    call_aux                       shift and go to state 226
    exp                            shift and go to state 161
    n_exp                          shift and go to state 127
    l_exp                          shift and go to state 128
    a_exp                          shift and go to state 129
    term                           shift and go to state 130
    factor                         shift and go to state 133
    call                           shift and go to state 135
    factor_aux                     shift and go to state 136
    cte                            shift and go to state 137
=======
    (97) factor -> LPAREN push_paren exp . RPAREN pop_paren

    RPAREN          shift and go to state 227

>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

state 202

    (65) call -> ID POINT ID . LPAREN RPAREN
    (67) call -> ID POINT ID . LPAREN call_aux RPAREN
    (59) var_aux -> POINT ID .
    (60) var_aux -> POINT ID . var_aux_2
    (62) var_aux_2 -> . LBRACKET exp RBRACKET
    (63) var_aux_2 -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET

    LPAREN          shift and go to state 198
    TIMES           reduce using rule 59 (var_aux -> POINT ID .)
    DIVIDE          reduce using rule 59 (var_aux -> POINT ID .)
    PLUS            reduce using rule 59 (var_aux -> POINT ID .)
    MINUS           reduce using rule 59 (var_aux -> POINT ID .)
    RELOP           reduce using rule 59 (var_aux -> POINT ID .)
    AND             reduce using rule 59 (var_aux -> POINT ID .)
    OR              reduce using rule 59 (var_aux -> POINT ID .)
    SEMICOLON       reduce using rule 59 (var_aux -> POINT ID .)
    RPAREN          reduce using rule 59 (var_aux -> POINT ID .)
    RBRACKET        reduce using rule 59 (var_aux -> POINT ID .)
    COMMA           reduce using rule 59 (var_aux -> POINT ID .)
    LBRACKET        shift and go to state 105

    var_aux_2                      shift and go to state 179

state 203

    (103) cte -> ID var_aux push_var .

    TIMES           reduce using rule 103 (cte -> ID var_aux push_var .)
    DIVIDE          reduce using rule 103 (cte -> ID var_aux push_var .)
    PLUS            reduce using rule 103 (cte -> ID var_aux push_var .)
    MINUS           reduce using rule 103 (cte -> ID var_aux push_var .)
    RELOP           reduce using rule 103 (cte -> ID var_aux push_var .)
    AND             reduce using rule 103 (cte -> ID var_aux push_var .)
    OR              reduce using rule 103 (cte -> ID var_aux push_var .)
    SEMICOLON       reduce using rule 103 (cte -> ID var_aux push_var .)
    RPAREN          reduce using rule 103 (cte -> ID var_aux push_var .)
    RBRACKET        reduce using rule 103 (cte -> ID var_aux push_var .)
    COMMA           reduce using rule 103 (cte -> ID var_aux push_var .)


state 204

    (85) exp -> n_exp pop_op OR . push_op exp
    (120) push_op -> .

    LPAREN          reduce using rule 120 (push_op -> .)
    ID              reduce using rule 120 (push_op -> .)
    PLUS            reduce using rule 120 (push_op -> .)
    MINUS           reduce using rule 120 (push_op -> .)
    CTEI            reduce using rule 120 (push_op -> .)
    CTEF            reduce using rule 120 (push_op -> .)
    CTECHAR         reduce using rule 120 (push_op -> .)

    push_op                        shift and go to state 227

<<<<<<< HEAD
state 202

    (87) n_exp -> l_exp pop_op AND . push_op n_exp
    (120) push_op -> .

    LPAREN          reduce using rule 120 (push_op -> .)
    ID              reduce using rule 120 (push_op -> .)
    PLUS            reduce using rule 120 (push_op -> .)
    MINUS           reduce using rule 120 (push_op -> .)
    CTEI            reduce using rule 120 (push_op -> .)
    CTEF            reduce using rule 120 (push_op -> .)
    CTECHAR         reduce using rule 120 (push_op -> .)

    push_op                        shift and go to state 228

state 203

    (89) l_exp -> a_exp pop_op RELOP . push_op a_exp
    (120) push_op -> .

    LPAREN          reduce using rule 120 (push_op -> .)
    ID              reduce using rule 120 (push_op -> .)
    PLUS            reduce using rule 120 (push_op -> .)
    MINUS           reduce using rule 120 (push_op -> .)
    CTEI            reduce using rule 120 (push_op -> .)
    CTEF            reduce using rule 120 (push_op -> .)
    CTECHAR         reduce using rule 120 (push_op -> .)

    push_op                        shift and go to state 229
=======
state 205
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    (86) exp -> n_exp OR push_op . exp pop_op
    (85) exp -> . n_exp
    (86) exp -> . n_exp OR push_op exp pop_op
    (87) n_exp -> . l_exp
    (88) n_exp -> . l_exp AND push_op n_exp pop_op
    (89) l_exp -> . a_exp
    (90) l_exp -> . a_exp RELOP push_op a_exp pop_op
    (91) a_exp -> . term
    (92) a_exp -> . term PLUS push_op a_exp pop_op
    (93) a_exp -> . term MINUS push_op a_exp pop_op
    (94) term -> . factor
    (95) term -> . factor TIMES push_op term pop_op
    (96) term -> . factor DIVIDE push_op term pop_op
    (97) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (98) factor -> . call
    (99) factor -> . factor_aux
    (65) call -> . ID LPAREN RPAREN
    (66) call -> . ID POINT ID LPAREN RPAREN
    (67) call -> . ID LPAREN call_aux RPAREN
    (68) call -> . ID POINT ID LPAREN call_aux RPAREN
    (100) factor_aux -> . cte
    (101) factor_aux -> . PLUS cte
    (102) factor_aux -> . MINUS cte
    (103) cte -> . var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var
    (58) var -> . ID push_var
    (59) var -> . ID var_aux

<<<<<<< HEAD
    (91) a_exp -> term pop_op PLUS . push_op a_exp
    (120) push_op -> .

    LPAREN          reduce using rule 120 (push_op -> .)
    ID              reduce using rule 120 (push_op -> .)
    PLUS            reduce using rule 120 (push_op -> .)
    MINUS           reduce using rule 120 (push_op -> .)
    CTEI            reduce using rule 120 (push_op -> .)
    CTEF            reduce using rule 120 (push_op -> .)
    CTECHAR         reduce using rule 120 (push_op -> .)

    push_op                        shift and go to state 230
=======
    LPAREN          shift and go to state 129
    ID              shift and go to state 142
    PLUS            shift and go to state 137
    MINUS           shift and go to state 138
    CTEI            shift and go to state 145
    CTEF            shift and go to state 146
    CTECHAR         shift and go to state 147

    n_exp                          shift and go to state 133
    exp                            shift and go to state 228
    l_exp                          shift and go to state 134
    a_exp                          shift and go to state 135
    term                           shift and go to state 136
    factor                         shift and go to state 139
    call                           shift and go to state 140
    factor_aux                     shift and go to state 141
    cte                            shift and go to state 143
    var                            shift and go to state 144

state 206

    (88) n_exp -> l_exp AND push_op . n_exp pop_op
    (87) n_exp -> . l_exp
    (88) n_exp -> . l_exp AND push_op n_exp pop_op
    (89) l_exp -> . a_exp
    (90) l_exp -> . a_exp RELOP push_op a_exp pop_op
    (91) a_exp -> . term
    (92) a_exp -> . term PLUS push_op a_exp pop_op
    (93) a_exp -> . term MINUS push_op a_exp pop_op
    (94) term -> . factor
    (95) term -> . factor TIMES push_op term pop_op
    (96) term -> . factor DIVIDE push_op term pop_op
    (97) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (98) factor -> . call
    (99) factor -> . factor_aux
    (65) call -> . ID LPAREN RPAREN
    (66) call -> . ID POINT ID LPAREN RPAREN
    (67) call -> . ID LPAREN call_aux RPAREN
    (68) call -> . ID POINT ID LPAREN call_aux RPAREN
    (100) factor_aux -> . cte
    (101) factor_aux -> . PLUS cte
    (102) factor_aux -> . MINUS cte
    (103) cte -> . var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var
    (58) var -> . ID push_var
    (59) var -> . ID var_aux
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    LPAREN          shift and go to state 129
    ID              shift and go to state 142
    PLUS            shift and go to state 137
    MINUS           shift and go to state 138
    CTEI            shift and go to state 145
    CTEF            shift and go to state 146
    CTECHAR         shift and go to state 147

    l_exp                          shift and go to state 134
    n_exp                          shift and go to state 229
    a_exp                          shift and go to state 135
    term                           shift and go to state 136
    factor                         shift and go to state 139
    call                           shift and go to state 140
    factor_aux                     shift and go to state 141
    cte                            shift and go to state 143
    var                            shift and go to state 144

<<<<<<< HEAD
    (92) a_exp -> term pop_op MINUS . push_op a_exp
    (120) push_op -> .

    LPAREN          reduce using rule 120 (push_op -> .)
    ID              reduce using rule 120 (push_op -> .)
    PLUS            reduce using rule 120 (push_op -> .)
    MINUS           reduce using rule 120 (push_op -> .)
    CTEI            reduce using rule 120 (push_op -> .)
    CTEF            reduce using rule 120 (push_op -> .)
    CTECHAR         reduce using rule 120 (push_op -> .)

    push_op                        shift and go to state 231
=======
state 207

    (90) l_exp -> a_exp RELOP push_op . a_exp pop_op
    (91) a_exp -> . term
    (92) a_exp -> . term PLUS push_op a_exp pop_op
    (93) a_exp -> . term MINUS push_op a_exp pop_op
    (94) term -> . factor
    (95) term -> . factor TIMES push_op term pop_op
    (96) term -> . factor DIVIDE push_op term pop_op
    (97) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (98) factor -> . call
    (99) factor -> . factor_aux
    (65) call -> . ID LPAREN RPAREN
    (66) call -> . ID POINT ID LPAREN RPAREN
    (67) call -> . ID LPAREN call_aux RPAREN
    (68) call -> . ID POINT ID LPAREN call_aux RPAREN
    (100) factor_aux -> . cte
    (101) factor_aux -> . PLUS cte
    (102) factor_aux -> . MINUS cte
    (103) cte -> . var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var
    (58) var -> . ID push_var
    (59) var -> . ID var_aux

    LPAREN          shift and go to state 129
    ID              shift and go to state 142
    PLUS            shift and go to state 137
    MINUS           shift and go to state 138
    CTEI            shift and go to state 145
    CTEF            shift and go to state 146
    CTECHAR         shift and go to state 147

    a_exp                          shift and go to state 230
    term                           shift and go to state 136
    factor                         shift and go to state 139
    call                           shift and go to state 140
    factor_aux                     shift and go to state 141
    cte                            shift and go to state 143
    var                            shift and go to state 144
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

state 208

<<<<<<< HEAD
    (94) term -> factor pop_op TIMES . push_op term
    (120) push_op -> .

    LPAREN          reduce using rule 120 (push_op -> .)
    ID              reduce using rule 120 (push_op -> .)
    PLUS            reduce using rule 120 (push_op -> .)
    MINUS           reduce using rule 120 (push_op -> .)
    CTEI            reduce using rule 120 (push_op -> .)
    CTEF            reduce using rule 120 (push_op -> .)
    CTECHAR         reduce using rule 120 (push_op -> .)

    push_op                        shift and go to state 232
=======
    (92) a_exp -> term PLUS push_op . a_exp pop_op
    (91) a_exp -> . term
    (92) a_exp -> . term PLUS push_op a_exp pop_op
    (93) a_exp -> . term MINUS push_op a_exp pop_op
    (94) term -> . factor
    (95) term -> . factor TIMES push_op term pop_op
    (96) term -> . factor DIVIDE push_op term pop_op
    (97) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (98) factor -> . call
    (99) factor -> . factor_aux
    (65) call -> . ID LPAREN RPAREN
    (66) call -> . ID POINT ID LPAREN RPAREN
    (67) call -> . ID LPAREN call_aux RPAREN
    (68) call -> . ID POINT ID LPAREN call_aux RPAREN
    (100) factor_aux -> . cte
    (101) factor_aux -> . PLUS cte
    (102) factor_aux -> . MINUS cte
    (103) cte -> . var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var
    (58) var -> . ID push_var
    (59) var -> . ID var_aux

    LPAREN          shift and go to state 129
    ID              shift and go to state 142
    PLUS            shift and go to state 137
    MINUS           shift and go to state 138
    CTEI            shift and go to state 145
    CTEF            shift and go to state 146
    CTECHAR         shift and go to state 147

    term                           shift and go to state 136
    a_exp                          shift and go to state 231
    factor                         shift and go to state 139
    call                           shift and go to state 140
    factor_aux                     shift and go to state 141
    cte                            shift and go to state 143
    var                            shift and go to state 144

state 209
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    (93) a_exp -> term MINUS push_op . a_exp pop_op
    (91) a_exp -> . term
    (92) a_exp -> . term PLUS push_op a_exp pop_op
    (93) a_exp -> . term MINUS push_op a_exp pop_op
    (94) term -> . factor
    (95) term -> . factor TIMES push_op term pop_op
    (96) term -> . factor DIVIDE push_op term pop_op
    (97) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (98) factor -> . call
    (99) factor -> . factor_aux
    (65) call -> . ID LPAREN RPAREN
    (66) call -> . ID POINT ID LPAREN RPAREN
    (67) call -> . ID LPAREN call_aux RPAREN
    (68) call -> . ID POINT ID LPAREN call_aux RPAREN
    (100) factor_aux -> . cte
    (101) factor_aux -> . PLUS cte
    (102) factor_aux -> . MINUS cte
    (103) cte -> . var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var
    (58) var -> . ID push_var
    (59) var -> . ID var_aux

<<<<<<< HEAD
    (95) term -> factor pop_op DIVIDE . push_op term
    (120) push_op -> .

    LPAREN          reduce using rule 120 (push_op -> .)
    ID              reduce using rule 120 (push_op -> .)
    PLUS            reduce using rule 120 (push_op -> .)
    MINUS           reduce using rule 120 (push_op -> .)
    CTEI            reduce using rule 120 (push_op -> .)
    CTEF            reduce using rule 120 (push_op -> .)
    CTECHAR         reduce using rule 120 (push_op -> .)

    push_op                        shift and go to state 233
=======
    LPAREN          shift and go to state 129
    ID              shift and go to state 142
    PLUS            shift and go to state 137
    MINUS           shift and go to state 138
    CTEI            shift and go to state 145
    CTEF            shift and go to state 146
    CTECHAR         shift and go to state 147

    term                           shift and go to state 136
    a_exp                          shift and go to state 232
    factor                         shift and go to state 139
    call                           shift and go to state 140
    factor_aux                     shift and go to state 141
    cte                            shift and go to state 143
    var                            shift and go to state 144

state 210

    (95) term -> factor TIMES push_op . term pop_op
    (94) term -> . factor
    (95) term -> . factor TIMES push_op term pop_op
    (96) term -> . factor DIVIDE push_op term pop_op
    (97) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (98) factor -> . call
    (99) factor -> . factor_aux
    (65) call -> . ID LPAREN RPAREN
    (66) call -> . ID POINT ID LPAREN RPAREN
    (67) call -> . ID LPAREN call_aux RPAREN
    (68) call -> . ID POINT ID LPAREN call_aux RPAREN
    (100) factor_aux -> . cte
    (101) factor_aux -> . PLUS cte
    (102) factor_aux -> . MINUS cte
    (103) cte -> . var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var
    (58) var -> . ID push_var
    (59) var -> . ID var_aux
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    LPAREN          shift and go to state 129
    ID              shift and go to state 142
    PLUS            shift and go to state 137
    MINUS           shift and go to state 138
    CTEI            shift and go to state 145
    CTEF            shift and go to state 146
    CTECHAR         shift and go to state 147

    factor                         shift and go to state 139
    term                           shift and go to state 233
    call                           shift and go to state 140
    factor_aux                     shift and go to state 141
    cte                            shift and go to state 143
    var                            shift and go to state 144

<<<<<<< HEAD
    (96) factor -> LPAREN push_paren exp . RPAREN pop_paren

    RPAREN          shift and go to state 234
=======
state 211

    (96) term -> factor DIVIDE push_op . term pop_op
    (94) term -> . factor
    (95) term -> . factor TIMES push_op term pop_op
    (96) term -> . factor DIVIDE push_op term pop_op
    (97) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (98) factor -> . call
    (99) factor -> . factor_aux
    (65) call -> . ID LPAREN RPAREN
    (66) call -> . ID POINT ID LPAREN RPAREN
    (67) call -> . ID LPAREN call_aux RPAREN
    (68) call -> . ID POINT ID LPAREN call_aux RPAREN
    (100) factor_aux -> . cte
    (101) factor_aux -> . PLUS cte
    (102) factor_aux -> . MINUS cte
    (103) cte -> . var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var
    (58) var -> . ID push_var
    (59) var -> . ID var_aux
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    LPAREN          shift and go to state 129
    ID              shift and go to state 142
    PLUS            shift and go to state 137
    MINUS           shift and go to state 138
    CTEI            shift and go to state 145
    CTEF            shift and go to state 146
    CTECHAR         shift and go to state 147

    factor                         shift and go to state 139
    term                           shift and go to state 234
    call                           shift and go to state 140
    factor_aux                     shift and go to state 141
    cte                            shift and go to state 143
    var                            shift and go to state 144

state 212

<<<<<<< HEAD
    (63) var_aux_2 -> LBRACKET exp RBRACKET LBRACKET . exp RBRACKET
    (84) exp -> . n_exp pop_op
    (85) exp -> . n_exp pop_op OR push_op exp
    (86) n_exp -> . l_exp pop_op
    (87) n_exp -> . l_exp pop_op AND push_op n_exp
    (88) l_exp -> . a_exp pop_op
    (89) l_exp -> . a_exp pop_op RELOP push_op a_exp
    (90) a_exp -> . term pop_op
    (91) a_exp -> . term pop_op PLUS push_op a_exp
    (92) a_exp -> . term pop_op MINUS push_op a_exp
    (93) term -> . factor pop_op
    (94) term -> . factor pop_op TIMES push_op term
    (95) term -> . factor pop_op DIVIDE push_op term
    (96) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (97) factor -> . call
    (98) factor -> . factor_aux
    (64) call -> . ID LPAREN RPAREN
    (65) call -> . ID POINT ID LPAREN RPAREN
    (66) call -> . ID LPAREN call_aux RPAREN
    (67) call -> . ID POINT ID LPAREN call_aux RPAREN
    (99) factor_aux -> . cte
    (100) factor_aux -> . PLUS cte
    (101) factor_aux -> . MINUS cte
    (102) cte -> . ID push_var
    (103) cte -> . ID var_aux push_var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 134
    ID              shift and go to state 125
    PLUS            shift and go to state 131
    MINUS           shift and go to state 132
    CTEI            shift and go to state 138
    CTEF            shift and go to state 139
    CTECHAR         shift and go to state 140

    exp                            shift and go to state 235
    n_exp                          shift and go to state 127
    l_exp                          shift and go to state 128
    a_exp                          shift and go to state 129
    term                           shift and go to state 130
    factor                         shift and go to state 133
    call                           shift and go to state 135
    factor_aux                     shift and go to state 136
    cte                            shift and go to state 137
=======
    (66) call -> ID POINT ID . LPAREN RPAREN
    (68) call -> ID POINT ID . LPAREN call_aux RPAREN
    (60) var_aux -> POINT ID .
    (61) var_aux -> POINT ID . var_aux_2
    (63) var_aux_2 -> . LBRACKET exp RBRACKET
    (64) var_aux_2 -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET

    LPAREN          shift and go to state 199
    TIMES           reduce using rule 60 (var_aux -> POINT ID .)
    DIVIDE          reduce using rule 60 (var_aux -> POINT ID .)
    PLUS            reduce using rule 60 (var_aux -> POINT ID .)
    MINUS           reduce using rule 60 (var_aux -> POINT ID .)
    RELOP           reduce using rule 60 (var_aux -> POINT ID .)
    AND             reduce using rule 60 (var_aux -> POINT ID .)
    OR              reduce using rule 60 (var_aux -> POINT ID .)
    COMMA           reduce using rule 60 (var_aux -> POINT ID .)
    RPAREN          reduce using rule 60 (var_aux -> POINT ID .)
    SEMICOLON       reduce using rule 60 (var_aux -> POINT ID .)
    RBRACKET        reduce using rule 60 (var_aux -> POINT ID .)
    LBRACKET        shift and go to state 124

    var_aux_2                      shift and go to state 195
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

state 213

    (76) read -> READ LPAREN ID RPAREN SEMICOLON .

<<<<<<< HEAD
    CALL            reduce using rule 76 (read -> READ LPAREN ID RPAREN SEMICOLON .)
    ID              reduce using rule 76 (read -> READ LPAREN ID RPAREN SEMICOLON .)
    READ            reduce using rule 76 (read -> READ LPAREN ID RPAREN SEMICOLON .)
    WRITE           reduce using rule 76 (read -> READ LPAREN ID RPAREN SEMICOLON .)
    IF              reduce using rule 76 (read -> READ LPAREN ID RPAREN SEMICOLON .)
    WHILE           reduce using rule 76 (read -> READ LPAREN ID RPAREN SEMICOLON .)
    FROM            reduce using rule 76 (read -> READ LPAREN ID RPAREN SEMICOLON .)
    RBRACE          reduce using rule 76 (read -> READ LPAREN ID RPAREN SEMICOLON .)
    RETURN          reduce using rule 76 (read -> READ LPAREN ID RPAREN SEMICOLON .)
=======
    LBRACE          shift and go to state 235
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330


state 214

    (77) write -> WRITE LPAREN write_aux RPAREN SEMICOLON .

<<<<<<< HEAD
    CALL            reduce using rule 77 (write -> WRITE LPAREN write_aux RPAREN SEMICOLON .)
    ID              reduce using rule 77 (write -> WRITE LPAREN write_aux RPAREN SEMICOLON .)
    READ            reduce using rule 77 (write -> WRITE LPAREN write_aux RPAREN SEMICOLON .)
    WRITE           reduce using rule 77 (write -> WRITE LPAREN write_aux RPAREN SEMICOLON .)
    IF              reduce using rule 77 (write -> WRITE LPAREN write_aux RPAREN SEMICOLON .)
    WHILE           reduce using rule 77 (write -> WRITE LPAREN write_aux RPAREN SEMICOLON .)
    FROM            reduce using rule 77 (write -> WRITE LPAREN write_aux RPAREN SEMICOLON .)
    RBRACE          reduce using rule 77 (write -> WRITE LPAREN write_aux RPAREN SEMICOLON .)
    RETURN          reduce using rule 77 (write -> WRITE LPAREN write_aux RPAREN SEMICOLON .)
=======
    LBRACE          shift and go to state 236
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330


state 215

    (79) write_aux -> exp COMMA write_aux .

<<<<<<< HEAD
    RPAREN          reduce using rule 79 (write_aux -> exp COMMA write_aux .)
=======
    LPAREN          shift and go to state 237
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330


state 216

<<<<<<< HEAD
    (81) write_aux -> CTESTRING COMMA write_aux .

    RPAREN          reduce using rule 81 (write_aux -> CTESTRING COMMA write_aux .)

=======
    (21) vars_simple_type_aux -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET . add_matrix_variable
    (112) add_matrix_variable -> .

    COMMA           reduce using rule 112 (add_matrix_variable -> .)
    SEMICOLON       reduce using rule 112 (add_matrix_variable -> .)

    add_matrix_variable            shift and go to state 238
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

state 217

    (71) condition_aux -> LPAREN exp RPAREN THEN . LBRACE statutes_aux RBRACE condition_aux_3
    (73) condition_aux_2 -> LPAREN exp RPAREN THEN . LBRACE statutes_aux RBRACE ELIF condition_aux

    LBRACE          shift and go to state 236


state 215

    (82) while -> WHILE LPAREN exp RPAREN DO . LBRACE statutes_aux RBRACE

    LBRACE          shift and go to state 237


state 216

    (83) for -> FROM LPAREN assignation RPAREN UNTIL . LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    LPAREN          shift and go to state 238


state 217

    (21) vars_simple_type_aux -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET . add_matrix_variable
    (112) add_matrix_variable -> .

    COMMA           reduce using rule 112 (add_matrix_variable -> .)
    SEMICOLON       reduce using rule 112 (add_matrix_variable -> .)

    add_matrix_variable            shift and go to state 239

state 218

    (44) body -> LBRACE dec_vars statutes_aux . RBRACE
    (47) body -> LBRACE dec_vars statutes_aux . RETURN ID SEMICOLON RBRACE

<<<<<<< HEAD
    RBRACE          shift and go to state 240
    RETURN          shift and go to state 241


state 219
=======
    RBRACE          shift and go to state 239
    RETURN          shift and go to state 240


state 218
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    (45) body -> LBRACE statutes_aux RBRACE .

    FUNCT           reduce using rule 45 (body -> LBRACE statutes_aux RBRACE .)
    RBRACE          reduce using rule 45 (body -> LBRACE statutes_aux RBRACE .)
    INIT            reduce using rule 45 (body -> LBRACE statutes_aux RBRACE .)


<<<<<<< HEAD
state 220

    (46) body -> LBRACE statutes_aux RETURN . ID SEMICOLON RBRACE

    ID              shift and go to state 242


state 221
=======
state 219

    (46) body -> LBRACE statutes_aux RETURN . ID SEMICOLON RBRACE

    ID              shift and go to state 241


state 220
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    (39) params -> simple_type ID add_variable COMMA . params
    (38) params -> . simple_type ID add_variable
    (39) params -> . simple_type ID add_variable COMMA params
    (40) params -> . simple_type ID params_aux
    (41) params -> . simple_type ID params_aux COMMA params
    (22) simple_type -> . INT
    (23) simple_type -> . FLOAT
    (24) simple_type -> . CHAR

    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    CHAR            shift and go to state 38

<<<<<<< HEAD
    simple_type                    shift and go to state 118
    params                         shift and go to state 243

state 222
=======
    simple_type                    shift and go to state 114
    params                         shift and go to state 242

state 221
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    (41) params -> simple_type ID params_aux COMMA . params
    (38) params -> . simple_type ID add_variable
    (39) params -> . simple_type ID add_variable COMMA params
    (40) params -> . simple_type ID params_aux
    (41) params -> . simple_type ID params_aux COMMA params
    (22) simple_type -> . INT
    (23) simple_type -> . FLOAT
    (24) simple_type -> . CHAR

    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    CHAR            shift and go to state 38

<<<<<<< HEAD
    simple_type                    shift and go to state 118
    params                         shift and go to state 244

state 223
=======
    simple_type                    shift and go to state 114
    params                         shift and go to state 243

state 222
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    (42) params_aux -> LBRACKET RBRACKET . add_array_var_params
    (43) params_aux -> LBRACKET RBRACKET . LBRACKET RBRACKET add_matrix_var_params
    (113) add_array_var_params -> .

<<<<<<< HEAD
    LBRACKET        shift and go to state 245
    COMMA           reduce using rule 113 (add_array_var_params -> .)
    RPAREN          reduce using rule 113 (add_array_var_params -> .)

    add_array_var_params           shift and go to state 246

state 224

    (69) call_aux -> exp COMMA call_aux .

    RPAREN          reduce using rule 69 (call_aux -> exp COMMA call_aux .)

=======
    LBRACKET        shift and go to state 244
    COMMA           reduce using rule 113 (add_array_var_params -> .)
    RPAREN          reduce using rule 113 (add_array_var_params -> .)

    add_array_var_params           shift and go to state 245

state 223

    (64) var_aux_2 -> LBRACKET exp RBRACKET LBRACKET . exp RBRACKET
    (85) exp -> . n_exp
    (86) exp -> . n_exp OR push_op exp pop_op
    (87) n_exp -> . l_exp
    (88) n_exp -> . l_exp AND push_op n_exp pop_op
    (89) l_exp -> . a_exp
    (90) l_exp -> . a_exp RELOP push_op a_exp pop_op
    (91) a_exp -> . term
    (92) a_exp -> . term PLUS push_op a_exp pop_op
    (93) a_exp -> . term MINUS push_op a_exp pop_op
    (94) term -> . factor
    (95) term -> . factor TIMES push_op term pop_op
    (96) term -> . factor DIVIDE push_op term pop_op
    (97) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (98) factor -> . call
    (99) factor -> . factor_aux
    (65) call -> . ID LPAREN RPAREN
    (66) call -> . ID POINT ID LPAREN RPAREN
    (67) call -> . ID LPAREN call_aux RPAREN
    (68) call -> . ID POINT ID LPAREN call_aux RPAREN
    (100) factor_aux -> . cte
    (101) factor_aux -> . PLUS cte
    (102) factor_aux -> . MINUS cte
    (103) cte -> . var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var
    (58) var -> . ID push_var
    (59) var -> . ID var_aux

    LPAREN          shift and go to state 129
    ID              shift and go to state 142
    PLUS            shift and go to state 137
    MINUS           shift and go to state 138
    CTEI            shift and go to state 145
    CTEF            shift and go to state 146
    CTECHAR         shift and go to state 147

    exp                            shift and go to state 246
    n_exp                          shift and go to state 133
    l_exp                          shift and go to state 134
    a_exp                          shift and go to state 135
    term                           shift and go to state 136
    factor                         shift and go to state 139
    call                           shift and go to state 140
    factor_aux                     shift and go to state 141
    cte                            shift and go to state 143
    var                            shift and go to state 144

state 224
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

state 225

    (65) call -> ID POINT ID LPAREN RPAREN .

    SEMICOLON       reduce using rule 65 (call -> ID POINT ID LPAREN RPAREN .)
    TIMES           reduce using rule 65 (call -> ID POINT ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 65 (call -> ID POINT ID LPAREN RPAREN .)
    PLUS            reduce using rule 65 (call -> ID POINT ID LPAREN RPAREN .)
    MINUS           reduce using rule 65 (call -> ID POINT ID LPAREN RPAREN .)
    RELOP           reduce using rule 65 (call -> ID POINT ID LPAREN RPAREN .)
    AND             reduce using rule 65 (call -> ID POINT ID LPAREN RPAREN .)
    OR              reduce using rule 65 (call -> ID POINT ID LPAREN RPAREN .)
    RPAREN          reduce using rule 65 (call -> ID POINT ID LPAREN RPAREN .)
    RBRACKET        reduce using rule 65 (call -> ID POINT ID LPAREN RPAREN .)
    COMMA           reduce using rule 65 (call -> ID POINT ID LPAREN RPAREN .)

<<<<<<< HEAD
=======
state 225
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

state 226

    (67) call -> ID POINT ID LPAREN call_aux . RPAREN

    RPAREN          shift and go to state 247

<<<<<<< HEAD
=======
state 226
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

state 227

<<<<<<< HEAD
    (85) exp -> n_exp pop_op OR push_op . exp
    (84) exp -> . n_exp pop_op
    (85) exp -> . n_exp pop_op OR push_op exp
    (86) n_exp -> . l_exp pop_op
    (87) n_exp -> . l_exp pop_op AND push_op n_exp
    (88) l_exp -> . a_exp pop_op
    (89) l_exp -> . a_exp pop_op RELOP push_op a_exp
    (90) a_exp -> . term pop_op
    (91) a_exp -> . term pop_op PLUS push_op a_exp
    (92) a_exp -> . term pop_op MINUS push_op a_exp
    (93) term -> . factor pop_op
    (94) term -> . factor pop_op TIMES push_op term
    (95) term -> . factor pop_op DIVIDE push_op term
    (96) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (97) factor -> . call
    (98) factor -> . factor_aux
    (64) call -> . ID LPAREN RPAREN
    (65) call -> . ID POINT ID LPAREN RPAREN
    (66) call -> . ID LPAREN call_aux RPAREN
    (67) call -> . ID POINT ID LPAREN call_aux RPAREN
    (99) factor_aux -> . cte
    (100) factor_aux -> . PLUS cte
    (101) factor_aux -> . MINUS cte
    (102) cte -> . ID push_var
    (103) cte -> . ID var_aux push_var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 134
    ID              shift and go to state 125
    PLUS            shift and go to state 131
    MINUS           shift and go to state 132
    CTEI            shift and go to state 138
    CTEF            shift and go to state 139
    CTECHAR         shift and go to state 140

    n_exp                          shift and go to state 127
    exp                            shift and go to state 248
    l_exp                          shift and go to state 128
    a_exp                          shift and go to state 129
    term                           shift and go to state 130
    factor                         shift and go to state 133
    call                           shift and go to state 135
    factor_aux                     shift and go to state 136
    cte                            shift and go to state 137
=======
    RPAREN          shift and go to state 247
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

state 228

<<<<<<< HEAD
    (87) n_exp -> l_exp pop_op AND push_op . n_exp
    (86) n_exp -> . l_exp pop_op
    (87) n_exp -> . l_exp pop_op AND push_op n_exp
    (88) l_exp -> . a_exp pop_op
    (89) l_exp -> . a_exp pop_op RELOP push_op a_exp
    (90) a_exp -> . term pop_op
    (91) a_exp -> . term pop_op PLUS push_op a_exp
    (92) a_exp -> . term pop_op MINUS push_op a_exp
    (93) term -> . factor pop_op
    (94) term -> . factor pop_op TIMES push_op term
    (95) term -> . factor pop_op DIVIDE push_op term
    (96) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (97) factor -> . call
    (98) factor -> . factor_aux
    (64) call -> . ID LPAREN RPAREN
    (65) call -> . ID POINT ID LPAREN RPAREN
    (66) call -> . ID LPAREN call_aux RPAREN
    (67) call -> . ID POINT ID LPAREN call_aux RPAREN
    (99) factor_aux -> . cte
    (100) factor_aux -> . PLUS cte
    (101) factor_aux -> . MINUS cte
    (102) cte -> . ID push_var
    (103) cte -> . ID var_aux push_var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 134
    ID              shift and go to state 125
    PLUS            shift and go to state 131
    MINUS           shift and go to state 132
    CTEI            shift and go to state 138
    CTEF            shift and go to state 139
    CTECHAR         shift and go to state 140

    l_exp                          shift and go to state 128
    n_exp                          shift and go to state 249
    a_exp                          shift and go to state 129
    term                           shift and go to state 130
    factor                         shift and go to state 133
    call                           shift and go to state 135
    factor_aux                     shift and go to state 136
    cte                            shift and go to state 137
=======
state 227

    (97) factor -> LPAREN push_paren exp RPAREN . pop_paren
    (123) pop_paren -> .

    TIMES           reduce using rule 123 (pop_paren -> .)
    DIVIDE          reduce using rule 123 (pop_paren -> .)
    PLUS            reduce using rule 123 (pop_paren -> .)
    MINUS           reduce using rule 123 (pop_paren -> .)
    RELOP           reduce using rule 123 (pop_paren -> .)
    AND             reduce using rule 123 (pop_paren -> .)
    OR              reduce using rule 123 (pop_paren -> .)
    COMMA           reduce using rule 123 (pop_paren -> .)
    RPAREN          reduce using rule 123 (pop_paren -> .)
    SEMICOLON       reduce using rule 123 (pop_paren -> .)
    RBRACKET        reduce using rule 123 (pop_paren -> .)

    pop_paren                      shift and go to state 248

state 228

    (86) exp -> n_exp OR push_op exp . pop_op
    (121) pop_op -> .

    COMMA           reduce using rule 121 (pop_op -> .)
    RPAREN          reduce using rule 121 (pop_op -> .)
    SEMICOLON       reduce using rule 121 (pop_op -> .)
    RBRACKET        reduce using rule 121 (pop_op -> .)

    pop_op                         shift and go to state 249

state 229

    (88) n_exp -> l_exp AND push_op n_exp . pop_op
    (121) pop_op -> .

    OR              reduce using rule 121 (pop_op -> .)
    COMMA           reduce using rule 121 (pop_op -> .)
    RPAREN          reduce using rule 121 (pop_op -> .)
    SEMICOLON       reduce using rule 121 (pop_op -> .)
    RBRACKET        reduce using rule 121 (pop_op -> .)

    pop_op                         shift and go to state 250

state 230

    (90) l_exp -> a_exp RELOP push_op a_exp . pop_op
    (121) pop_op -> .

    AND             reduce using rule 121 (pop_op -> .)
    OR              reduce using rule 121 (pop_op -> .)
    COMMA           reduce using rule 121 (pop_op -> .)
    RPAREN          reduce using rule 121 (pop_op -> .)
    SEMICOLON       reduce using rule 121 (pop_op -> .)
    RBRACKET        reduce using rule 121 (pop_op -> .)

    pop_op                         shift and go to state 251

state 231

    (92) a_exp -> term PLUS push_op a_exp . pop_op
    (121) pop_op -> .

    RELOP           reduce using rule 121 (pop_op -> .)
    AND             reduce using rule 121 (pop_op -> .)
    OR              reduce using rule 121 (pop_op -> .)
    COMMA           reduce using rule 121 (pop_op -> .)
    RPAREN          reduce using rule 121 (pop_op -> .)
    SEMICOLON       reduce using rule 121 (pop_op -> .)
    RBRACKET        reduce using rule 121 (pop_op -> .)

    pop_op                         shift and go to state 252

state 232

    (93) a_exp -> term MINUS push_op a_exp . pop_op
    (121) pop_op -> .

    RELOP           reduce using rule 121 (pop_op -> .)
    AND             reduce using rule 121 (pop_op -> .)
    OR              reduce using rule 121 (pop_op -> .)
    COMMA           reduce using rule 121 (pop_op -> .)
    RPAREN          reduce using rule 121 (pop_op -> .)
    SEMICOLON       reduce using rule 121 (pop_op -> .)
    RBRACKET        reduce using rule 121 (pop_op -> .)

    pop_op                         shift and go to state 253

state 233

    (95) term -> factor TIMES push_op term . pop_op
    (121) pop_op -> .

    PLUS            reduce using rule 121 (pop_op -> .)
    MINUS           reduce using rule 121 (pop_op -> .)
    RELOP           reduce using rule 121 (pop_op -> .)
    AND             reduce using rule 121 (pop_op -> .)
    OR              reduce using rule 121 (pop_op -> .)
    COMMA           reduce using rule 121 (pop_op -> .)
    RPAREN          reduce using rule 121 (pop_op -> .)
    SEMICOLON       reduce using rule 121 (pop_op -> .)
    RBRACKET        reduce using rule 121 (pop_op -> .)

    pop_op                         shift and go to state 254

state 234

    (96) term -> factor DIVIDE push_op term . pop_op
    (121) pop_op -> .

    PLUS            reduce using rule 121 (pop_op -> .)
    MINUS           reduce using rule 121 (pop_op -> .)
    RELOP           reduce using rule 121 (pop_op -> .)
    AND             reduce using rule 121 (pop_op -> .)
    OR              reduce using rule 121 (pop_op -> .)
    COMMA           reduce using rule 121 (pop_op -> .)
    RPAREN          reduce using rule 121 (pop_op -> .)
    SEMICOLON       reduce using rule 121 (pop_op -> .)
    RBRACKET        reduce using rule 121 (pop_op -> .)

    pop_op                         shift and go to state 255

state 235
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

state 229

    (89) l_exp -> a_exp pop_op RELOP push_op . a_exp
    (90) a_exp -> . term pop_op
    (91) a_exp -> . term pop_op PLUS push_op a_exp
    (92) a_exp -> . term pop_op MINUS push_op a_exp
    (93) term -> . factor pop_op
    (94) term -> . factor pop_op TIMES push_op term
    (95) term -> . factor pop_op DIVIDE push_op term
    (96) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (97) factor -> . call
    (98) factor -> . factor_aux
    (64) call -> . ID LPAREN RPAREN
    (65) call -> . ID POINT ID LPAREN RPAREN
    (66) call -> . ID LPAREN call_aux RPAREN
    (67) call -> . ID POINT ID LPAREN call_aux RPAREN
    (99) factor_aux -> . cte
    (100) factor_aux -> . PLUS cte
    (101) factor_aux -> . MINUS cte
    (102) cte -> . ID push_var
    (103) cte -> . ID var_aux push_var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 134
    ID              shift and go to state 125
    PLUS            shift and go to state 131
    MINUS           shift and go to state 132
    CTEI            shift and go to state 138
    CTEF            shift and go to state 139
    CTECHAR         shift and go to state 140

    a_exp                          shift and go to state 250
    term                           shift and go to state 130
    factor                         shift and go to state 133
    call                           shift and go to state 135
    factor_aux                     shift and go to state 136
    cte                            shift and go to state 137

state 230

    (91) a_exp -> term pop_op PLUS push_op . a_exp
    (90) a_exp -> . term pop_op
    (91) a_exp -> . term pop_op PLUS push_op a_exp
    (92) a_exp -> . term pop_op MINUS push_op a_exp
    (93) term -> . factor pop_op
    (94) term -> . factor pop_op TIMES push_op term
    (95) term -> . factor pop_op DIVIDE push_op term
    (96) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (97) factor -> . call
    (98) factor -> . factor_aux
    (64) call -> . ID LPAREN RPAREN
    (65) call -> . ID POINT ID LPAREN RPAREN
    (66) call -> . ID LPAREN call_aux RPAREN
    (67) call -> . ID POINT ID LPAREN call_aux RPAREN
    (99) factor_aux -> . cte
    (100) factor_aux -> . PLUS cte
    (101) factor_aux -> . MINUS cte
    (102) cte -> . ID push_var
    (103) cte -> . ID var_aux push_var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 134
    ID              shift and go to state 125
    PLUS            shift and go to state 131
    MINUS           shift and go to state 132
    CTEI            shift and go to state 138
    CTEF            shift and go to state 139
    CTECHAR         shift and go to state 140

    term                           shift and go to state 130
    a_exp                          shift and go to state 251
    factor                         shift and go to state 133
    call                           shift and go to state 135
    factor_aux                     shift and go to state 136
    cte                            shift and go to state 137

state 231

    (92) a_exp -> term pop_op MINUS push_op . a_exp
    (90) a_exp -> . term pop_op
    (91) a_exp -> . term pop_op PLUS push_op a_exp
    (92) a_exp -> . term pop_op MINUS push_op a_exp
    (93) term -> . factor pop_op
    (94) term -> . factor pop_op TIMES push_op term
    (95) term -> . factor pop_op DIVIDE push_op term
    (96) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (97) factor -> . call
    (98) factor -> . factor_aux
    (64) call -> . ID LPAREN RPAREN
    (65) call -> . ID POINT ID LPAREN RPAREN
    (66) call -> . ID LPAREN call_aux RPAREN
    (67) call -> . ID POINT ID LPAREN call_aux RPAREN
    (99) factor_aux -> . cte
    (100) factor_aux -> . PLUS cte
    (101) factor_aux -> . MINUS cte
    (102) cte -> . ID push_var
    (103) cte -> . ID var_aux push_var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 134
    ID              shift and go to state 125
    PLUS            shift and go to state 131
    MINUS           shift and go to state 132
    CTEI            shift and go to state 138
    CTEF            shift and go to state 139
    CTECHAR         shift and go to state 140

    term                           shift and go to state 130
    a_exp                          shift and go to state 252
    factor                         shift and go to state 133
    call                           shift and go to state 135
    factor_aux                     shift and go to state 136
    cte                            shift and go to state 137

state 232

    (94) term -> factor pop_op TIMES push_op . term
    (93) term -> . factor pop_op
    (94) term -> . factor pop_op TIMES push_op term
    (95) term -> . factor pop_op DIVIDE push_op term
    (96) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (97) factor -> . call
    (98) factor -> . factor_aux
    (64) call -> . ID LPAREN RPAREN
    (65) call -> . ID POINT ID LPAREN RPAREN
    (66) call -> . ID LPAREN call_aux RPAREN
    (67) call -> . ID POINT ID LPAREN call_aux RPAREN
    (99) factor_aux -> . cte
    (100) factor_aux -> . PLUS cte
    (101) factor_aux -> . MINUS cte
    (102) cte -> . ID push_var
    (103) cte -> . ID var_aux push_var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 134
    ID              shift and go to state 125
    PLUS            shift and go to state 131
    MINUS           shift and go to state 132
    CTEI            shift and go to state 138
    CTEF            shift and go to state 139
    CTECHAR         shift and go to state 140

    factor                         shift and go to state 133
    term                           shift and go to state 253
    call                           shift and go to state 135
    factor_aux                     shift and go to state 136
    cte                            shift and go to state 137

state 233

    (95) term -> factor pop_op DIVIDE push_op . term
    (93) term -> . factor pop_op
    (94) term -> . factor pop_op TIMES push_op term
    (95) term -> . factor pop_op DIVIDE push_op term
    (96) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (97) factor -> . call
    (98) factor -> . factor_aux
    (64) call -> . ID LPAREN RPAREN
    (65) call -> . ID POINT ID LPAREN RPAREN
    (66) call -> . ID LPAREN call_aux RPAREN
    (67) call -> . ID POINT ID LPAREN call_aux RPAREN
    (99) factor_aux -> . cte
    (100) factor_aux -> . PLUS cte
    (101) factor_aux -> . MINUS cte
    (102) cte -> . ID push_var
    (103) cte -> . ID var_aux push_var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 134
    ID              shift and go to state 125
    PLUS            shift and go to state 131
    MINUS           shift and go to state 132
    CTEI            shift and go to state 138
    CTEF            shift and go to state 139
    CTECHAR         shift and go to state 140

    factor                         shift and go to state 133
    term                           shift and go to state 254
    call                           shift and go to state 135
    factor_aux                     shift and go to state 136
    cte                            shift and go to state 137

state 234

    (96) factor -> LPAREN push_paren exp RPAREN . pop_paren
    (123) pop_paren -> .

    TIMES           reduce using rule 123 (pop_paren -> .)
    DIVIDE          reduce using rule 123 (pop_paren -> .)
    PLUS            reduce using rule 123 (pop_paren -> .)
    MINUS           reduce using rule 123 (pop_paren -> .)
    RELOP           reduce using rule 123 (pop_paren -> .)
    AND             reduce using rule 123 (pop_paren -> .)
    OR              reduce using rule 123 (pop_paren -> .)
    SEMICOLON       reduce using rule 123 (pop_paren -> .)
    RPAREN          reduce using rule 123 (pop_paren -> .)
    RBRACKET        reduce using rule 123 (pop_paren -> .)
    COMMA           reduce using rule 123 (pop_paren -> .)

    pop_paren                      shift and go to state 255

state 235

    (63) var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp . RBRACKET

    RBRACKET        shift and go to state 256


state 236

    (71) condition_aux -> LPAREN exp RPAREN THEN LBRACE . statutes_aux RBRACE condition_aux_3
    (73) condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE . statutes_aux RBRACE ELIF condition_aux
    (55) statutes_aux -> . statutes
    (56) statutes_aux -> . statutes statutes_aux
    (48) statutes -> . assignation SEMICOLON
    (49) statutes -> . CALL call SEMICOLON
    (50) statutes -> . read
    (51) statutes -> . write
    (52) statutes -> . condition
    (53) statutes -> . while
    (54) statutes -> . for
    (57) assignation -> . ID EQUAL exp
    (58) assignation -> . ID var_aux EQUAL exp
    (76) read -> . READ LPAREN ID RPAREN SEMICOLON
    (77) write -> . WRITE LPAREN write_aux RPAREN SEMICOLON
    (70) condition -> . IF condition_aux
    (82) while -> . WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (83) for -> . FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    CALL            shift and go to state 74
<<<<<<< HEAD
    ID              shift and go to state 80
    READ            shift and go to state 81
    WRITE           shift and go to state 82
    IF              shift and go to state 83
    WHILE           shift and go to state 84
    FROM            shift and go to state 85

    statutes_aux                   shift and go to state 257
=======
    READ            shift and go to state 80
    WRITE           shift and go to state 81
    IF              shift and go to state 82
    WHILE           shift and go to state 83
    FROM            shift and go to state 84

    statutes_aux                   shift and go to state 256
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330
    statutes                       shift and go to state 72
    assignation                    shift and go to state 73
    read                           shift and go to state 75
    write                          shift and go to state 76
    condition                      shift and go to state 77
    while                          shift and go to state 78
    for                            shift and go to state 79

<<<<<<< HEAD
state 237
=======
state 236
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    (82) while -> WHILE LPAREN exp RPAREN DO LBRACE . statutes_aux RBRACE
    (55) statutes_aux -> . statutes
    (56) statutes_aux -> . statutes statutes_aux
    (48) statutes -> . assignation SEMICOLON
    (49) statutes -> . CALL call SEMICOLON
    (50) statutes -> . read
    (51) statutes -> . write
    (52) statutes -> . condition
    (53) statutes -> . while
    (54) statutes -> . for
    (57) assignation -> . ID EQUAL exp
    (58) assignation -> . ID var_aux EQUAL exp
    (76) read -> . READ LPAREN ID RPAREN SEMICOLON
    (77) write -> . WRITE LPAREN write_aux RPAREN SEMICOLON
    (70) condition -> . IF condition_aux
    (82) while -> . WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (83) for -> . FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    CALL            shift and go to state 74
<<<<<<< HEAD
    ID              shift and go to state 80
    READ            shift and go to state 81
    WRITE           shift and go to state 82
    IF              shift and go to state 83
    WHILE           shift and go to state 84
    FROM            shift and go to state 85

    statutes_aux                   shift and go to state 258
=======
    READ            shift and go to state 80
    WRITE           shift and go to state 81
    IF              shift and go to state 82
    WHILE           shift and go to state 83
    FROM            shift and go to state 84

    statutes_aux                   shift and go to state 257
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330
    statutes                       shift and go to state 72
    assignation                    shift and go to state 73
    read                           shift and go to state 75
    write                          shift and go to state 76
    condition                      shift and go to state 77
    while                          shift and go to state 78
    for                            shift and go to state 79

<<<<<<< HEAD
state 238

    (83) for -> FROM LPAREN assignation RPAREN UNTIL LPAREN . exp RPAREN DO LBRACE statutes_aux RBRACE
    (84) exp -> . n_exp pop_op
    (85) exp -> . n_exp pop_op OR push_op exp
    (86) n_exp -> . l_exp pop_op
    (87) n_exp -> . l_exp pop_op AND push_op n_exp
    (88) l_exp -> . a_exp pop_op
    (89) l_exp -> . a_exp pop_op RELOP push_op a_exp
    (90) a_exp -> . term pop_op
    (91) a_exp -> . term pop_op PLUS push_op a_exp
    (92) a_exp -> . term pop_op MINUS push_op a_exp
    (93) term -> . factor pop_op
    (94) term -> . factor pop_op TIMES push_op term
    (95) term -> . factor pop_op DIVIDE push_op term
    (96) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (97) factor -> . call
    (98) factor -> . factor_aux
    (64) call -> . ID LPAREN RPAREN
    (65) call -> . ID POINT ID LPAREN RPAREN
    (66) call -> . ID LPAREN call_aux RPAREN
    (67) call -> . ID POINT ID LPAREN call_aux RPAREN
    (99) factor_aux -> . cte
    (100) factor_aux -> . PLUS cte
    (101) factor_aux -> . MINUS cte
    (102) cte -> . ID push_var
    (103) cte -> . ID var_aux push_var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 134
    ID              shift and go to state 125
    PLUS            shift and go to state 131
    MINUS           shift and go to state 132
    CTEI            shift and go to state 138
    CTEF            shift and go to state 139
    CTECHAR         shift and go to state 140

    exp                            shift and go to state 259
    n_exp                          shift and go to state 127
    l_exp                          shift and go to state 128
    a_exp                          shift and go to state 129
    term                           shift and go to state 130
    factor                         shift and go to state 133
    call                           shift and go to state 135
    factor_aux                     shift and go to state 136
    cte                            shift and go to state 137

state 239
=======
state 237

    (84) for -> FROM LPAREN assignation RPAREN UNTIL LPAREN . exp RPAREN DO LBRACE statutes_aux RBRACE
    (85) exp -> . n_exp
    (86) exp -> . n_exp OR push_op exp pop_op
    (87) n_exp -> . l_exp
    (88) n_exp -> . l_exp AND push_op n_exp pop_op
    (89) l_exp -> . a_exp
    (90) l_exp -> . a_exp RELOP push_op a_exp pop_op
    (91) a_exp -> . term
    (92) a_exp -> . term PLUS push_op a_exp pop_op
    (93) a_exp -> . term MINUS push_op a_exp pop_op
    (94) term -> . factor
    (95) term -> . factor TIMES push_op term pop_op
    (96) term -> . factor DIVIDE push_op term pop_op
    (97) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (98) factor -> . call
    (99) factor -> . factor_aux
    (65) call -> . ID LPAREN RPAREN
    (66) call -> . ID POINT ID LPAREN RPAREN
    (67) call -> . ID LPAREN call_aux RPAREN
    (68) call -> . ID POINT ID LPAREN call_aux RPAREN
    (100) factor_aux -> . cte
    (101) factor_aux -> . PLUS cte
    (102) factor_aux -> . MINUS cte
    (103) cte -> . var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var
    (58) var -> . ID push_var
    (59) var -> . ID var_aux

    LPAREN          shift and go to state 129
    ID              shift and go to state 142
    PLUS            shift and go to state 137
    MINUS           shift and go to state 138
    CTEI            shift and go to state 145
    CTEF            shift and go to state 146
    CTECHAR         shift and go to state 147

    exp                            shift and go to state 258
    n_exp                          shift and go to state 133
    l_exp                          shift and go to state 134
    a_exp                          shift and go to state 135
    term                           shift and go to state 136
    factor                         shift and go to state 139
    call                           shift and go to state 140
    factor_aux                     shift and go to state 141
    cte                            shift and go to state 143
    var                            shift and go to state 144

state 238
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    (21) vars_simple_type_aux -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET add_matrix_variable .

    COMMA           reduce using rule 21 (vars_simple_type_aux -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET add_matrix_variable .)
    SEMICOLON       reduce using rule 21 (vars_simple_type_aux -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET add_matrix_variable .)


<<<<<<< HEAD
state 240
=======
state 239
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    (44) body -> LBRACE dec_vars statutes_aux RBRACE .

    FUNCT           reduce using rule 44 (body -> LBRACE dec_vars statutes_aux RBRACE .)
    RBRACE          reduce using rule 44 (body -> LBRACE dec_vars statutes_aux RBRACE .)
    INIT            reduce using rule 44 (body -> LBRACE dec_vars statutes_aux RBRACE .)


<<<<<<< HEAD
state 241

    (47) body -> LBRACE dec_vars statutes_aux RETURN . ID SEMICOLON RBRACE

    ID              shift and go to state 260


state 242

    (46) body -> LBRACE statutes_aux RETURN ID . SEMICOLON RBRACE

    SEMICOLON       shift and go to state 261


state 243
=======
state 240

    (47) body -> LBRACE dec_vars statutes_aux RETURN . ID SEMICOLON RBRACE

    ID              shift and go to state 259


state 241

    (46) body -> LBRACE statutes_aux RETURN ID . SEMICOLON RBRACE

    SEMICOLON       shift and go to state 260


state 242
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    (39) params -> simple_type ID add_variable COMMA params .

    RPAREN          reduce using rule 39 (params -> simple_type ID add_variable COMMA params .)


<<<<<<< HEAD
state 244
=======
state 243
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    (41) params -> simple_type ID params_aux COMMA params .

    RPAREN          reduce using rule 41 (params -> simple_type ID params_aux COMMA params .)


<<<<<<< HEAD
state 245

    (43) params_aux -> LBRACKET RBRACKET LBRACKET . RBRACKET add_matrix_var_params

    RBRACKET        shift and go to state 262


state 246
=======
state 244

    (43) params_aux -> LBRACKET RBRACKET LBRACKET . RBRACKET add_matrix_var_params

    RBRACKET        shift and go to state 261


state 245
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    (42) params_aux -> LBRACKET RBRACKET add_array_var_params .

    COMMA           reduce using rule 42 (params_aux -> LBRACKET RBRACKET add_array_var_params .)
    RPAREN          reduce using rule 42 (params_aux -> LBRACKET RBRACKET add_array_var_params .)


<<<<<<< HEAD
state 247
=======
state 246
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    (67) call -> ID POINT ID LPAREN call_aux RPAREN .

<<<<<<< HEAD
    SEMICOLON       reduce using rule 67 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    TIMES           reduce using rule 67 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    DIVIDE          reduce using rule 67 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    PLUS            reduce using rule 67 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    MINUS           reduce using rule 67 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    RELOP           reduce using rule 67 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    AND             reduce using rule 67 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    OR              reduce using rule 67 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    RPAREN          reduce using rule 67 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    RBRACKET        reduce using rule 67 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    COMMA           reduce using rule 67 (call -> ID POINT ID LPAREN call_aux RPAREN .)


state 248
=======
    RBRACKET        shift and go to state 262


state 247
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    (85) exp -> n_exp pop_op OR push_op exp .

    SEMICOLON       reduce using rule 85 (exp -> n_exp pop_op OR push_op exp .)
    RPAREN          reduce using rule 85 (exp -> n_exp pop_op OR push_op exp .)
    RBRACKET        reduce using rule 85 (exp -> n_exp pop_op OR push_op exp .)
    COMMA           reduce using rule 85 (exp -> n_exp pop_op OR push_op exp .)


<<<<<<< HEAD
state 249
=======
state 248

    (97) factor -> LPAREN push_paren exp RPAREN pop_paren .

    TIMES           reduce using rule 97 (factor -> LPAREN push_paren exp RPAREN pop_paren .)
    DIVIDE          reduce using rule 97 (factor -> LPAREN push_paren exp RPAREN pop_paren .)
    PLUS            reduce using rule 97 (factor -> LPAREN push_paren exp RPAREN pop_paren .)
    MINUS           reduce using rule 97 (factor -> LPAREN push_paren exp RPAREN pop_paren .)
    RELOP           reduce using rule 97 (factor -> LPAREN push_paren exp RPAREN pop_paren .)
    AND             reduce using rule 97 (factor -> LPAREN push_paren exp RPAREN pop_paren .)
    OR              reduce using rule 97 (factor -> LPAREN push_paren exp RPAREN pop_paren .)
    COMMA           reduce using rule 97 (factor -> LPAREN push_paren exp RPAREN pop_paren .)
    RPAREN          reduce using rule 97 (factor -> LPAREN push_paren exp RPAREN pop_paren .)
    SEMICOLON       reduce using rule 97 (factor -> LPAREN push_paren exp RPAREN pop_paren .)
    RBRACKET        reduce using rule 97 (factor -> LPAREN push_paren exp RPAREN pop_paren .)


state 249

    (86) exp -> n_exp OR push_op exp pop_op .

    COMMA           reduce using rule 86 (exp -> n_exp OR push_op exp pop_op .)
    RPAREN          reduce using rule 86 (exp -> n_exp OR push_op exp pop_op .)
    SEMICOLON       reduce using rule 86 (exp -> n_exp OR push_op exp pop_op .)
    RBRACKET        reduce using rule 86 (exp -> n_exp OR push_op exp pop_op .)


state 250

    (88) n_exp -> l_exp AND push_op n_exp pop_op .

    OR              reduce using rule 88 (n_exp -> l_exp AND push_op n_exp pop_op .)
    COMMA           reduce using rule 88 (n_exp -> l_exp AND push_op n_exp pop_op .)
    RPAREN          reduce using rule 88 (n_exp -> l_exp AND push_op n_exp pop_op .)
    SEMICOLON       reduce using rule 88 (n_exp -> l_exp AND push_op n_exp pop_op .)
    RBRACKET        reduce using rule 88 (n_exp -> l_exp AND push_op n_exp pop_op .)


state 251

    (90) l_exp -> a_exp RELOP push_op a_exp pop_op .

    AND             reduce using rule 90 (l_exp -> a_exp RELOP push_op a_exp pop_op .)
    OR              reduce using rule 90 (l_exp -> a_exp RELOP push_op a_exp pop_op .)
    COMMA           reduce using rule 90 (l_exp -> a_exp RELOP push_op a_exp pop_op .)
    RPAREN          reduce using rule 90 (l_exp -> a_exp RELOP push_op a_exp pop_op .)
    SEMICOLON       reduce using rule 90 (l_exp -> a_exp RELOP push_op a_exp pop_op .)
    RBRACKET        reduce using rule 90 (l_exp -> a_exp RELOP push_op a_exp pop_op .)


state 252

    (92) a_exp -> term PLUS push_op a_exp pop_op .

    RELOP           reduce using rule 92 (a_exp -> term PLUS push_op a_exp pop_op .)
    AND             reduce using rule 92 (a_exp -> term PLUS push_op a_exp pop_op .)
    OR              reduce using rule 92 (a_exp -> term PLUS push_op a_exp pop_op .)
    COMMA           reduce using rule 92 (a_exp -> term PLUS push_op a_exp pop_op .)
    RPAREN          reduce using rule 92 (a_exp -> term PLUS push_op a_exp pop_op .)
    SEMICOLON       reduce using rule 92 (a_exp -> term PLUS push_op a_exp pop_op .)
    RBRACKET        reduce using rule 92 (a_exp -> term PLUS push_op a_exp pop_op .)


state 253

    (93) a_exp -> term MINUS push_op a_exp pop_op .

    RELOP           reduce using rule 93 (a_exp -> term MINUS push_op a_exp pop_op .)
    AND             reduce using rule 93 (a_exp -> term MINUS push_op a_exp pop_op .)
    OR              reduce using rule 93 (a_exp -> term MINUS push_op a_exp pop_op .)
    COMMA           reduce using rule 93 (a_exp -> term MINUS push_op a_exp pop_op .)
    RPAREN          reduce using rule 93 (a_exp -> term MINUS push_op a_exp pop_op .)
    SEMICOLON       reduce using rule 93 (a_exp -> term MINUS push_op a_exp pop_op .)
    RBRACKET        reduce using rule 93 (a_exp -> term MINUS push_op a_exp pop_op .)


state 254

    (95) term -> factor TIMES push_op term pop_op .

    PLUS            reduce using rule 95 (term -> factor TIMES push_op term pop_op .)
    MINUS           reduce using rule 95 (term -> factor TIMES push_op term pop_op .)
    RELOP           reduce using rule 95 (term -> factor TIMES push_op term pop_op .)
    AND             reduce using rule 95 (term -> factor TIMES push_op term pop_op .)
    OR              reduce using rule 95 (term -> factor TIMES push_op term pop_op .)
    COMMA           reduce using rule 95 (term -> factor TIMES push_op term pop_op .)
    RPAREN          reduce using rule 95 (term -> factor TIMES push_op term pop_op .)
    SEMICOLON       reduce using rule 95 (term -> factor TIMES push_op term pop_op .)
    RBRACKET        reduce using rule 95 (term -> factor TIMES push_op term pop_op .)


state 255

    (96) term -> factor DIVIDE push_op term pop_op .

    PLUS            reduce using rule 96 (term -> factor DIVIDE push_op term pop_op .)
    MINUS           reduce using rule 96 (term -> factor DIVIDE push_op term pop_op .)
    RELOP           reduce using rule 96 (term -> factor DIVIDE push_op term pop_op .)
    AND             reduce using rule 96 (term -> factor DIVIDE push_op term pop_op .)
    OR              reduce using rule 96 (term -> factor DIVIDE push_op term pop_op .)
    COMMA           reduce using rule 96 (term -> factor DIVIDE push_op term pop_op .)
    RPAREN          reduce using rule 96 (term -> factor DIVIDE push_op term pop_op .)
    SEMICOLON       reduce using rule 96 (term -> factor DIVIDE push_op term pop_op .)
    RBRACKET        reduce using rule 96 (term -> factor DIVIDE push_op term pop_op .)


state 256
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    (87) n_exp -> l_exp pop_op AND push_op n_exp .

<<<<<<< HEAD
    OR              reduce using rule 87 (n_exp -> l_exp pop_op AND push_op n_exp .)
    SEMICOLON       reduce using rule 87 (n_exp -> l_exp pop_op AND push_op n_exp .)
    RPAREN          reduce using rule 87 (n_exp -> l_exp pop_op AND push_op n_exp .)
    RBRACKET        reduce using rule 87 (n_exp -> l_exp pop_op AND push_op n_exp .)
    COMMA           reduce using rule 87 (n_exp -> l_exp pop_op AND push_op n_exp .)


state 250
=======
    RBRACE          shift and go to state 263


state 257
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    (89) l_exp -> a_exp pop_op RELOP push_op a_exp .

<<<<<<< HEAD
    AND             reduce using rule 89 (l_exp -> a_exp pop_op RELOP push_op a_exp .)
    OR              reduce using rule 89 (l_exp -> a_exp pop_op RELOP push_op a_exp .)
    SEMICOLON       reduce using rule 89 (l_exp -> a_exp pop_op RELOP push_op a_exp .)
    RPAREN          reduce using rule 89 (l_exp -> a_exp pop_op RELOP push_op a_exp .)
    RBRACKET        reduce using rule 89 (l_exp -> a_exp pop_op RELOP push_op a_exp .)
    COMMA           reduce using rule 89 (l_exp -> a_exp pop_op RELOP push_op a_exp .)


state 251
=======
    RBRACE          shift and go to state 264


state 258
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    (91) a_exp -> term pop_op PLUS push_op a_exp .

<<<<<<< HEAD
    RELOP           reduce using rule 91 (a_exp -> term pop_op PLUS push_op a_exp .)
    AND             reduce using rule 91 (a_exp -> term pop_op PLUS push_op a_exp .)
    OR              reduce using rule 91 (a_exp -> term pop_op PLUS push_op a_exp .)
    SEMICOLON       reduce using rule 91 (a_exp -> term pop_op PLUS push_op a_exp .)
    RPAREN          reduce using rule 91 (a_exp -> term pop_op PLUS push_op a_exp .)
    RBRACKET        reduce using rule 91 (a_exp -> term pop_op PLUS push_op a_exp .)
    COMMA           reduce using rule 91 (a_exp -> term pop_op PLUS push_op a_exp .)


state 252

    (92) a_exp -> term pop_op MINUS push_op a_exp .

    RELOP           reduce using rule 92 (a_exp -> term pop_op MINUS push_op a_exp .)
    AND             reduce using rule 92 (a_exp -> term pop_op MINUS push_op a_exp .)
    OR              reduce using rule 92 (a_exp -> term pop_op MINUS push_op a_exp .)
    SEMICOLON       reduce using rule 92 (a_exp -> term pop_op MINUS push_op a_exp .)
    RPAREN          reduce using rule 92 (a_exp -> term pop_op MINUS push_op a_exp .)
    RBRACKET        reduce using rule 92 (a_exp -> term pop_op MINUS push_op a_exp .)
    COMMA           reduce using rule 92 (a_exp -> term pop_op MINUS push_op a_exp .)


state 253

    (94) term -> factor pop_op TIMES push_op term .

    PLUS            reduce using rule 94 (term -> factor pop_op TIMES push_op term .)
    MINUS           reduce using rule 94 (term -> factor pop_op TIMES push_op term .)
    RELOP           reduce using rule 94 (term -> factor pop_op TIMES push_op term .)
    AND             reduce using rule 94 (term -> factor pop_op TIMES push_op term .)
    OR              reduce using rule 94 (term -> factor pop_op TIMES push_op term .)
    SEMICOLON       reduce using rule 94 (term -> factor pop_op TIMES push_op term .)
    RPAREN          reduce using rule 94 (term -> factor pop_op TIMES push_op term .)
    RBRACKET        reduce using rule 94 (term -> factor pop_op TIMES push_op term .)
    COMMA           reduce using rule 94 (term -> factor pop_op TIMES push_op term .)


state 254

    (95) term -> factor pop_op DIVIDE push_op term .

    PLUS            reduce using rule 95 (term -> factor pop_op DIVIDE push_op term .)
    MINUS           reduce using rule 95 (term -> factor pop_op DIVIDE push_op term .)
    RELOP           reduce using rule 95 (term -> factor pop_op DIVIDE push_op term .)
    AND             reduce using rule 95 (term -> factor pop_op DIVIDE push_op term .)
    OR              reduce using rule 95 (term -> factor pop_op DIVIDE push_op term .)
    SEMICOLON       reduce using rule 95 (term -> factor pop_op DIVIDE push_op term .)
    RPAREN          reduce using rule 95 (term -> factor pop_op DIVIDE push_op term .)
    RBRACKET        reduce using rule 95 (term -> factor pop_op DIVIDE push_op term .)
    COMMA           reduce using rule 95 (term -> factor pop_op DIVIDE push_op term .)


state 255

    (96) factor -> LPAREN push_paren exp RPAREN pop_paren .

    TIMES           reduce using rule 96 (factor -> LPAREN push_paren exp RPAREN pop_paren .)
    DIVIDE          reduce using rule 96 (factor -> LPAREN push_paren exp RPAREN pop_paren .)
    PLUS            reduce using rule 96 (factor -> LPAREN push_paren exp RPAREN pop_paren .)
    MINUS           reduce using rule 96 (factor -> LPAREN push_paren exp RPAREN pop_paren .)
    RELOP           reduce using rule 96 (factor -> LPAREN push_paren exp RPAREN pop_paren .)
    AND             reduce using rule 96 (factor -> LPAREN push_paren exp RPAREN pop_paren .)
    OR              reduce using rule 96 (factor -> LPAREN push_paren exp RPAREN pop_paren .)
    SEMICOLON       reduce using rule 96 (factor -> LPAREN push_paren exp RPAREN pop_paren .)
    RPAREN          reduce using rule 96 (factor -> LPAREN push_paren exp RPAREN pop_paren .)
    RBRACKET        reduce using rule 96 (factor -> LPAREN push_paren exp RPAREN pop_paren .)
    COMMA           reduce using rule 96 (factor -> LPAREN push_paren exp RPAREN pop_paren .)


state 256

    (63) var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .

    EQUAL           reduce using rule 63 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    TIMES           reduce using rule 63 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    DIVIDE          reduce using rule 63 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 63 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    MINUS           reduce using rule 63 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    RELOP           reduce using rule 63 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    AND             reduce using rule 63 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    OR              reduce using rule 63 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 63 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    RPAREN          reduce using rule 63 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    RBRACKET        reduce using rule 63 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    COMMA           reduce using rule 63 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)


state 257

    (71) condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux . RBRACE condition_aux_3
    (73) condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux . RBRACE ELIF condition_aux

    RBRACE          shift and go to state 263


state 258

    (82) while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux . RBRACE

    RBRACE          shift and go to state 264


state 259

    (83) for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp . RPAREN DO LBRACE statutes_aux RBRACE

    RPAREN          shift and go to state 265


state 260
=======
    RPAREN          shift and go to state 265


state 259
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    (47) body -> LBRACE dec_vars statutes_aux RETURN ID . SEMICOLON RBRACE

    SEMICOLON       shift and go to state 266


<<<<<<< HEAD
state 261
=======
state 260
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    (46) body -> LBRACE statutes_aux RETURN ID SEMICOLON . RBRACE

    RBRACE          shift and go to state 267


<<<<<<< HEAD
state 262
=======
state 261
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    (43) params_aux -> LBRACKET RBRACKET LBRACKET RBRACKET . add_matrix_var_params
    (114) add_matrix_var_params -> .

    COMMA           reduce using rule 114 (add_matrix_var_params -> .)
    RPAREN          reduce using rule 114 (add_matrix_var_params -> .)

    add_matrix_var_params          shift and go to state 268

<<<<<<< HEAD
state 263
=======
state 262
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    (71) condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE . condition_aux_3
    (73) condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE . ELIF condition_aux
    (74) condition_aux_3 -> . ELSE LBRACE statutes_aux RBRACE
    (75) condition_aux_3 -> . empty
    (109) empty -> .

    ELIF            shift and go to state 270
    ELSE            shift and go to state 271
    CALL            reduce using rule 109 (empty -> .)
    ID              reduce using rule 109 (empty -> .)
    READ            reduce using rule 109 (empty -> .)
    WRITE           reduce using rule 109 (empty -> .)
    IF              reduce using rule 109 (empty -> .)
    WHILE           reduce using rule 109 (empty -> .)
    FROM            reduce using rule 109 (empty -> .)
    RBRACE          reduce using rule 109 (empty -> .)
    RETURN          reduce using rule 109 (empty -> .)

    condition_aux_3                shift and go to state 269
    empty                          shift and go to state 272

<<<<<<< HEAD
state 264

    (82) while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .

    CALL            reduce using rule 82 (while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    ID              reduce using rule 82 (while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    READ            reduce using rule 82 (while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    WRITE           reduce using rule 82 (while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    IF              reduce using rule 82 (while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    WHILE           reduce using rule 82 (while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    FROM            reduce using rule 82 (while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    RBRACE          reduce using rule 82 (while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    RETURN          reduce using rule 82 (while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
=======
state 263

    (72) condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE . condition_aux_3
    (74) condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE . ELIF condition_aux
    (75) condition_aux_3 -> . ELSE LBRACE statutes_aux RBRACE
    (76) condition_aux_3 -> . empty
    (109) empty -> .

    ELIF            shift and go to state 270
    ELSE            shift and go to state 271
    ASSIGN          reduce using rule 109 (empty -> .)
    CALL            reduce using rule 109 (empty -> .)
    READ            reduce using rule 109 (empty -> .)
    WRITE           reduce using rule 109 (empty -> .)
    IF              reduce using rule 109 (empty -> .)
    WHILE           reduce using rule 109 (empty -> .)
    FROM            reduce using rule 109 (empty -> .)
    RBRACE          reduce using rule 109 (empty -> .)
    RETURN          reduce using rule 109 (empty -> .)

    condition_aux_3                shift and go to state 269
    empty                          shift and go to state 272

state 264

    (83) while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330


state 265

<<<<<<< HEAD
    (83) for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN . DO LBRACE statutes_aux RBRACE
=======
state 265
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    DO              shift and go to state 273

<<<<<<< HEAD

=======
    DO              shift and go to state 273


>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330
state 266

    (47) body -> LBRACE dec_vars statutes_aux RETURN ID SEMICOLON . RBRACE

    RBRACE          shift and go to state 274


state 267

    (46) body -> LBRACE statutes_aux RETURN ID SEMICOLON RBRACE .

    FUNCT           reduce using rule 46 (body -> LBRACE statutes_aux RETURN ID SEMICOLON RBRACE .)
    RBRACE          reduce using rule 46 (body -> LBRACE statutes_aux RETURN ID SEMICOLON RBRACE .)
    INIT            reduce using rule 46 (body -> LBRACE statutes_aux RETURN ID SEMICOLON RBRACE .)


state 268

    (43) params_aux -> LBRACKET RBRACKET LBRACKET RBRACKET add_matrix_var_params .

    COMMA           reduce using rule 43 (params_aux -> LBRACKET RBRACKET LBRACKET RBRACKET add_matrix_var_params .)
    RPAREN          reduce using rule 43 (params_aux -> LBRACKET RBRACKET LBRACKET RBRACKET add_matrix_var_params .)


state 269

    (71) condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .

    CALL            reduce using rule 71 (condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .)
    ID              reduce using rule 71 (condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .)
    READ            reduce using rule 71 (condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .)
    WRITE           reduce using rule 71 (condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .)
    IF              reduce using rule 71 (condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .)
    WHILE           reduce using rule 71 (condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .)
    FROM            reduce using rule 71 (condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .)
    RBRACE          reduce using rule 71 (condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .)
    RETURN          reduce using rule 71 (condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .)


state 270

    (73) condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF . condition_aux
    (71) condition_aux -> . LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3
    (72) condition_aux -> . condition_aux_2
    (73) condition_aux_2 -> . LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux

    LPAREN          shift and go to state 109

    condition_aux                  shift and go to state 275
<<<<<<< HEAD
    condition_aux_2                shift and go to state 110
=======
    condition_aux_2                shift and go to state 106
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

state 271

    (74) condition_aux_3 -> ELSE . LBRACE statutes_aux RBRACE

    LBRACE          shift and go to state 276


state 272

    (75) condition_aux_3 -> empty .

    CALL            reduce using rule 75 (condition_aux_3 -> empty .)
    ID              reduce using rule 75 (condition_aux_3 -> empty .)
    READ            reduce using rule 75 (condition_aux_3 -> empty .)
    WRITE           reduce using rule 75 (condition_aux_3 -> empty .)
    IF              reduce using rule 75 (condition_aux_3 -> empty .)
    WHILE           reduce using rule 75 (condition_aux_3 -> empty .)
    FROM            reduce using rule 75 (condition_aux_3 -> empty .)
    RBRACE          reduce using rule 75 (condition_aux_3 -> empty .)
    RETURN          reduce using rule 75 (condition_aux_3 -> empty .)


state 273

    (83) for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO . LBRACE statutes_aux RBRACE

    LBRACE          shift and go to state 277


state 274

    (47) body -> LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE .

    FUNCT           reduce using rule 47 (body -> LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE .)
    RBRACE          reduce using rule 47 (body -> LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE .)
    INIT            reduce using rule 47 (body -> LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE .)


state 275

    (73) condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .

    CALL            reduce using rule 73 (condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .)
    ID              reduce using rule 73 (condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .)
    READ            reduce using rule 73 (condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .)
    WRITE           reduce using rule 73 (condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .)
    IF              reduce using rule 73 (condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .)
    WHILE           reduce using rule 73 (condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .)
    FROM            reduce using rule 73 (condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .)
    RBRACE          reduce using rule 73 (condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .)
    RETURN          reduce using rule 73 (condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .)


state 276

    (74) condition_aux_3 -> ELSE LBRACE . statutes_aux RBRACE
    (55) statutes_aux -> . statutes
    (56) statutes_aux -> . statutes statutes_aux
    (48) statutes -> . assignation SEMICOLON
    (49) statutes -> . CALL call SEMICOLON
    (50) statutes -> . read
    (51) statutes -> . write
    (52) statutes -> . condition
    (53) statutes -> . while
    (54) statutes -> . for
    (57) assignation -> . ID EQUAL exp
    (58) assignation -> . ID var_aux EQUAL exp
    (76) read -> . READ LPAREN ID RPAREN SEMICOLON
    (77) write -> . WRITE LPAREN write_aux RPAREN SEMICOLON
    (70) condition -> . IF condition_aux
    (82) while -> . WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (83) for -> . FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    CALL            shift and go to state 74
<<<<<<< HEAD
    ID              shift and go to state 80
    READ            shift and go to state 81
    WRITE           shift and go to state 82
    IF              shift and go to state 83
    WHILE           shift and go to state 84
    FROM            shift and go to state 85
=======
    READ            shift and go to state 80
    WRITE           shift and go to state 81
    IF              shift and go to state 82
    WHILE           shift and go to state 83
    FROM            shift and go to state 84
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330

    statutes_aux                   shift and go to state 278
    statutes                       shift and go to state 72
    assignation                    shift and go to state 73
    read                           shift and go to state 75
    write                          shift and go to state 76
    condition                      shift and go to state 77
    while                          shift and go to state 78
    for                            shift and go to state 79

state 277

    (83) for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE . statutes_aux RBRACE
    (55) statutes_aux -> . statutes
    (56) statutes_aux -> . statutes statutes_aux
    (48) statutes -> . assignation SEMICOLON
    (49) statutes -> . CALL call SEMICOLON
    (50) statutes -> . read
    (51) statutes -> . write
    (52) statutes -> . condition
    (53) statutes -> . while
    (54) statutes -> . for
    (57) assignation -> . ID EQUAL exp
    (58) assignation -> . ID var_aux EQUAL exp
    (76) read -> . READ LPAREN ID RPAREN SEMICOLON
    (77) write -> . WRITE LPAREN write_aux RPAREN SEMICOLON
    (70) condition -> . IF condition_aux
    (82) while -> . WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (83) for -> . FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    CALL            shift and go to state 74
<<<<<<< HEAD
    ID              shift and go to state 80
    READ            shift and go to state 81
    WRITE           shift and go to state 82
    IF              shift and go to state 83
    WHILE           shift and go to state 84
    FROM            shift and go to state 85

    assignation                    shift and go to state 73
=======
    READ            shift and go to state 80
    WRITE           shift and go to state 81
    IF              shift and go to state 82
    WHILE           shift and go to state 83
    FROM            shift and go to state 84

>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330
    statutes_aux                   shift and go to state 279
    statutes                       shift and go to state 72
    read                           shift and go to state 75
    write                          shift and go to state 76
    condition                      shift and go to state 77
    while                          shift and go to state 78
    for                            shift and go to state 79

state 278

    (74) condition_aux_3 -> ELSE LBRACE statutes_aux . RBRACE

    RBRACE          shift and go to state 280


state 279

    (83) for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux . RBRACE

    RBRACE          shift and go to state 281


state 280

    (74) condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .

    CALL            reduce using rule 74 (condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .)
    ID              reduce using rule 74 (condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .)
    READ            reduce using rule 74 (condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .)
    WRITE           reduce using rule 74 (condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .)
    IF              reduce using rule 74 (condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .)
    WHILE           reduce using rule 74 (condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .)
    FROM            reduce using rule 74 (condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .)
    RBRACE          reduce using rule 74 (condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .)
    RETURN          reduce using rule 74 (condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .)


state 281

    (83) for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .

    CALL            reduce using rule 83 (for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    ID              reduce using rule 83 (for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    READ            reduce using rule 83 (for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    WRITE           reduce using rule 83 (for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    IF              reduce using rule 83 (for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    WHILE           reduce using rule 83 (for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    FROM            reduce using rule 83 (for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    RBRACE          reduce using rule 83 (for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    RETURN          reduce using rule 83 (for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)

<<<<<<< HEAD
WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 60 resolved as shift
WARNING: shift/reduce conflict for ID in state 64 resolved as shift
=======
>>>>>>> 14d1fbfa54fd1b9de33b0ff5aad40faa91754330
