Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID TWOPOINTS program_classes MAIN add_class LBRACE program_body init RBRACE END
Rule 2     program_classes -> classes
Rule 3     program_classes -> empty
Rule 4     program_body -> program_body_vars program_body_funct
Rule 5     program_body_vars -> dec_vars
Rule 6     program_body_vars -> empty
Rule 7     program_body_funct -> functions
Rule 8     program_body_funct -> empty
Rule 9     dec_vars -> VAR dec_vars_aux
Rule 10    dec_vars_aux -> dec_vars_simple
Rule 11    dec_vars_aux -> dec_vars_complex
Rule 12    dec_vars_simple -> simple_type vars_simple_type SEMICOLON
Rule 13    dec_vars_simple -> simple_type vars_simple_type SEMICOLON dec_vars_aux
Rule 14    simple_type -> INT
Rule 15    simple_type -> FLOAT
Rule 16    simple_type -> CHAR
Rule 17    vars_simple_type -> ID add_variable
Rule 18    vars_simple_type -> ID add_variable COMMA vars_simple_type
Rule 19    vars_simple_type -> ID vars_simple_type_aux
Rule 20    vars_simple_type -> ID vars_simple_type_aux COMMA vars_simple_type
Rule 21    vars_simple_type_aux -> LBRACKET CTEI RBRACKET add_array_variable
Rule 22    vars_simple_type_aux -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET add_matrix_variable
Rule 23    dec_vars_complex -> OBJECT vars_complex_type SEMICOLON
Rule 24    dec_vars_complex -> OBJECT vars_complex_type SEMICOLON dec_vars_aux
Rule 25    vars_complex_type -> ID add_variable
Rule 26    vars_complex_type -> ID add_variable COMMA vars_complex_type
Rule 27    classes -> CLASS OBJECT classes_aux
Rule 28    classes -> CLASS OBJECT classes_aux classes
Rule 29    classes_aux -> add_class LBRACE dec_vars functions RBRACE
Rule 30    classes_aux -> add_class LBRACE functions RBRACE
Rule 31    classes_aux -> INHERITS OBJECT add_inherit_class LBRACE dec_vars functions RBRACE
Rule 32    classes_aux -> INHERITS OBJECT add_inherit_class LBRACE functions RBRACE
Rule 33    functions -> FUNCT functions_aux
Rule 34    functions -> FUNCT functions_aux functions
Rule 35    functions_aux -> VOID ID add_function LPAREN params RPAREN body
Rule 36    functions_aux -> VOID ID add_function LPAREN RPAREN body
Rule 37    functions_aux -> simple_type ID add_function LPAREN RPAREN body
Rule 38    functions_aux -> simple_type ID add_function LPAREN params RPAREN body
Rule 39    params -> simple_type ID add_variable
Rule 40    params -> simple_type ID add_variable COMMA params
Rule 41    params -> simple_type ID params_aux
Rule 42    params -> simple_type ID params_aux COMMA params
Rule 43    params_aux -> LBRACKET RBRACKET add_array_var_params
Rule 44    params_aux -> LBRACKET RBRACKET LBRACKET RBRACKET add_matrix_var_params
Rule 45    body -> LBRACE dec_vars statutes_aux RBRACE
Rule 46    body -> LBRACE statutes_aux RBRACE
Rule 47    body -> LBRACE statutes_aux RETURN ID SEMICOLON RBRACE
Rule 48    body -> LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE
Rule 49    statutes -> assignation SEMICOLON
Rule 50    statutes -> CALL call SEMICOLON
Rule 51    statutes -> read
Rule 52    statutes -> write
Rule 53    statutes -> condition
Rule 54    statutes -> while
Rule 55    statutes -> for
Rule 56    statutes_aux -> statutes
Rule 57    statutes_aux -> statutes statutes_aux
Rule 58    assignation -> ID EQUAL exp
Rule 59    assignation -> ID var_aux EQUAL exp
Rule 60    var_aux -> POINT ID
Rule 61    var_aux -> POINT ID var_aux_2
Rule 62    var_aux -> var_aux_2
Rule 63    var_aux_2 -> LBRACKET exp RBRACKET
Rule 64    var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET
Rule 65    call -> ID LPAREN RPAREN
Rule 66    call -> ID POINT ID LPAREN RPAREN
Rule 67    call -> ID LPAREN call_aux RPAREN
Rule 68    call -> ID POINT ID LPAREN call_aux RPAREN
Rule 69    call_aux -> exp
Rule 70    call_aux -> exp COMMA call_aux
Rule 71    condition -> IF condition_aux
Rule 72    condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3
Rule 73    condition_aux -> condition_aux_2
Rule 74    condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux
Rule 75    condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE
Rule 76    condition_aux_3 -> empty
Rule 77    read -> READ LPAREN ID RPAREN SEMICOLON
Rule 78    write -> WRITE LPAREN write_aux RPAREN SEMICOLON
Rule 79    write_aux -> exp
Rule 80    write_aux -> exp COMMA write_aux
Rule 81    write_aux -> CTESTRING
Rule 82    write_aux -> CTESTRING COMMA write_aux
Rule 83    while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
Rule 84    for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
Rule 85    exp -> l_exp pop_op_lop
Rule 86    exp -> l_exp pop_op_lop OR push_op exp
Rule 87    exp -> l_exp pop_op_lop AND push_op exp
Rule 88    l_exp -> a_exp
Rule 89    l_exp -> a_exp RELOP push_op a_exp pop_op_relop
Rule 90    a_exp -> term pop_op_art_n2
Rule 91    a_exp -> term pop_op_art_n2 PLUS push_op a_exp
Rule 92    a_exp -> term pop_op_art_n2 MINUS push_op a_exp
Rule 93    term -> factor pop_op_art_n1
Rule 94    term -> factor pop_op_art_n1 TIMES push_op term
Rule 95    term -> factor pop_op_art_n1 DIVIDE push_op term
Rule 96    factor -> LPAREN push_paren exp RPAREN pop_paren
Rule 97    factor -> call
Rule 98    factor -> factor_aux
Rule 99    factor_aux -> cte
Rule 100   factor_aux -> PLUS cte
Rule 101   factor_aux -> MINUS cte
Rule 102   cte -> ID push_var
Rule 103   cte -> ID var_aux push_var
Rule 104   cte -> CTEI push_var
Rule 105   cte -> CTEF push_var
Rule 106   cte -> CTECHAR push_var
Rule 107   init -> INIT add_init LBRACE statutes_aux RBRACE
Rule 108   init -> INIT add_init LBRACE dec_vars statutes_aux RBRACE
Rule 109   empty -> <empty>
Rule 110   add_variable -> <empty>
Rule 111   add_array_variable -> <empty>
Rule 112   add_matrix_variable -> <empty>
Rule 113   add_array_var_params -> <empty>
Rule 114   add_matrix_var_params -> <empty>
Rule 115   add_function -> <empty>
Rule 116   add_init -> <empty>
Rule 117   add_class -> <empty>
Rule 118   add_inherit_class -> <empty>
Rule 119   push_var -> <empty>
Rule 120   push_op -> <empty>
Rule 121   pop_op_art_n1 -> <empty>
Rule 122   pop_op_art_n2 -> <empty>
Rule 123   pop_op_relop -> <empty>
Rule 124   pop_op_lop -> <empty>
Rule 125   push_paren -> <empty>
Rule 126   pop_paren -> <empty>

Terminals, with rules where they appear

AND                  : 87
CALL                 : 50
CHAR                 : 16
CLASS                : 27 28
COMMA                : 18 20 26 40 42 70 80 82
CTECHAR              : 106
CTEF                 : 105
CTEI                 : 21 22 22 104
CTESTRING            : 81 82
DIVIDE               : 95
DO                   : 83 84
ELIF                 : 74
ELSE                 : 75
END                  : 1
EQUAL                : 58 59
FLOAT                : 15
FROM                 : 84
FUNCT                : 33 34
ID                   : 1 17 18 19 20 25 26 35 36 37 38 39 40 41 42 47 48 58 59 60 61 65 66 66 67 68 68 77 102 103
IF                   : 71
INHERITS             : 31 32
INIT                 : 107 108
INT                  : 14
LBRACE               : 1 29 30 31 32 45 46 47 48 72 74 75 83 84 107 108
LBRACKET             : 21 22 22 43 44 44 63 64 64
LPAREN               : 35 36 37 38 65 66 67 68 72 74 77 78 83 84 84 96
MAIN                 : 1
MINUS                : 92 101
OBJECT               : 23 24 27 28 31 32
OR                   : 86
PLUS                 : 91 100
POINT                : 60 61 66 68
PROGRAM              : 1
RBRACE               : 1 29 30 31 32 45 46 47 48 72 74 75 83 84 107 108
RBRACKET             : 21 22 22 43 44 44 63 64 64
READ                 : 77
RELOP                : 89
RETURN               : 47 48
RPAREN               : 35 36 37 38 65 66 67 68 72 74 77 78 83 84 84 96
SEMICOLON            : 12 13 23 24 47 48 49 50 77 78
THEN                 : 72 74
TIMES                : 94
TWOPOINTS            : 1
UNTIL                : 84
VAR                  : 9
VOID                 : 35 36
WHILE                : 83
WRITE                : 78
error                : 

Nonterminals, with rules where they appear

a_exp                : 88 89 89 91 92
add_array_var_params : 43
add_array_variable   : 21
add_class            : 1 29 30
add_function         : 35 36 37 38
add_inherit_class    : 31 32
add_init             : 107 108
add_matrix_var_params : 44
add_matrix_variable  : 22
add_variable         : 17 18 25 26 39 40
assignation          : 49 84
body                 : 35 36 37 38
call                 : 50 97
call_aux             : 67 68 70
classes              : 2 28
classes_aux          : 27 28
condition            : 53
condition_aux        : 71 74
condition_aux_2      : 73
condition_aux_3      : 72
cte                  : 99 100 101
dec_vars             : 5 29 31 45 48 108
dec_vars_aux         : 9 13 24
dec_vars_complex     : 11
dec_vars_simple      : 10
empty                : 3 6 8 76
exp                  : 58 59 63 64 64 69 70 72 74 79 80 83 84 86 87 96
factor               : 93 94 95
factor_aux           : 98
for                  : 55
functions            : 7 29 30 31 32 34
functions_aux        : 33 34
init                 : 1
l_exp                : 85 86 87
params               : 35 38 40 42
params_aux           : 41 42
pop_op_art_n1        : 93 94 95
pop_op_art_n2        : 90 91 92
pop_op_lop           : 85 86 87
pop_op_relop         : 89
pop_paren            : 96
program              : 0
program_body         : 1
program_body_funct   : 4
program_body_vars    : 4
program_classes      : 1
push_op              : 86 87 89 91 92 94 95
push_paren           : 96
push_var             : 102 103 104 105 106
read                 : 51
simple_type          : 12 13 37 38 39 40 41 42
statutes             : 56 57
statutes_aux         : 45 46 47 48 57 72 74 75 83 84 107 108
term                 : 90 91 92 94 95
var_aux              : 59 103
var_aux_2            : 61 62
vars_complex_type    : 23 24 26
vars_simple_type     : 12 13 18 20
vars_simple_type_aux : 19 20
while                : 54
write                : 52
write_aux            : 78 80 82

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID TWOPOINTS program_classes MAIN add_class LBRACE program_body init RBRACE END

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID TWOPOINTS program_classes MAIN add_class LBRACE program_body init RBRACE END

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . TWOPOINTS program_classes MAIN add_class LBRACE program_body init RBRACE END

    TWOPOINTS       shift and go to state 4


state 4

    (1) program -> PROGRAM ID TWOPOINTS . program_classes MAIN add_class LBRACE program_body init RBRACE END
    (2) program_classes -> . classes
    (3) program_classes -> . empty
    (27) classes -> . CLASS OBJECT classes_aux
    (28) classes -> . CLASS OBJECT classes_aux classes
    (109) empty -> .

    CLASS           shift and go to state 8
    MAIN            reduce using rule 109 (empty -> .)

    program_classes                shift and go to state 5
    classes                        shift and go to state 6
    empty                          shift and go to state 7

state 5

    (1) program -> PROGRAM ID TWOPOINTS program_classes . MAIN add_class LBRACE program_body init RBRACE END

    MAIN            shift and go to state 9


state 6

    (2) program_classes -> classes .

    MAIN            reduce using rule 2 (program_classes -> classes .)


state 7

    (3) program_classes -> empty .

    MAIN            reduce using rule 3 (program_classes -> empty .)


state 8

    (27) classes -> CLASS . OBJECT classes_aux
    (28) classes -> CLASS . OBJECT classes_aux classes

    OBJECT          shift and go to state 10


state 9

    (1) program -> PROGRAM ID TWOPOINTS program_classes MAIN . add_class LBRACE program_body init RBRACE END
    (117) add_class -> .

    LBRACE          reduce using rule 117 (add_class -> .)

    add_class                      shift and go to state 11

state 10

    (27) classes -> CLASS OBJECT . classes_aux
    (28) classes -> CLASS OBJECT . classes_aux classes
    (29) classes_aux -> . add_class LBRACE dec_vars functions RBRACE
    (30) classes_aux -> . add_class LBRACE functions RBRACE
    (31) classes_aux -> . INHERITS OBJECT add_inherit_class LBRACE dec_vars functions RBRACE
    (32) classes_aux -> . INHERITS OBJECT add_inherit_class LBRACE functions RBRACE
    (117) add_class -> .

    INHERITS        shift and go to state 14
    LBRACE          reduce using rule 117 (add_class -> .)

    classes_aux                    shift and go to state 12
    add_class                      shift and go to state 13

state 11

    (1) program -> PROGRAM ID TWOPOINTS program_classes MAIN add_class . LBRACE program_body init RBRACE END

    LBRACE          shift and go to state 15


state 12

    (27) classes -> CLASS OBJECT classes_aux .
    (28) classes -> CLASS OBJECT classes_aux . classes
    (27) classes -> . CLASS OBJECT classes_aux
    (28) classes -> . CLASS OBJECT classes_aux classes

    MAIN            reduce using rule 27 (classes -> CLASS OBJECT classes_aux .)
    CLASS           shift and go to state 8

    classes                        shift and go to state 16

state 13

    (29) classes_aux -> add_class . LBRACE dec_vars functions RBRACE
    (30) classes_aux -> add_class . LBRACE functions RBRACE

    LBRACE          shift and go to state 17


state 14

    (31) classes_aux -> INHERITS . OBJECT add_inherit_class LBRACE dec_vars functions RBRACE
    (32) classes_aux -> INHERITS . OBJECT add_inherit_class LBRACE functions RBRACE

    OBJECT          shift and go to state 18


state 15

    (1) program -> PROGRAM ID TWOPOINTS program_classes MAIN add_class LBRACE . program_body init RBRACE END
    (4) program_body -> . program_body_vars program_body_funct
    (5) program_body_vars -> . dec_vars
    (6) program_body_vars -> . empty
    (9) dec_vars -> . VAR dec_vars_aux
    (109) empty -> .

    VAR             shift and go to state 23
    FUNCT           reduce using rule 109 (empty -> .)
    INIT            reduce using rule 109 (empty -> .)

    program_body                   shift and go to state 19
    program_body_vars              shift and go to state 20
    dec_vars                       shift and go to state 21
    empty                          shift and go to state 22

state 16

    (28) classes -> CLASS OBJECT classes_aux classes .

    MAIN            reduce using rule 28 (classes -> CLASS OBJECT classes_aux classes .)


state 17

    (29) classes_aux -> add_class LBRACE . dec_vars functions RBRACE
    (30) classes_aux -> add_class LBRACE . functions RBRACE
    (9) dec_vars -> . VAR dec_vars_aux
    (33) functions -> . FUNCT functions_aux
    (34) functions -> . FUNCT functions_aux functions

    VAR             shift and go to state 23
    FUNCT           shift and go to state 26

    dec_vars                       shift and go to state 24
    functions                      shift and go to state 25

state 18

    (31) classes_aux -> INHERITS OBJECT . add_inherit_class LBRACE dec_vars functions RBRACE
    (32) classes_aux -> INHERITS OBJECT . add_inherit_class LBRACE functions RBRACE
    (118) add_inherit_class -> .

    LBRACE          reduce using rule 118 (add_inherit_class -> .)

    add_inherit_class              shift and go to state 27

state 19

    (1) program -> PROGRAM ID TWOPOINTS program_classes MAIN add_class LBRACE program_body . init RBRACE END
    (107) init -> . INIT add_init LBRACE statutes_aux RBRACE
    (108) init -> . INIT add_init LBRACE dec_vars statutes_aux RBRACE

    INIT            shift and go to state 29

    init                           shift and go to state 28

state 20

    (4) program_body -> program_body_vars . program_body_funct
    (7) program_body_funct -> . functions
    (8) program_body_funct -> . empty
    (33) functions -> . FUNCT functions_aux
    (34) functions -> . FUNCT functions_aux functions
    (109) empty -> .

    FUNCT           shift and go to state 26
    INIT            reduce using rule 109 (empty -> .)

    program_body_funct             shift and go to state 30
    functions                      shift and go to state 31
    empty                          shift and go to state 32

state 21

    (5) program_body_vars -> dec_vars .

    FUNCT           reduce using rule 5 (program_body_vars -> dec_vars .)
    INIT            reduce using rule 5 (program_body_vars -> dec_vars .)


state 22

    (6) program_body_vars -> empty .

    FUNCT           reduce using rule 6 (program_body_vars -> empty .)
    INIT            reduce using rule 6 (program_body_vars -> empty .)


state 23

    (9) dec_vars -> VAR . dec_vars_aux
    (10) dec_vars_aux -> . dec_vars_simple
    (11) dec_vars_aux -> . dec_vars_complex
    (12) dec_vars_simple -> . simple_type vars_simple_type SEMICOLON
    (13) dec_vars_simple -> . simple_type vars_simple_type SEMICOLON dec_vars_aux
    (23) dec_vars_complex -> . OBJECT vars_complex_type SEMICOLON
    (24) dec_vars_complex -> . OBJECT vars_complex_type SEMICOLON dec_vars_aux
    (14) simple_type -> . INT
    (15) simple_type -> . FLOAT
    (16) simple_type -> . CHAR

    OBJECT          shift and go to state 37
    INT             shift and go to state 38
    FLOAT           shift and go to state 39
    CHAR            shift and go to state 40

    dec_vars_aux                   shift and go to state 33
    dec_vars_simple                shift and go to state 34
    dec_vars_complex               shift and go to state 35
    simple_type                    shift and go to state 36

state 24

    (29) classes_aux -> add_class LBRACE dec_vars . functions RBRACE
    (33) functions -> . FUNCT functions_aux
    (34) functions -> . FUNCT functions_aux functions

    FUNCT           shift and go to state 26

    functions                      shift and go to state 41

state 25

    (30) classes_aux -> add_class LBRACE functions . RBRACE

    RBRACE          shift and go to state 42


state 26

    (33) functions -> FUNCT . functions_aux
    (34) functions -> FUNCT . functions_aux functions
    (35) functions_aux -> . VOID ID add_function LPAREN params RPAREN body
    (36) functions_aux -> . VOID ID add_function LPAREN RPAREN body
    (37) functions_aux -> . simple_type ID add_function LPAREN RPAREN body
    (38) functions_aux -> . simple_type ID add_function LPAREN params RPAREN body
    (14) simple_type -> . INT
    (15) simple_type -> . FLOAT
    (16) simple_type -> . CHAR

    VOID            shift and go to state 44
    INT             shift and go to state 38
    FLOAT           shift and go to state 39
    CHAR            shift and go to state 40

    functions_aux                  shift and go to state 43
    simple_type                    shift and go to state 45

state 27

    (31) classes_aux -> INHERITS OBJECT add_inherit_class . LBRACE dec_vars functions RBRACE
    (32) classes_aux -> INHERITS OBJECT add_inherit_class . LBRACE functions RBRACE

    LBRACE          shift and go to state 46


state 28

    (1) program -> PROGRAM ID TWOPOINTS program_classes MAIN add_class LBRACE program_body init . RBRACE END

    RBRACE          shift and go to state 47


state 29

    (107) init -> INIT . add_init LBRACE statutes_aux RBRACE
    (108) init -> INIT . add_init LBRACE dec_vars statutes_aux RBRACE
    (116) add_init -> .

    LBRACE          reduce using rule 116 (add_init -> .)

    add_init                       shift and go to state 48

state 30

    (4) program_body -> program_body_vars program_body_funct .

    INIT            reduce using rule 4 (program_body -> program_body_vars program_body_funct .)


state 31

    (7) program_body_funct -> functions .

    INIT            reduce using rule 7 (program_body_funct -> functions .)


state 32

    (8) program_body_funct -> empty .

    INIT            reduce using rule 8 (program_body_funct -> empty .)


state 33

    (9) dec_vars -> VAR dec_vars_aux .

    FUNCT           reduce using rule 9 (dec_vars -> VAR dec_vars_aux .)
    INIT            reduce using rule 9 (dec_vars -> VAR dec_vars_aux .)
    CALL            reduce using rule 9 (dec_vars -> VAR dec_vars_aux .)
    ID              reduce using rule 9 (dec_vars -> VAR dec_vars_aux .)
    READ            reduce using rule 9 (dec_vars -> VAR dec_vars_aux .)
    WRITE           reduce using rule 9 (dec_vars -> VAR dec_vars_aux .)
    IF              reduce using rule 9 (dec_vars -> VAR dec_vars_aux .)
    WHILE           reduce using rule 9 (dec_vars -> VAR dec_vars_aux .)
    FROM            reduce using rule 9 (dec_vars -> VAR dec_vars_aux .)


state 34

    (10) dec_vars_aux -> dec_vars_simple .

    FUNCT           reduce using rule 10 (dec_vars_aux -> dec_vars_simple .)
    INIT            reduce using rule 10 (dec_vars_aux -> dec_vars_simple .)
    CALL            reduce using rule 10 (dec_vars_aux -> dec_vars_simple .)
    ID              reduce using rule 10 (dec_vars_aux -> dec_vars_simple .)
    READ            reduce using rule 10 (dec_vars_aux -> dec_vars_simple .)
    WRITE           reduce using rule 10 (dec_vars_aux -> dec_vars_simple .)
    IF              reduce using rule 10 (dec_vars_aux -> dec_vars_simple .)
    WHILE           reduce using rule 10 (dec_vars_aux -> dec_vars_simple .)
    FROM            reduce using rule 10 (dec_vars_aux -> dec_vars_simple .)


state 35

    (11) dec_vars_aux -> dec_vars_complex .

    FUNCT           reduce using rule 11 (dec_vars_aux -> dec_vars_complex .)
    INIT            reduce using rule 11 (dec_vars_aux -> dec_vars_complex .)
    CALL            reduce using rule 11 (dec_vars_aux -> dec_vars_complex .)
    ID              reduce using rule 11 (dec_vars_aux -> dec_vars_complex .)
    READ            reduce using rule 11 (dec_vars_aux -> dec_vars_complex .)
    WRITE           reduce using rule 11 (dec_vars_aux -> dec_vars_complex .)
    IF              reduce using rule 11 (dec_vars_aux -> dec_vars_complex .)
    WHILE           reduce using rule 11 (dec_vars_aux -> dec_vars_complex .)
    FROM            reduce using rule 11 (dec_vars_aux -> dec_vars_complex .)


state 36

    (12) dec_vars_simple -> simple_type . vars_simple_type SEMICOLON
    (13) dec_vars_simple -> simple_type . vars_simple_type SEMICOLON dec_vars_aux
    (17) vars_simple_type -> . ID add_variable
    (18) vars_simple_type -> . ID add_variable COMMA vars_simple_type
    (19) vars_simple_type -> . ID vars_simple_type_aux
    (20) vars_simple_type -> . ID vars_simple_type_aux COMMA vars_simple_type

    ID              shift and go to state 50

    vars_simple_type               shift and go to state 49

state 37

    (23) dec_vars_complex -> OBJECT . vars_complex_type SEMICOLON
    (24) dec_vars_complex -> OBJECT . vars_complex_type SEMICOLON dec_vars_aux
    (25) vars_complex_type -> . ID add_variable
    (26) vars_complex_type -> . ID add_variable COMMA vars_complex_type

    ID              shift and go to state 52

    vars_complex_type              shift and go to state 51

state 38

    (14) simple_type -> INT .

    ID              reduce using rule 14 (simple_type -> INT .)


state 39

    (15) simple_type -> FLOAT .

    ID              reduce using rule 15 (simple_type -> FLOAT .)


state 40

    (16) simple_type -> CHAR .

    ID              reduce using rule 16 (simple_type -> CHAR .)


state 41

    (29) classes_aux -> add_class LBRACE dec_vars functions . RBRACE

    RBRACE          shift and go to state 53


state 42

    (30) classes_aux -> add_class LBRACE functions RBRACE .

    CLASS           reduce using rule 30 (classes_aux -> add_class LBRACE functions RBRACE .)
    MAIN            reduce using rule 30 (classes_aux -> add_class LBRACE functions RBRACE .)


state 43

    (33) functions -> FUNCT functions_aux .
    (34) functions -> FUNCT functions_aux . functions
    (33) functions -> . FUNCT functions_aux
    (34) functions -> . FUNCT functions_aux functions

    RBRACE          reduce using rule 33 (functions -> FUNCT functions_aux .)
    INIT            reduce using rule 33 (functions -> FUNCT functions_aux .)
    FUNCT           shift and go to state 26

    functions                      shift and go to state 54

state 44

    (35) functions_aux -> VOID . ID add_function LPAREN params RPAREN body
    (36) functions_aux -> VOID . ID add_function LPAREN RPAREN body

    ID              shift and go to state 55


state 45

    (37) functions_aux -> simple_type . ID add_function LPAREN RPAREN body
    (38) functions_aux -> simple_type . ID add_function LPAREN params RPAREN body

    ID              shift and go to state 56


state 46

    (31) classes_aux -> INHERITS OBJECT add_inherit_class LBRACE . dec_vars functions RBRACE
    (32) classes_aux -> INHERITS OBJECT add_inherit_class LBRACE . functions RBRACE
    (9) dec_vars -> . VAR dec_vars_aux
    (33) functions -> . FUNCT functions_aux
    (34) functions -> . FUNCT functions_aux functions

    VAR             shift and go to state 23
    FUNCT           shift and go to state 26

    dec_vars                       shift and go to state 57
    functions                      shift and go to state 58

state 47

    (1) program -> PROGRAM ID TWOPOINTS program_classes MAIN add_class LBRACE program_body init RBRACE . END

    END             shift and go to state 59


state 48

    (107) init -> INIT add_init . LBRACE statutes_aux RBRACE
    (108) init -> INIT add_init . LBRACE dec_vars statutes_aux RBRACE

    LBRACE          shift and go to state 60


state 49

    (12) dec_vars_simple -> simple_type vars_simple_type . SEMICOLON
    (13) dec_vars_simple -> simple_type vars_simple_type . SEMICOLON dec_vars_aux

    SEMICOLON       shift and go to state 61


state 50

    (17) vars_simple_type -> ID . add_variable
    (18) vars_simple_type -> ID . add_variable COMMA vars_simple_type
    (19) vars_simple_type -> ID . vars_simple_type_aux
    (20) vars_simple_type -> ID . vars_simple_type_aux COMMA vars_simple_type
    (110) add_variable -> .
    (21) vars_simple_type_aux -> . LBRACKET CTEI RBRACKET add_array_variable
    (22) vars_simple_type_aux -> . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET add_matrix_variable

    COMMA           reduce using rule 110 (add_variable -> .)
    SEMICOLON       reduce using rule 110 (add_variable -> .)
    LBRACKET        shift and go to state 64

    add_variable                   shift and go to state 62
    vars_simple_type_aux           shift and go to state 63

state 51

    (23) dec_vars_complex -> OBJECT vars_complex_type . SEMICOLON
    (24) dec_vars_complex -> OBJECT vars_complex_type . SEMICOLON dec_vars_aux

    SEMICOLON       shift and go to state 65


state 52

    (25) vars_complex_type -> ID . add_variable
    (26) vars_complex_type -> ID . add_variable COMMA vars_complex_type
    (110) add_variable -> .

    COMMA           reduce using rule 110 (add_variable -> .)
    SEMICOLON       reduce using rule 110 (add_variable -> .)

    add_variable                   shift and go to state 66

state 53

    (29) classes_aux -> add_class LBRACE dec_vars functions RBRACE .

    CLASS           reduce using rule 29 (classes_aux -> add_class LBRACE dec_vars functions RBRACE .)
    MAIN            reduce using rule 29 (classes_aux -> add_class LBRACE dec_vars functions RBRACE .)


state 54

    (34) functions -> FUNCT functions_aux functions .

    RBRACE          reduce using rule 34 (functions -> FUNCT functions_aux functions .)
    INIT            reduce using rule 34 (functions -> FUNCT functions_aux functions .)


state 55

    (35) functions_aux -> VOID ID . add_function LPAREN params RPAREN body
    (36) functions_aux -> VOID ID . add_function LPAREN RPAREN body
    (115) add_function -> .

    LPAREN          reduce using rule 115 (add_function -> .)

    add_function                   shift and go to state 67

state 56

    (37) functions_aux -> simple_type ID . add_function LPAREN RPAREN body
    (38) functions_aux -> simple_type ID . add_function LPAREN params RPAREN body
    (115) add_function -> .

    LPAREN          reduce using rule 115 (add_function -> .)

    add_function                   shift and go to state 68

state 57

    (31) classes_aux -> INHERITS OBJECT add_inherit_class LBRACE dec_vars . functions RBRACE
    (33) functions -> . FUNCT functions_aux
    (34) functions -> . FUNCT functions_aux functions

    FUNCT           shift and go to state 26

    functions                      shift and go to state 69

state 58

    (32) classes_aux -> INHERITS OBJECT add_inherit_class LBRACE functions . RBRACE

    RBRACE          shift and go to state 70


state 59

    (1) program -> PROGRAM ID TWOPOINTS program_classes MAIN add_class LBRACE program_body init RBRACE END .

    $end            reduce using rule 1 (program -> PROGRAM ID TWOPOINTS program_classes MAIN add_class LBRACE program_body init RBRACE END .)


state 60

    (107) init -> INIT add_init LBRACE . statutes_aux RBRACE
    (108) init -> INIT add_init LBRACE . dec_vars statutes_aux RBRACE
    (56) statutes_aux -> . statutes
    (57) statutes_aux -> . statutes statutes_aux
    (9) dec_vars -> . VAR dec_vars_aux
    (49) statutes -> . assignation SEMICOLON
    (50) statutes -> . CALL call SEMICOLON
    (51) statutes -> . read
    (52) statutes -> . write
    (53) statutes -> . condition
    (54) statutes -> . while
    (55) statutes -> . for
    (58) assignation -> . ID EQUAL exp
    (59) assignation -> . ID var_aux EQUAL exp
    (77) read -> . READ LPAREN ID RPAREN SEMICOLON
    (78) write -> . WRITE LPAREN write_aux RPAREN SEMICOLON
    (71) condition -> . IF condition_aux
    (83) while -> . WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (84) for -> . FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    VAR             shift and go to state 23
    CALL            shift and go to state 75
    ID              shift and go to state 81
    READ            shift and go to state 82
    WRITE           shift and go to state 83
    IF              shift and go to state 84
    WHILE           shift and go to state 85
    FROM            shift and go to state 86

    statutes_aux                   shift and go to state 71
    dec_vars                       shift and go to state 72
    statutes                       shift and go to state 73
    assignation                    shift and go to state 74
    read                           shift and go to state 76
    write                          shift and go to state 77
    condition                      shift and go to state 78
    while                          shift and go to state 79
    for                            shift and go to state 80

state 61

    (12) dec_vars_simple -> simple_type vars_simple_type SEMICOLON .
    (13) dec_vars_simple -> simple_type vars_simple_type SEMICOLON . dec_vars_aux
    (10) dec_vars_aux -> . dec_vars_simple
    (11) dec_vars_aux -> . dec_vars_complex
    (12) dec_vars_simple -> . simple_type vars_simple_type SEMICOLON
    (13) dec_vars_simple -> . simple_type vars_simple_type SEMICOLON dec_vars_aux
    (23) dec_vars_complex -> . OBJECT vars_complex_type SEMICOLON
    (24) dec_vars_complex -> . OBJECT vars_complex_type SEMICOLON dec_vars_aux
    (14) simple_type -> . INT
    (15) simple_type -> . FLOAT
    (16) simple_type -> . CHAR

    FUNCT           reduce using rule 12 (dec_vars_simple -> simple_type vars_simple_type SEMICOLON .)
    INIT            reduce using rule 12 (dec_vars_simple -> simple_type vars_simple_type SEMICOLON .)
    CALL            reduce using rule 12 (dec_vars_simple -> simple_type vars_simple_type SEMICOLON .)
    ID              reduce using rule 12 (dec_vars_simple -> simple_type vars_simple_type SEMICOLON .)
    READ            reduce using rule 12 (dec_vars_simple -> simple_type vars_simple_type SEMICOLON .)
    WRITE           reduce using rule 12 (dec_vars_simple -> simple_type vars_simple_type SEMICOLON .)
    IF              reduce using rule 12 (dec_vars_simple -> simple_type vars_simple_type SEMICOLON .)
    WHILE           reduce using rule 12 (dec_vars_simple -> simple_type vars_simple_type SEMICOLON .)
    FROM            reduce using rule 12 (dec_vars_simple -> simple_type vars_simple_type SEMICOLON .)
    OBJECT          shift and go to state 37
    INT             shift and go to state 38
    FLOAT           shift and go to state 39
    CHAR            shift and go to state 40

    simple_type                    shift and go to state 36
    dec_vars_aux                   shift and go to state 87
    dec_vars_simple                shift and go to state 34
    dec_vars_complex               shift and go to state 35

state 62

    (17) vars_simple_type -> ID add_variable .
    (18) vars_simple_type -> ID add_variable . COMMA vars_simple_type

    SEMICOLON       reduce using rule 17 (vars_simple_type -> ID add_variable .)
    COMMA           shift and go to state 88


state 63

    (19) vars_simple_type -> ID vars_simple_type_aux .
    (20) vars_simple_type -> ID vars_simple_type_aux . COMMA vars_simple_type

    SEMICOLON       reduce using rule 19 (vars_simple_type -> ID vars_simple_type_aux .)
    COMMA           shift and go to state 89


state 64

    (21) vars_simple_type_aux -> LBRACKET . CTEI RBRACKET add_array_variable
    (22) vars_simple_type_aux -> LBRACKET . CTEI RBRACKET LBRACKET CTEI RBRACKET add_matrix_variable

    CTEI            shift and go to state 90


state 65

    (23) dec_vars_complex -> OBJECT vars_complex_type SEMICOLON .
    (24) dec_vars_complex -> OBJECT vars_complex_type SEMICOLON . dec_vars_aux
    (10) dec_vars_aux -> . dec_vars_simple
    (11) dec_vars_aux -> . dec_vars_complex
    (12) dec_vars_simple -> . simple_type vars_simple_type SEMICOLON
    (13) dec_vars_simple -> . simple_type vars_simple_type SEMICOLON dec_vars_aux
    (23) dec_vars_complex -> . OBJECT vars_complex_type SEMICOLON
    (24) dec_vars_complex -> . OBJECT vars_complex_type SEMICOLON dec_vars_aux
    (14) simple_type -> . INT
    (15) simple_type -> . FLOAT
    (16) simple_type -> . CHAR

    FUNCT           reduce using rule 23 (dec_vars_complex -> OBJECT vars_complex_type SEMICOLON .)
    INIT            reduce using rule 23 (dec_vars_complex -> OBJECT vars_complex_type SEMICOLON .)
    CALL            reduce using rule 23 (dec_vars_complex -> OBJECT vars_complex_type SEMICOLON .)
    ID              reduce using rule 23 (dec_vars_complex -> OBJECT vars_complex_type SEMICOLON .)
    READ            reduce using rule 23 (dec_vars_complex -> OBJECT vars_complex_type SEMICOLON .)
    WRITE           reduce using rule 23 (dec_vars_complex -> OBJECT vars_complex_type SEMICOLON .)
    IF              reduce using rule 23 (dec_vars_complex -> OBJECT vars_complex_type SEMICOLON .)
    WHILE           reduce using rule 23 (dec_vars_complex -> OBJECT vars_complex_type SEMICOLON .)
    FROM            reduce using rule 23 (dec_vars_complex -> OBJECT vars_complex_type SEMICOLON .)
    OBJECT          shift and go to state 37
    INT             shift and go to state 38
    FLOAT           shift and go to state 39
    CHAR            shift and go to state 40

    dec_vars_aux                   shift and go to state 91
    dec_vars_simple                shift and go to state 34
    dec_vars_complex               shift and go to state 35
    simple_type                    shift and go to state 36

state 66

    (25) vars_complex_type -> ID add_variable .
    (26) vars_complex_type -> ID add_variable . COMMA vars_complex_type

    SEMICOLON       reduce using rule 25 (vars_complex_type -> ID add_variable .)
    COMMA           shift and go to state 92


state 67

    (35) functions_aux -> VOID ID add_function . LPAREN params RPAREN body
    (36) functions_aux -> VOID ID add_function . LPAREN RPAREN body

    LPAREN          shift and go to state 93


state 68

    (37) functions_aux -> simple_type ID add_function . LPAREN RPAREN body
    (38) functions_aux -> simple_type ID add_function . LPAREN params RPAREN body

    LPAREN          shift and go to state 94


state 69

    (31) classes_aux -> INHERITS OBJECT add_inherit_class LBRACE dec_vars functions . RBRACE

    RBRACE          shift and go to state 95


state 70

    (32) classes_aux -> INHERITS OBJECT add_inherit_class LBRACE functions RBRACE .

    CLASS           reduce using rule 32 (classes_aux -> INHERITS OBJECT add_inherit_class LBRACE functions RBRACE .)
    MAIN            reduce using rule 32 (classes_aux -> INHERITS OBJECT add_inherit_class LBRACE functions RBRACE .)


state 71

    (107) init -> INIT add_init LBRACE statutes_aux . RBRACE

    RBRACE          shift and go to state 96


state 72

    (108) init -> INIT add_init LBRACE dec_vars . statutes_aux RBRACE
    (56) statutes_aux -> . statutes
    (57) statutes_aux -> . statutes statutes_aux
    (49) statutes -> . assignation SEMICOLON
    (50) statutes -> . CALL call SEMICOLON
    (51) statutes -> . read
    (52) statutes -> . write
    (53) statutes -> . condition
    (54) statutes -> . while
    (55) statutes -> . for
    (58) assignation -> . ID EQUAL exp
    (59) assignation -> . ID var_aux EQUAL exp
    (77) read -> . READ LPAREN ID RPAREN SEMICOLON
    (78) write -> . WRITE LPAREN write_aux RPAREN SEMICOLON
    (71) condition -> . IF condition_aux
    (83) while -> . WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (84) for -> . FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    CALL            shift and go to state 75
    ID              shift and go to state 81
    READ            shift and go to state 82
    WRITE           shift and go to state 83
    IF              shift and go to state 84
    WHILE           shift and go to state 85
    FROM            shift and go to state 86

    statutes_aux                   shift and go to state 97
    statutes                       shift and go to state 73
    assignation                    shift and go to state 74
    read                           shift and go to state 76
    write                          shift and go to state 77
    condition                      shift and go to state 78
    while                          shift and go to state 79
    for                            shift and go to state 80

state 73

    (56) statutes_aux -> statutes .
    (57) statutes_aux -> statutes . statutes_aux
    (56) statutes_aux -> . statutes
    (57) statutes_aux -> . statutes statutes_aux
    (49) statutes -> . assignation SEMICOLON
    (50) statutes -> . CALL call SEMICOLON
    (51) statutes -> . read
    (52) statutes -> . write
    (53) statutes -> . condition
    (54) statutes -> . while
    (55) statutes -> . for
    (58) assignation -> . ID EQUAL exp
    (59) assignation -> . ID var_aux EQUAL exp
    (77) read -> . READ LPAREN ID RPAREN SEMICOLON
    (78) write -> . WRITE LPAREN write_aux RPAREN SEMICOLON
    (71) condition -> . IF condition_aux
    (83) while -> . WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (84) for -> . FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    RBRACE          reduce using rule 56 (statutes_aux -> statutes .)
    RETURN          reduce using rule 56 (statutes_aux -> statutes .)
    CALL            shift and go to state 75
    ID              shift and go to state 81
    READ            shift and go to state 82
    WRITE           shift and go to state 83
    IF              shift and go to state 84
    WHILE           shift and go to state 85
    FROM            shift and go to state 86

    statutes                       shift and go to state 73
    statutes_aux                   shift and go to state 98
    assignation                    shift and go to state 74
    read                           shift and go to state 76
    write                          shift and go to state 77
    condition                      shift and go to state 78
    while                          shift and go to state 79
    for                            shift and go to state 80

state 74

    (49) statutes -> assignation . SEMICOLON

    SEMICOLON       shift and go to state 99


state 75

    (50) statutes -> CALL . call SEMICOLON
    (65) call -> . ID LPAREN RPAREN
    (66) call -> . ID POINT ID LPAREN RPAREN
    (67) call -> . ID LPAREN call_aux RPAREN
    (68) call -> . ID POINT ID LPAREN call_aux RPAREN

    ID              shift and go to state 101

    call                           shift and go to state 100

state 76

    (51) statutes -> read .

    CALL            reduce using rule 51 (statutes -> read .)
    ID              reduce using rule 51 (statutes -> read .)
    READ            reduce using rule 51 (statutes -> read .)
    WRITE           reduce using rule 51 (statutes -> read .)
    IF              reduce using rule 51 (statutes -> read .)
    WHILE           reduce using rule 51 (statutes -> read .)
    FROM            reduce using rule 51 (statutes -> read .)
    RBRACE          reduce using rule 51 (statutes -> read .)
    RETURN          reduce using rule 51 (statutes -> read .)


state 77

    (52) statutes -> write .

    CALL            reduce using rule 52 (statutes -> write .)
    ID              reduce using rule 52 (statutes -> write .)
    READ            reduce using rule 52 (statutes -> write .)
    WRITE           reduce using rule 52 (statutes -> write .)
    IF              reduce using rule 52 (statutes -> write .)
    WHILE           reduce using rule 52 (statutes -> write .)
    FROM            reduce using rule 52 (statutes -> write .)
    RBRACE          reduce using rule 52 (statutes -> write .)
    RETURN          reduce using rule 52 (statutes -> write .)


state 78

    (53) statutes -> condition .

    CALL            reduce using rule 53 (statutes -> condition .)
    ID              reduce using rule 53 (statutes -> condition .)
    READ            reduce using rule 53 (statutes -> condition .)
    WRITE           reduce using rule 53 (statutes -> condition .)
    IF              reduce using rule 53 (statutes -> condition .)
    WHILE           reduce using rule 53 (statutes -> condition .)
    FROM            reduce using rule 53 (statutes -> condition .)
    RBRACE          reduce using rule 53 (statutes -> condition .)
    RETURN          reduce using rule 53 (statutes -> condition .)


state 79

    (54) statutes -> while .

    CALL            reduce using rule 54 (statutes -> while .)
    ID              reduce using rule 54 (statutes -> while .)
    READ            reduce using rule 54 (statutes -> while .)
    WRITE           reduce using rule 54 (statutes -> while .)
    IF              reduce using rule 54 (statutes -> while .)
    WHILE           reduce using rule 54 (statutes -> while .)
    FROM            reduce using rule 54 (statutes -> while .)
    RBRACE          reduce using rule 54 (statutes -> while .)
    RETURN          reduce using rule 54 (statutes -> while .)


state 80

    (55) statutes -> for .

    CALL            reduce using rule 55 (statutes -> for .)
    ID              reduce using rule 55 (statutes -> for .)
    READ            reduce using rule 55 (statutes -> for .)
    WRITE           reduce using rule 55 (statutes -> for .)
    IF              reduce using rule 55 (statutes -> for .)
    WHILE           reduce using rule 55 (statutes -> for .)
    FROM            reduce using rule 55 (statutes -> for .)
    RBRACE          reduce using rule 55 (statutes -> for .)
    RETURN          reduce using rule 55 (statutes -> for .)


state 81

    (58) assignation -> ID . EQUAL exp
    (59) assignation -> ID . var_aux EQUAL exp
    (60) var_aux -> . POINT ID
    (61) var_aux -> . POINT ID var_aux_2
    (62) var_aux -> . var_aux_2
    (63) var_aux_2 -> . LBRACKET exp RBRACKET
    (64) var_aux_2 -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET

    EQUAL           shift and go to state 102
    POINT           shift and go to state 104
    LBRACKET        shift and go to state 106

    var_aux                        shift and go to state 103
    var_aux_2                      shift and go to state 105

state 82

    (77) read -> READ . LPAREN ID RPAREN SEMICOLON

    LPAREN          shift and go to state 107


state 83

    (78) write -> WRITE . LPAREN write_aux RPAREN SEMICOLON

    LPAREN          shift and go to state 108


state 84

    (71) condition -> IF . condition_aux
    (72) condition_aux -> . LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3
    (73) condition_aux -> . condition_aux_2
    (74) condition_aux_2 -> . LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux

    LPAREN          shift and go to state 110

    condition_aux                  shift and go to state 109
    condition_aux_2                shift and go to state 111

state 85

    (83) while -> WHILE . LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    LPAREN          shift and go to state 112


state 86

    (84) for -> FROM . LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    LPAREN          shift and go to state 113


state 87

    (13) dec_vars_simple -> simple_type vars_simple_type SEMICOLON dec_vars_aux .

    FUNCT           reduce using rule 13 (dec_vars_simple -> simple_type vars_simple_type SEMICOLON dec_vars_aux .)
    INIT            reduce using rule 13 (dec_vars_simple -> simple_type vars_simple_type SEMICOLON dec_vars_aux .)
    CALL            reduce using rule 13 (dec_vars_simple -> simple_type vars_simple_type SEMICOLON dec_vars_aux .)
    ID              reduce using rule 13 (dec_vars_simple -> simple_type vars_simple_type SEMICOLON dec_vars_aux .)
    READ            reduce using rule 13 (dec_vars_simple -> simple_type vars_simple_type SEMICOLON dec_vars_aux .)
    WRITE           reduce using rule 13 (dec_vars_simple -> simple_type vars_simple_type SEMICOLON dec_vars_aux .)
    IF              reduce using rule 13 (dec_vars_simple -> simple_type vars_simple_type SEMICOLON dec_vars_aux .)
    WHILE           reduce using rule 13 (dec_vars_simple -> simple_type vars_simple_type SEMICOLON dec_vars_aux .)
    FROM            reduce using rule 13 (dec_vars_simple -> simple_type vars_simple_type SEMICOLON dec_vars_aux .)


state 88

    (18) vars_simple_type -> ID add_variable COMMA . vars_simple_type
    (17) vars_simple_type -> . ID add_variable
    (18) vars_simple_type -> . ID add_variable COMMA vars_simple_type
    (19) vars_simple_type -> . ID vars_simple_type_aux
    (20) vars_simple_type -> . ID vars_simple_type_aux COMMA vars_simple_type

    ID              shift and go to state 50

    vars_simple_type               shift and go to state 114

state 89

    (20) vars_simple_type -> ID vars_simple_type_aux COMMA . vars_simple_type
    (17) vars_simple_type -> . ID add_variable
    (18) vars_simple_type -> . ID add_variable COMMA vars_simple_type
    (19) vars_simple_type -> . ID vars_simple_type_aux
    (20) vars_simple_type -> . ID vars_simple_type_aux COMMA vars_simple_type

    ID              shift and go to state 50

    vars_simple_type               shift and go to state 115

state 90

    (21) vars_simple_type_aux -> LBRACKET CTEI . RBRACKET add_array_variable
    (22) vars_simple_type_aux -> LBRACKET CTEI . RBRACKET LBRACKET CTEI RBRACKET add_matrix_variable

    RBRACKET        shift and go to state 116


state 91

    (24) dec_vars_complex -> OBJECT vars_complex_type SEMICOLON dec_vars_aux .

    FUNCT           reduce using rule 24 (dec_vars_complex -> OBJECT vars_complex_type SEMICOLON dec_vars_aux .)
    INIT            reduce using rule 24 (dec_vars_complex -> OBJECT vars_complex_type SEMICOLON dec_vars_aux .)
    CALL            reduce using rule 24 (dec_vars_complex -> OBJECT vars_complex_type SEMICOLON dec_vars_aux .)
    ID              reduce using rule 24 (dec_vars_complex -> OBJECT vars_complex_type SEMICOLON dec_vars_aux .)
    READ            reduce using rule 24 (dec_vars_complex -> OBJECT vars_complex_type SEMICOLON dec_vars_aux .)
    WRITE           reduce using rule 24 (dec_vars_complex -> OBJECT vars_complex_type SEMICOLON dec_vars_aux .)
    IF              reduce using rule 24 (dec_vars_complex -> OBJECT vars_complex_type SEMICOLON dec_vars_aux .)
    WHILE           reduce using rule 24 (dec_vars_complex -> OBJECT vars_complex_type SEMICOLON dec_vars_aux .)
    FROM            reduce using rule 24 (dec_vars_complex -> OBJECT vars_complex_type SEMICOLON dec_vars_aux .)


state 92

    (26) vars_complex_type -> ID add_variable COMMA . vars_complex_type
    (25) vars_complex_type -> . ID add_variable
    (26) vars_complex_type -> . ID add_variable COMMA vars_complex_type

    ID              shift and go to state 52

    vars_complex_type              shift and go to state 117

state 93

    (35) functions_aux -> VOID ID add_function LPAREN . params RPAREN body
    (36) functions_aux -> VOID ID add_function LPAREN . RPAREN body
    (39) params -> . simple_type ID add_variable
    (40) params -> . simple_type ID add_variable COMMA params
    (41) params -> . simple_type ID params_aux
    (42) params -> . simple_type ID params_aux COMMA params
    (14) simple_type -> . INT
    (15) simple_type -> . FLOAT
    (16) simple_type -> . CHAR

    RPAREN          shift and go to state 119
    INT             shift and go to state 38
    FLOAT           shift and go to state 39
    CHAR            shift and go to state 40

    params                         shift and go to state 118
    simple_type                    shift and go to state 120

state 94

    (37) functions_aux -> simple_type ID add_function LPAREN . RPAREN body
    (38) functions_aux -> simple_type ID add_function LPAREN . params RPAREN body
    (39) params -> . simple_type ID add_variable
    (40) params -> . simple_type ID add_variable COMMA params
    (41) params -> . simple_type ID params_aux
    (42) params -> . simple_type ID params_aux COMMA params
    (14) simple_type -> . INT
    (15) simple_type -> . FLOAT
    (16) simple_type -> . CHAR

    RPAREN          shift and go to state 121
    INT             shift and go to state 38
    FLOAT           shift and go to state 39
    CHAR            shift and go to state 40

    simple_type                    shift and go to state 120
    params                         shift and go to state 122

state 95

    (31) classes_aux -> INHERITS OBJECT add_inherit_class LBRACE dec_vars functions RBRACE .

    CLASS           reduce using rule 31 (classes_aux -> INHERITS OBJECT add_inherit_class LBRACE dec_vars functions RBRACE .)
    MAIN            reduce using rule 31 (classes_aux -> INHERITS OBJECT add_inherit_class LBRACE dec_vars functions RBRACE .)


state 96

    (107) init -> INIT add_init LBRACE statutes_aux RBRACE .

    RBRACE          reduce using rule 107 (init -> INIT add_init LBRACE statutes_aux RBRACE .)


state 97

    (108) init -> INIT add_init LBRACE dec_vars statutes_aux . RBRACE

    RBRACE          shift and go to state 123


state 98

    (57) statutes_aux -> statutes statutes_aux .

    RBRACE          reduce using rule 57 (statutes_aux -> statutes statutes_aux .)
    RETURN          reduce using rule 57 (statutes_aux -> statutes statutes_aux .)


state 99

    (49) statutes -> assignation SEMICOLON .

    CALL            reduce using rule 49 (statutes -> assignation SEMICOLON .)
    ID              reduce using rule 49 (statutes -> assignation SEMICOLON .)
    READ            reduce using rule 49 (statutes -> assignation SEMICOLON .)
    WRITE           reduce using rule 49 (statutes -> assignation SEMICOLON .)
    IF              reduce using rule 49 (statutes -> assignation SEMICOLON .)
    WHILE           reduce using rule 49 (statutes -> assignation SEMICOLON .)
    FROM            reduce using rule 49 (statutes -> assignation SEMICOLON .)
    RBRACE          reduce using rule 49 (statutes -> assignation SEMICOLON .)
    RETURN          reduce using rule 49 (statutes -> assignation SEMICOLON .)


state 100

    (50) statutes -> CALL call . SEMICOLON

    SEMICOLON       shift and go to state 124


state 101

    (65) call -> ID . LPAREN RPAREN
    (66) call -> ID . POINT ID LPAREN RPAREN
    (67) call -> ID . LPAREN call_aux RPAREN
    (68) call -> ID . POINT ID LPAREN call_aux RPAREN

    LPAREN          shift and go to state 125
    POINT           shift and go to state 126


state 102

    (58) assignation -> ID EQUAL . exp
    (85) exp -> . l_exp pop_op_lop
    (86) exp -> . l_exp pop_op_lop OR push_op exp
    (87) exp -> . l_exp pop_op_lop AND push_op exp
    (88) l_exp -> . a_exp
    (89) l_exp -> . a_exp RELOP push_op a_exp pop_op_relop
    (90) a_exp -> . term pop_op_art_n2
    (91) a_exp -> . term pop_op_art_n2 PLUS push_op a_exp
    (92) a_exp -> . term pop_op_art_n2 MINUS push_op a_exp
    (93) term -> . factor pop_op_art_n1
    (94) term -> . factor pop_op_art_n1 TIMES push_op term
    (95) term -> . factor pop_op_art_n1 DIVIDE push_op term
    (96) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (97) factor -> . call
    (98) factor -> . factor_aux
    (65) call -> . ID LPAREN RPAREN
    (66) call -> . ID POINT ID LPAREN RPAREN
    (67) call -> . ID LPAREN call_aux RPAREN
    (68) call -> . ID POINT ID LPAREN call_aux RPAREN
    (99) factor_aux -> . cte
    (100) factor_aux -> . PLUS cte
    (101) factor_aux -> . MINUS cte
    (102) cte -> . ID push_var
    (103) cte -> . ID var_aux push_var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 135
    ID              shift and go to state 127
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    CTEI            shift and go to state 139
    CTEF            shift and go to state 140
    CTECHAR         shift and go to state 141

    exp                            shift and go to state 128
    l_exp                          shift and go to state 129
    a_exp                          shift and go to state 130
    term                           shift and go to state 131
    factor                         shift and go to state 134
    call                           shift and go to state 136
    factor_aux                     shift and go to state 137
    cte                            shift and go to state 138

state 103

    (59) assignation -> ID var_aux . EQUAL exp

    EQUAL           shift and go to state 142


state 104

    (60) var_aux -> POINT . ID
    (61) var_aux -> POINT . ID var_aux_2

    ID              shift and go to state 143


state 105

    (62) var_aux -> var_aux_2 .

    EQUAL           reduce using rule 62 (var_aux -> var_aux_2 .)
    TIMES           reduce using rule 62 (var_aux -> var_aux_2 .)
    DIVIDE          reduce using rule 62 (var_aux -> var_aux_2 .)
    PLUS            reduce using rule 62 (var_aux -> var_aux_2 .)
    MINUS           reduce using rule 62 (var_aux -> var_aux_2 .)
    RELOP           reduce using rule 62 (var_aux -> var_aux_2 .)
    OR              reduce using rule 62 (var_aux -> var_aux_2 .)
    AND             reduce using rule 62 (var_aux -> var_aux_2 .)
    SEMICOLON       reduce using rule 62 (var_aux -> var_aux_2 .)
    RPAREN          reduce using rule 62 (var_aux -> var_aux_2 .)
    RBRACKET        reduce using rule 62 (var_aux -> var_aux_2 .)
    COMMA           reduce using rule 62 (var_aux -> var_aux_2 .)


state 106

    (63) var_aux_2 -> LBRACKET . exp RBRACKET
    (64) var_aux_2 -> LBRACKET . exp RBRACKET LBRACKET exp RBRACKET
    (85) exp -> . l_exp pop_op_lop
    (86) exp -> . l_exp pop_op_lop OR push_op exp
    (87) exp -> . l_exp pop_op_lop AND push_op exp
    (88) l_exp -> . a_exp
    (89) l_exp -> . a_exp RELOP push_op a_exp pop_op_relop
    (90) a_exp -> . term pop_op_art_n2
    (91) a_exp -> . term pop_op_art_n2 PLUS push_op a_exp
    (92) a_exp -> . term pop_op_art_n2 MINUS push_op a_exp
    (93) term -> . factor pop_op_art_n1
    (94) term -> . factor pop_op_art_n1 TIMES push_op term
    (95) term -> . factor pop_op_art_n1 DIVIDE push_op term
    (96) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (97) factor -> . call
    (98) factor -> . factor_aux
    (65) call -> . ID LPAREN RPAREN
    (66) call -> . ID POINT ID LPAREN RPAREN
    (67) call -> . ID LPAREN call_aux RPAREN
    (68) call -> . ID POINT ID LPAREN call_aux RPAREN
    (99) factor_aux -> . cte
    (100) factor_aux -> . PLUS cte
    (101) factor_aux -> . MINUS cte
    (102) cte -> . ID push_var
    (103) cte -> . ID var_aux push_var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 135
    ID              shift and go to state 127
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    CTEI            shift and go to state 139
    CTEF            shift and go to state 140
    CTECHAR         shift and go to state 141

    exp                            shift and go to state 144
    l_exp                          shift and go to state 129
    a_exp                          shift and go to state 130
    term                           shift and go to state 131
    factor                         shift and go to state 134
    call                           shift and go to state 136
    factor_aux                     shift and go to state 137
    cte                            shift and go to state 138

state 107

    (77) read -> READ LPAREN . ID RPAREN SEMICOLON

    ID              shift and go to state 145


state 108

    (78) write -> WRITE LPAREN . write_aux RPAREN SEMICOLON
    (79) write_aux -> . exp
    (80) write_aux -> . exp COMMA write_aux
    (81) write_aux -> . CTESTRING
    (82) write_aux -> . CTESTRING COMMA write_aux
    (85) exp -> . l_exp pop_op_lop
    (86) exp -> . l_exp pop_op_lop OR push_op exp
    (87) exp -> . l_exp pop_op_lop AND push_op exp
    (88) l_exp -> . a_exp
    (89) l_exp -> . a_exp RELOP push_op a_exp pop_op_relop
    (90) a_exp -> . term pop_op_art_n2
    (91) a_exp -> . term pop_op_art_n2 PLUS push_op a_exp
    (92) a_exp -> . term pop_op_art_n2 MINUS push_op a_exp
    (93) term -> . factor pop_op_art_n1
    (94) term -> . factor pop_op_art_n1 TIMES push_op term
    (95) term -> . factor pop_op_art_n1 DIVIDE push_op term
    (96) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (97) factor -> . call
    (98) factor -> . factor_aux
    (65) call -> . ID LPAREN RPAREN
    (66) call -> . ID POINT ID LPAREN RPAREN
    (67) call -> . ID LPAREN call_aux RPAREN
    (68) call -> . ID POINT ID LPAREN call_aux RPAREN
    (99) factor_aux -> . cte
    (100) factor_aux -> . PLUS cte
    (101) factor_aux -> . MINUS cte
    (102) cte -> . ID push_var
    (103) cte -> . ID var_aux push_var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var

    CTESTRING       shift and go to state 148
    LPAREN          shift and go to state 135
    ID              shift and go to state 127
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    CTEI            shift and go to state 139
    CTEF            shift and go to state 140
    CTECHAR         shift and go to state 141

    write_aux                      shift and go to state 146
    exp                            shift and go to state 147
    l_exp                          shift and go to state 129
    a_exp                          shift and go to state 130
    term                           shift and go to state 131
    factor                         shift and go to state 134
    call                           shift and go to state 136
    factor_aux                     shift and go to state 137
    cte                            shift and go to state 138

state 109

    (71) condition -> IF condition_aux .

    CALL            reduce using rule 71 (condition -> IF condition_aux .)
    ID              reduce using rule 71 (condition -> IF condition_aux .)
    READ            reduce using rule 71 (condition -> IF condition_aux .)
    WRITE           reduce using rule 71 (condition -> IF condition_aux .)
    IF              reduce using rule 71 (condition -> IF condition_aux .)
    WHILE           reduce using rule 71 (condition -> IF condition_aux .)
    FROM            reduce using rule 71 (condition -> IF condition_aux .)
    RBRACE          reduce using rule 71 (condition -> IF condition_aux .)
    RETURN          reduce using rule 71 (condition -> IF condition_aux .)


state 110

    (72) condition_aux -> LPAREN . exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3
    (74) condition_aux_2 -> LPAREN . exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux
    (85) exp -> . l_exp pop_op_lop
    (86) exp -> . l_exp pop_op_lop OR push_op exp
    (87) exp -> . l_exp pop_op_lop AND push_op exp
    (88) l_exp -> . a_exp
    (89) l_exp -> . a_exp RELOP push_op a_exp pop_op_relop
    (90) a_exp -> . term pop_op_art_n2
    (91) a_exp -> . term pop_op_art_n2 PLUS push_op a_exp
    (92) a_exp -> . term pop_op_art_n2 MINUS push_op a_exp
    (93) term -> . factor pop_op_art_n1
    (94) term -> . factor pop_op_art_n1 TIMES push_op term
    (95) term -> . factor pop_op_art_n1 DIVIDE push_op term
    (96) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (97) factor -> . call
    (98) factor -> . factor_aux
    (65) call -> . ID LPAREN RPAREN
    (66) call -> . ID POINT ID LPAREN RPAREN
    (67) call -> . ID LPAREN call_aux RPAREN
    (68) call -> . ID POINT ID LPAREN call_aux RPAREN
    (99) factor_aux -> . cte
    (100) factor_aux -> . PLUS cte
    (101) factor_aux -> . MINUS cte
    (102) cte -> . ID push_var
    (103) cte -> . ID var_aux push_var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 135
    ID              shift and go to state 127
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    CTEI            shift and go to state 139
    CTEF            shift and go to state 140
    CTECHAR         shift and go to state 141

    exp                            shift and go to state 149
    l_exp                          shift and go to state 129
    a_exp                          shift and go to state 130
    term                           shift and go to state 131
    factor                         shift and go to state 134
    call                           shift and go to state 136
    factor_aux                     shift and go to state 137
    cte                            shift and go to state 138

state 111

    (73) condition_aux -> condition_aux_2 .

    CALL            reduce using rule 73 (condition_aux -> condition_aux_2 .)
    ID              reduce using rule 73 (condition_aux -> condition_aux_2 .)
    READ            reduce using rule 73 (condition_aux -> condition_aux_2 .)
    WRITE           reduce using rule 73 (condition_aux -> condition_aux_2 .)
    IF              reduce using rule 73 (condition_aux -> condition_aux_2 .)
    WHILE           reduce using rule 73 (condition_aux -> condition_aux_2 .)
    FROM            reduce using rule 73 (condition_aux -> condition_aux_2 .)
    RBRACE          reduce using rule 73 (condition_aux -> condition_aux_2 .)
    RETURN          reduce using rule 73 (condition_aux -> condition_aux_2 .)


state 112

    (83) while -> WHILE LPAREN . exp RPAREN DO LBRACE statutes_aux RBRACE
    (85) exp -> . l_exp pop_op_lop
    (86) exp -> . l_exp pop_op_lop OR push_op exp
    (87) exp -> . l_exp pop_op_lop AND push_op exp
    (88) l_exp -> . a_exp
    (89) l_exp -> . a_exp RELOP push_op a_exp pop_op_relop
    (90) a_exp -> . term pop_op_art_n2
    (91) a_exp -> . term pop_op_art_n2 PLUS push_op a_exp
    (92) a_exp -> . term pop_op_art_n2 MINUS push_op a_exp
    (93) term -> . factor pop_op_art_n1
    (94) term -> . factor pop_op_art_n1 TIMES push_op term
    (95) term -> . factor pop_op_art_n1 DIVIDE push_op term
    (96) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (97) factor -> . call
    (98) factor -> . factor_aux
    (65) call -> . ID LPAREN RPAREN
    (66) call -> . ID POINT ID LPAREN RPAREN
    (67) call -> . ID LPAREN call_aux RPAREN
    (68) call -> . ID POINT ID LPAREN call_aux RPAREN
    (99) factor_aux -> . cte
    (100) factor_aux -> . PLUS cte
    (101) factor_aux -> . MINUS cte
    (102) cte -> . ID push_var
    (103) cte -> . ID var_aux push_var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 135
    ID              shift and go to state 127
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    CTEI            shift and go to state 139
    CTEF            shift and go to state 140
    CTECHAR         shift and go to state 141

    exp                            shift and go to state 150
    l_exp                          shift and go to state 129
    a_exp                          shift and go to state 130
    term                           shift and go to state 131
    factor                         shift and go to state 134
    call                           shift and go to state 136
    factor_aux                     shift and go to state 137
    cte                            shift and go to state 138

state 113

    (84) for -> FROM LPAREN . assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (58) assignation -> . ID EQUAL exp
    (59) assignation -> . ID var_aux EQUAL exp

    ID              shift and go to state 81

    assignation                    shift and go to state 151

state 114

    (18) vars_simple_type -> ID add_variable COMMA vars_simple_type .

    SEMICOLON       reduce using rule 18 (vars_simple_type -> ID add_variable COMMA vars_simple_type .)


state 115

    (20) vars_simple_type -> ID vars_simple_type_aux COMMA vars_simple_type .

    SEMICOLON       reduce using rule 20 (vars_simple_type -> ID vars_simple_type_aux COMMA vars_simple_type .)


state 116

    (21) vars_simple_type_aux -> LBRACKET CTEI RBRACKET . add_array_variable
    (22) vars_simple_type_aux -> LBRACKET CTEI RBRACKET . LBRACKET CTEI RBRACKET add_matrix_variable
    (111) add_array_variable -> .

    LBRACKET        shift and go to state 152
    COMMA           reduce using rule 111 (add_array_variable -> .)
    SEMICOLON       reduce using rule 111 (add_array_variable -> .)

    add_array_variable             shift and go to state 153

state 117

    (26) vars_complex_type -> ID add_variable COMMA vars_complex_type .

    SEMICOLON       reduce using rule 26 (vars_complex_type -> ID add_variable COMMA vars_complex_type .)


state 118

    (35) functions_aux -> VOID ID add_function LPAREN params . RPAREN body

    RPAREN          shift and go to state 154


state 119

    (36) functions_aux -> VOID ID add_function LPAREN RPAREN . body
    (45) body -> . LBRACE dec_vars statutes_aux RBRACE
    (46) body -> . LBRACE statutes_aux RBRACE
    (47) body -> . LBRACE statutes_aux RETURN ID SEMICOLON RBRACE
    (48) body -> . LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE

    LBRACE          shift and go to state 156

    body                           shift and go to state 155

state 120

    (39) params -> simple_type . ID add_variable
    (40) params -> simple_type . ID add_variable COMMA params
    (41) params -> simple_type . ID params_aux
    (42) params -> simple_type . ID params_aux COMMA params

    ID              shift and go to state 157


state 121

    (37) functions_aux -> simple_type ID add_function LPAREN RPAREN . body
    (45) body -> . LBRACE dec_vars statutes_aux RBRACE
    (46) body -> . LBRACE statutes_aux RBRACE
    (47) body -> . LBRACE statutes_aux RETURN ID SEMICOLON RBRACE
    (48) body -> . LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE

    LBRACE          shift and go to state 156

    body                           shift and go to state 158

state 122

    (38) functions_aux -> simple_type ID add_function LPAREN params . RPAREN body

    RPAREN          shift and go to state 159


state 123

    (108) init -> INIT add_init LBRACE dec_vars statutes_aux RBRACE .

    RBRACE          reduce using rule 108 (init -> INIT add_init LBRACE dec_vars statutes_aux RBRACE .)


state 124

    (50) statutes -> CALL call SEMICOLON .

    CALL            reduce using rule 50 (statutes -> CALL call SEMICOLON .)
    ID              reduce using rule 50 (statutes -> CALL call SEMICOLON .)
    READ            reduce using rule 50 (statutes -> CALL call SEMICOLON .)
    WRITE           reduce using rule 50 (statutes -> CALL call SEMICOLON .)
    IF              reduce using rule 50 (statutes -> CALL call SEMICOLON .)
    WHILE           reduce using rule 50 (statutes -> CALL call SEMICOLON .)
    FROM            reduce using rule 50 (statutes -> CALL call SEMICOLON .)
    RBRACE          reduce using rule 50 (statutes -> CALL call SEMICOLON .)
    RETURN          reduce using rule 50 (statutes -> CALL call SEMICOLON .)


state 125

    (65) call -> ID LPAREN . RPAREN
    (67) call -> ID LPAREN . call_aux RPAREN
    (69) call_aux -> . exp
    (70) call_aux -> . exp COMMA call_aux
    (85) exp -> . l_exp pop_op_lop
    (86) exp -> . l_exp pop_op_lop OR push_op exp
    (87) exp -> . l_exp pop_op_lop AND push_op exp
    (88) l_exp -> . a_exp
    (89) l_exp -> . a_exp RELOP push_op a_exp pop_op_relop
    (90) a_exp -> . term pop_op_art_n2
    (91) a_exp -> . term pop_op_art_n2 PLUS push_op a_exp
    (92) a_exp -> . term pop_op_art_n2 MINUS push_op a_exp
    (93) term -> . factor pop_op_art_n1
    (94) term -> . factor pop_op_art_n1 TIMES push_op term
    (95) term -> . factor pop_op_art_n1 DIVIDE push_op term
    (96) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (97) factor -> . call
    (98) factor -> . factor_aux
    (65) call -> . ID LPAREN RPAREN
    (66) call -> . ID POINT ID LPAREN RPAREN
    (67) call -> . ID LPAREN call_aux RPAREN
    (68) call -> . ID POINT ID LPAREN call_aux RPAREN
    (99) factor_aux -> . cte
    (100) factor_aux -> . PLUS cte
    (101) factor_aux -> . MINUS cte
    (102) cte -> . ID push_var
    (103) cte -> . ID var_aux push_var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var

    RPAREN          shift and go to state 160
    LPAREN          shift and go to state 135
    ID              shift and go to state 127
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    CTEI            shift and go to state 139
    CTEF            shift and go to state 140
    CTECHAR         shift and go to state 141

    call_aux                       shift and go to state 161
    exp                            shift and go to state 162
    l_exp                          shift and go to state 129
    a_exp                          shift and go to state 130
    term                           shift and go to state 131
    factor                         shift and go to state 134
    call                           shift and go to state 136
    factor_aux                     shift and go to state 137
    cte                            shift and go to state 138

state 126

    (66) call -> ID POINT . ID LPAREN RPAREN
    (68) call -> ID POINT . ID LPAREN call_aux RPAREN

    ID              shift and go to state 163


state 127

    (65) call -> ID . LPAREN RPAREN
    (66) call -> ID . POINT ID LPAREN RPAREN
    (67) call -> ID . LPAREN call_aux RPAREN
    (68) call -> ID . POINT ID LPAREN call_aux RPAREN
    (102) cte -> ID . push_var
    (103) cte -> ID . var_aux push_var
    (119) push_var -> .
    (60) var_aux -> . POINT ID
    (61) var_aux -> . POINT ID var_aux_2
    (62) var_aux -> . var_aux_2
    (63) var_aux_2 -> . LBRACKET exp RBRACKET
    (64) var_aux_2 -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET

    LPAREN          shift and go to state 125
    POINT           shift and go to state 164
    TIMES           reduce using rule 119 (push_var -> .)
    DIVIDE          reduce using rule 119 (push_var -> .)
    PLUS            reduce using rule 119 (push_var -> .)
    MINUS           reduce using rule 119 (push_var -> .)
    RELOP           reduce using rule 119 (push_var -> .)
    OR              reduce using rule 119 (push_var -> .)
    AND             reduce using rule 119 (push_var -> .)
    SEMICOLON       reduce using rule 119 (push_var -> .)
    RPAREN          reduce using rule 119 (push_var -> .)
    RBRACKET        reduce using rule 119 (push_var -> .)
    COMMA           reduce using rule 119 (push_var -> .)
    LBRACKET        shift and go to state 106

    push_var                       shift and go to state 165
    var_aux                        shift and go to state 166
    var_aux_2                      shift and go to state 105

state 128

    (58) assignation -> ID EQUAL exp .

    SEMICOLON       reduce using rule 58 (assignation -> ID EQUAL exp .)
    RPAREN          reduce using rule 58 (assignation -> ID EQUAL exp .)


state 129

    (85) exp -> l_exp . pop_op_lop
    (86) exp -> l_exp . pop_op_lop OR push_op exp
    (87) exp -> l_exp . pop_op_lop AND push_op exp
    (124) pop_op_lop -> .

    OR              reduce using rule 124 (pop_op_lop -> .)
    AND             reduce using rule 124 (pop_op_lop -> .)
    SEMICOLON       reduce using rule 124 (pop_op_lop -> .)
    RPAREN          reduce using rule 124 (pop_op_lop -> .)
    RBRACKET        reduce using rule 124 (pop_op_lop -> .)
    COMMA           reduce using rule 124 (pop_op_lop -> .)

    pop_op_lop                     shift and go to state 167

state 130

    (88) l_exp -> a_exp .
    (89) l_exp -> a_exp . RELOP push_op a_exp pop_op_relop

    OR              reduce using rule 88 (l_exp -> a_exp .)
    AND             reduce using rule 88 (l_exp -> a_exp .)
    SEMICOLON       reduce using rule 88 (l_exp -> a_exp .)
    RPAREN          reduce using rule 88 (l_exp -> a_exp .)
    RBRACKET        reduce using rule 88 (l_exp -> a_exp .)
    COMMA           reduce using rule 88 (l_exp -> a_exp .)
    RELOP           shift and go to state 168


state 131

    (90) a_exp -> term . pop_op_art_n2
    (91) a_exp -> term . pop_op_art_n2 PLUS push_op a_exp
    (92) a_exp -> term . pop_op_art_n2 MINUS push_op a_exp
    (122) pop_op_art_n2 -> .

    PLUS            reduce using rule 122 (pop_op_art_n2 -> .)
    MINUS           reduce using rule 122 (pop_op_art_n2 -> .)
    RELOP           reduce using rule 122 (pop_op_art_n2 -> .)
    OR              reduce using rule 122 (pop_op_art_n2 -> .)
    AND             reduce using rule 122 (pop_op_art_n2 -> .)
    SEMICOLON       reduce using rule 122 (pop_op_art_n2 -> .)
    RPAREN          reduce using rule 122 (pop_op_art_n2 -> .)
    RBRACKET        reduce using rule 122 (pop_op_art_n2 -> .)
    COMMA           reduce using rule 122 (pop_op_art_n2 -> .)

    pop_op_art_n2                  shift and go to state 169

state 132

    (100) factor_aux -> PLUS . cte
    (102) cte -> . ID push_var
    (103) cte -> . ID var_aux push_var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var

    ID              shift and go to state 171
    CTEI            shift and go to state 139
    CTEF            shift and go to state 140
    CTECHAR         shift and go to state 141

    cte                            shift and go to state 170

state 133

    (101) factor_aux -> MINUS . cte
    (102) cte -> . ID push_var
    (103) cte -> . ID var_aux push_var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var

    ID              shift and go to state 171
    CTEI            shift and go to state 139
    CTEF            shift and go to state 140
    CTECHAR         shift and go to state 141

    cte                            shift and go to state 172

state 134

    (93) term -> factor . pop_op_art_n1
    (94) term -> factor . pop_op_art_n1 TIMES push_op term
    (95) term -> factor . pop_op_art_n1 DIVIDE push_op term
    (121) pop_op_art_n1 -> .

    TIMES           reduce using rule 121 (pop_op_art_n1 -> .)
    DIVIDE          reduce using rule 121 (pop_op_art_n1 -> .)
    PLUS            reduce using rule 121 (pop_op_art_n1 -> .)
    MINUS           reduce using rule 121 (pop_op_art_n1 -> .)
    RELOP           reduce using rule 121 (pop_op_art_n1 -> .)
    OR              reduce using rule 121 (pop_op_art_n1 -> .)
    AND             reduce using rule 121 (pop_op_art_n1 -> .)
    SEMICOLON       reduce using rule 121 (pop_op_art_n1 -> .)
    RPAREN          reduce using rule 121 (pop_op_art_n1 -> .)
    RBRACKET        reduce using rule 121 (pop_op_art_n1 -> .)
    COMMA           reduce using rule 121 (pop_op_art_n1 -> .)

    pop_op_art_n1                  shift and go to state 173

state 135

    (96) factor -> LPAREN . push_paren exp RPAREN pop_paren
    (125) push_paren -> .

    LPAREN          reduce using rule 125 (push_paren -> .)
    ID              reduce using rule 125 (push_paren -> .)
    PLUS            reduce using rule 125 (push_paren -> .)
    MINUS           reduce using rule 125 (push_paren -> .)
    CTEI            reduce using rule 125 (push_paren -> .)
    CTEF            reduce using rule 125 (push_paren -> .)
    CTECHAR         reduce using rule 125 (push_paren -> .)

    push_paren                     shift and go to state 174

state 136

    (97) factor -> call .

    TIMES           reduce using rule 97 (factor -> call .)
    DIVIDE          reduce using rule 97 (factor -> call .)
    PLUS            reduce using rule 97 (factor -> call .)
    MINUS           reduce using rule 97 (factor -> call .)
    RELOP           reduce using rule 97 (factor -> call .)
    OR              reduce using rule 97 (factor -> call .)
    AND             reduce using rule 97 (factor -> call .)
    SEMICOLON       reduce using rule 97 (factor -> call .)
    RPAREN          reduce using rule 97 (factor -> call .)
    RBRACKET        reduce using rule 97 (factor -> call .)
    COMMA           reduce using rule 97 (factor -> call .)


state 137

    (98) factor -> factor_aux .

    TIMES           reduce using rule 98 (factor -> factor_aux .)
    DIVIDE          reduce using rule 98 (factor -> factor_aux .)
    PLUS            reduce using rule 98 (factor -> factor_aux .)
    MINUS           reduce using rule 98 (factor -> factor_aux .)
    RELOP           reduce using rule 98 (factor -> factor_aux .)
    OR              reduce using rule 98 (factor -> factor_aux .)
    AND             reduce using rule 98 (factor -> factor_aux .)
    SEMICOLON       reduce using rule 98 (factor -> factor_aux .)
    RPAREN          reduce using rule 98 (factor -> factor_aux .)
    RBRACKET        reduce using rule 98 (factor -> factor_aux .)
    COMMA           reduce using rule 98 (factor -> factor_aux .)


state 138

    (99) factor_aux -> cte .

    TIMES           reduce using rule 99 (factor_aux -> cte .)
    DIVIDE          reduce using rule 99 (factor_aux -> cte .)
    PLUS            reduce using rule 99 (factor_aux -> cte .)
    MINUS           reduce using rule 99 (factor_aux -> cte .)
    RELOP           reduce using rule 99 (factor_aux -> cte .)
    OR              reduce using rule 99 (factor_aux -> cte .)
    AND             reduce using rule 99 (factor_aux -> cte .)
    SEMICOLON       reduce using rule 99 (factor_aux -> cte .)
    RPAREN          reduce using rule 99 (factor_aux -> cte .)
    RBRACKET        reduce using rule 99 (factor_aux -> cte .)
    COMMA           reduce using rule 99 (factor_aux -> cte .)


state 139

    (104) cte -> CTEI . push_var
    (119) push_var -> .

    TIMES           reduce using rule 119 (push_var -> .)
    DIVIDE          reduce using rule 119 (push_var -> .)
    PLUS            reduce using rule 119 (push_var -> .)
    MINUS           reduce using rule 119 (push_var -> .)
    RELOP           reduce using rule 119 (push_var -> .)
    OR              reduce using rule 119 (push_var -> .)
    AND             reduce using rule 119 (push_var -> .)
    SEMICOLON       reduce using rule 119 (push_var -> .)
    RPAREN          reduce using rule 119 (push_var -> .)
    RBRACKET        reduce using rule 119 (push_var -> .)
    COMMA           reduce using rule 119 (push_var -> .)

    push_var                       shift and go to state 175

state 140

    (105) cte -> CTEF . push_var
    (119) push_var -> .

    TIMES           reduce using rule 119 (push_var -> .)
    DIVIDE          reduce using rule 119 (push_var -> .)
    PLUS            reduce using rule 119 (push_var -> .)
    MINUS           reduce using rule 119 (push_var -> .)
    RELOP           reduce using rule 119 (push_var -> .)
    OR              reduce using rule 119 (push_var -> .)
    AND             reduce using rule 119 (push_var -> .)
    SEMICOLON       reduce using rule 119 (push_var -> .)
    RPAREN          reduce using rule 119 (push_var -> .)
    RBRACKET        reduce using rule 119 (push_var -> .)
    COMMA           reduce using rule 119 (push_var -> .)

    push_var                       shift and go to state 176

state 141

    (106) cte -> CTECHAR . push_var
    (119) push_var -> .

    TIMES           reduce using rule 119 (push_var -> .)
    DIVIDE          reduce using rule 119 (push_var -> .)
    PLUS            reduce using rule 119 (push_var -> .)
    MINUS           reduce using rule 119 (push_var -> .)
    RELOP           reduce using rule 119 (push_var -> .)
    OR              reduce using rule 119 (push_var -> .)
    AND             reduce using rule 119 (push_var -> .)
    SEMICOLON       reduce using rule 119 (push_var -> .)
    RPAREN          reduce using rule 119 (push_var -> .)
    RBRACKET        reduce using rule 119 (push_var -> .)
    COMMA           reduce using rule 119 (push_var -> .)

    push_var                       shift and go to state 177

state 142

    (59) assignation -> ID var_aux EQUAL . exp
    (85) exp -> . l_exp pop_op_lop
    (86) exp -> . l_exp pop_op_lop OR push_op exp
    (87) exp -> . l_exp pop_op_lop AND push_op exp
    (88) l_exp -> . a_exp
    (89) l_exp -> . a_exp RELOP push_op a_exp pop_op_relop
    (90) a_exp -> . term pop_op_art_n2
    (91) a_exp -> . term pop_op_art_n2 PLUS push_op a_exp
    (92) a_exp -> . term pop_op_art_n2 MINUS push_op a_exp
    (93) term -> . factor pop_op_art_n1
    (94) term -> . factor pop_op_art_n1 TIMES push_op term
    (95) term -> . factor pop_op_art_n1 DIVIDE push_op term
    (96) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (97) factor -> . call
    (98) factor -> . factor_aux
    (65) call -> . ID LPAREN RPAREN
    (66) call -> . ID POINT ID LPAREN RPAREN
    (67) call -> . ID LPAREN call_aux RPAREN
    (68) call -> . ID POINT ID LPAREN call_aux RPAREN
    (99) factor_aux -> . cte
    (100) factor_aux -> . PLUS cte
    (101) factor_aux -> . MINUS cte
    (102) cte -> . ID push_var
    (103) cte -> . ID var_aux push_var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 135
    ID              shift and go to state 127
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    CTEI            shift and go to state 139
    CTEF            shift and go to state 140
    CTECHAR         shift and go to state 141

    exp                            shift and go to state 178
    l_exp                          shift and go to state 129
    a_exp                          shift and go to state 130
    term                           shift and go to state 131
    factor                         shift and go to state 134
    call                           shift and go to state 136
    factor_aux                     shift and go to state 137
    cte                            shift and go to state 138

state 143

    (60) var_aux -> POINT ID .
    (61) var_aux -> POINT ID . var_aux_2
    (63) var_aux_2 -> . LBRACKET exp RBRACKET
    (64) var_aux_2 -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET

    EQUAL           reduce using rule 60 (var_aux -> POINT ID .)
    TIMES           reduce using rule 60 (var_aux -> POINT ID .)
    DIVIDE          reduce using rule 60 (var_aux -> POINT ID .)
    PLUS            reduce using rule 60 (var_aux -> POINT ID .)
    MINUS           reduce using rule 60 (var_aux -> POINT ID .)
    RELOP           reduce using rule 60 (var_aux -> POINT ID .)
    OR              reduce using rule 60 (var_aux -> POINT ID .)
    AND             reduce using rule 60 (var_aux -> POINT ID .)
    SEMICOLON       reduce using rule 60 (var_aux -> POINT ID .)
    RPAREN          reduce using rule 60 (var_aux -> POINT ID .)
    RBRACKET        reduce using rule 60 (var_aux -> POINT ID .)
    COMMA           reduce using rule 60 (var_aux -> POINT ID .)
    LBRACKET        shift and go to state 106

    var_aux_2                      shift and go to state 179

state 144

    (63) var_aux_2 -> LBRACKET exp . RBRACKET
    (64) var_aux_2 -> LBRACKET exp . RBRACKET LBRACKET exp RBRACKET

    RBRACKET        shift and go to state 180


state 145

    (77) read -> READ LPAREN ID . RPAREN SEMICOLON

    RPAREN          shift and go to state 181


state 146

    (78) write -> WRITE LPAREN write_aux . RPAREN SEMICOLON

    RPAREN          shift and go to state 182


state 147

    (79) write_aux -> exp .
    (80) write_aux -> exp . COMMA write_aux

    RPAREN          reduce using rule 79 (write_aux -> exp .)
    COMMA           shift and go to state 183


state 148

    (81) write_aux -> CTESTRING .
    (82) write_aux -> CTESTRING . COMMA write_aux

    RPAREN          reduce using rule 81 (write_aux -> CTESTRING .)
    COMMA           shift and go to state 184


state 149

    (72) condition_aux -> LPAREN exp . RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3
    (74) condition_aux_2 -> LPAREN exp . RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux

    RPAREN          shift and go to state 185


state 150

    (83) while -> WHILE LPAREN exp . RPAREN DO LBRACE statutes_aux RBRACE

    RPAREN          shift and go to state 186


state 151

    (84) for -> FROM LPAREN assignation . RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    RPAREN          shift and go to state 187


state 152

    (22) vars_simple_type_aux -> LBRACKET CTEI RBRACKET LBRACKET . CTEI RBRACKET add_matrix_variable

    CTEI            shift and go to state 188


state 153

    (21) vars_simple_type_aux -> LBRACKET CTEI RBRACKET add_array_variable .

    COMMA           reduce using rule 21 (vars_simple_type_aux -> LBRACKET CTEI RBRACKET add_array_variable .)
    SEMICOLON       reduce using rule 21 (vars_simple_type_aux -> LBRACKET CTEI RBRACKET add_array_variable .)


state 154

    (35) functions_aux -> VOID ID add_function LPAREN params RPAREN . body
    (45) body -> . LBRACE dec_vars statutes_aux RBRACE
    (46) body -> . LBRACE statutes_aux RBRACE
    (47) body -> . LBRACE statutes_aux RETURN ID SEMICOLON RBRACE
    (48) body -> . LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE

    LBRACE          shift and go to state 156

    body                           shift and go to state 189

state 155

    (36) functions_aux -> VOID ID add_function LPAREN RPAREN body .

    FUNCT           reduce using rule 36 (functions_aux -> VOID ID add_function LPAREN RPAREN body .)
    RBRACE          reduce using rule 36 (functions_aux -> VOID ID add_function LPAREN RPAREN body .)
    INIT            reduce using rule 36 (functions_aux -> VOID ID add_function LPAREN RPAREN body .)


state 156

    (45) body -> LBRACE . dec_vars statutes_aux RBRACE
    (46) body -> LBRACE . statutes_aux RBRACE
    (47) body -> LBRACE . statutes_aux RETURN ID SEMICOLON RBRACE
    (48) body -> LBRACE . dec_vars statutes_aux RETURN ID SEMICOLON RBRACE
    (9) dec_vars -> . VAR dec_vars_aux
    (56) statutes_aux -> . statutes
    (57) statutes_aux -> . statutes statutes_aux
    (49) statutes -> . assignation SEMICOLON
    (50) statutes -> . CALL call SEMICOLON
    (51) statutes -> . read
    (52) statutes -> . write
    (53) statutes -> . condition
    (54) statutes -> . while
    (55) statutes -> . for
    (58) assignation -> . ID EQUAL exp
    (59) assignation -> . ID var_aux EQUAL exp
    (77) read -> . READ LPAREN ID RPAREN SEMICOLON
    (78) write -> . WRITE LPAREN write_aux RPAREN SEMICOLON
    (71) condition -> . IF condition_aux
    (83) while -> . WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (84) for -> . FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    VAR             shift and go to state 23
    CALL            shift and go to state 75
    ID              shift and go to state 81
    READ            shift and go to state 82
    WRITE           shift and go to state 83
    IF              shift and go to state 84
    WHILE           shift and go to state 85
    FROM            shift and go to state 86

    dec_vars                       shift and go to state 190
    statutes_aux                   shift and go to state 191
    statutes                       shift and go to state 73
    assignation                    shift and go to state 74
    read                           shift and go to state 76
    write                          shift and go to state 77
    condition                      shift and go to state 78
    while                          shift and go to state 79
    for                            shift and go to state 80

state 157

    (39) params -> simple_type ID . add_variable
    (40) params -> simple_type ID . add_variable COMMA params
    (41) params -> simple_type ID . params_aux
    (42) params -> simple_type ID . params_aux COMMA params
    (110) add_variable -> .
    (43) params_aux -> . LBRACKET RBRACKET add_array_var_params
    (44) params_aux -> . LBRACKET RBRACKET LBRACKET RBRACKET add_matrix_var_params

    COMMA           reduce using rule 110 (add_variable -> .)
    RPAREN          reduce using rule 110 (add_variable -> .)
    LBRACKET        shift and go to state 194

    add_variable                   shift and go to state 192
    params_aux                     shift and go to state 193

state 158

    (37) functions_aux -> simple_type ID add_function LPAREN RPAREN body .

    FUNCT           reduce using rule 37 (functions_aux -> simple_type ID add_function LPAREN RPAREN body .)
    RBRACE          reduce using rule 37 (functions_aux -> simple_type ID add_function LPAREN RPAREN body .)
    INIT            reduce using rule 37 (functions_aux -> simple_type ID add_function LPAREN RPAREN body .)


state 159

    (38) functions_aux -> simple_type ID add_function LPAREN params RPAREN . body
    (45) body -> . LBRACE dec_vars statutes_aux RBRACE
    (46) body -> . LBRACE statutes_aux RBRACE
    (47) body -> . LBRACE statutes_aux RETURN ID SEMICOLON RBRACE
    (48) body -> . LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE

    LBRACE          shift and go to state 156

    body                           shift and go to state 195

state 160

    (65) call -> ID LPAREN RPAREN .

    SEMICOLON       reduce using rule 65 (call -> ID LPAREN RPAREN .)
    TIMES           reduce using rule 65 (call -> ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 65 (call -> ID LPAREN RPAREN .)
    PLUS            reduce using rule 65 (call -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 65 (call -> ID LPAREN RPAREN .)
    RELOP           reduce using rule 65 (call -> ID LPAREN RPAREN .)
    OR              reduce using rule 65 (call -> ID LPAREN RPAREN .)
    AND             reduce using rule 65 (call -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 65 (call -> ID LPAREN RPAREN .)
    RBRACKET        reduce using rule 65 (call -> ID LPAREN RPAREN .)
    COMMA           reduce using rule 65 (call -> ID LPAREN RPAREN .)


state 161

    (67) call -> ID LPAREN call_aux . RPAREN

    RPAREN          shift and go to state 196


state 162

    (69) call_aux -> exp .
    (70) call_aux -> exp . COMMA call_aux

    RPAREN          reduce using rule 69 (call_aux -> exp .)
    COMMA           shift and go to state 197


state 163

    (66) call -> ID POINT ID . LPAREN RPAREN
    (68) call -> ID POINT ID . LPAREN call_aux RPAREN

    LPAREN          shift and go to state 198


state 164

    (66) call -> ID POINT . ID LPAREN RPAREN
    (68) call -> ID POINT . ID LPAREN call_aux RPAREN
    (60) var_aux -> POINT . ID
    (61) var_aux -> POINT . ID var_aux_2

    ID              shift and go to state 199


state 165

    (102) cte -> ID push_var .

    TIMES           reduce using rule 102 (cte -> ID push_var .)
    DIVIDE          reduce using rule 102 (cte -> ID push_var .)
    PLUS            reduce using rule 102 (cte -> ID push_var .)
    MINUS           reduce using rule 102 (cte -> ID push_var .)
    RELOP           reduce using rule 102 (cte -> ID push_var .)
    OR              reduce using rule 102 (cte -> ID push_var .)
    AND             reduce using rule 102 (cte -> ID push_var .)
    SEMICOLON       reduce using rule 102 (cte -> ID push_var .)
    RPAREN          reduce using rule 102 (cte -> ID push_var .)
    RBRACKET        reduce using rule 102 (cte -> ID push_var .)
    COMMA           reduce using rule 102 (cte -> ID push_var .)


state 166

    (103) cte -> ID var_aux . push_var
    (119) push_var -> .

    TIMES           reduce using rule 119 (push_var -> .)
    DIVIDE          reduce using rule 119 (push_var -> .)
    PLUS            reduce using rule 119 (push_var -> .)
    MINUS           reduce using rule 119 (push_var -> .)
    RELOP           reduce using rule 119 (push_var -> .)
    OR              reduce using rule 119 (push_var -> .)
    AND             reduce using rule 119 (push_var -> .)
    SEMICOLON       reduce using rule 119 (push_var -> .)
    RPAREN          reduce using rule 119 (push_var -> .)
    RBRACKET        reduce using rule 119 (push_var -> .)
    COMMA           reduce using rule 119 (push_var -> .)

    push_var                       shift and go to state 200

state 167

    (85) exp -> l_exp pop_op_lop .
    (86) exp -> l_exp pop_op_lop . OR push_op exp
    (87) exp -> l_exp pop_op_lop . AND push_op exp

    SEMICOLON       reduce using rule 85 (exp -> l_exp pop_op_lop .)
    RPAREN          reduce using rule 85 (exp -> l_exp pop_op_lop .)
    RBRACKET        reduce using rule 85 (exp -> l_exp pop_op_lop .)
    COMMA           reduce using rule 85 (exp -> l_exp pop_op_lop .)
    OR              shift and go to state 201
    AND             shift and go to state 202


state 168

    (89) l_exp -> a_exp RELOP . push_op a_exp pop_op_relop
    (120) push_op -> .

    LPAREN          reduce using rule 120 (push_op -> .)
    ID              reduce using rule 120 (push_op -> .)
    PLUS            reduce using rule 120 (push_op -> .)
    MINUS           reduce using rule 120 (push_op -> .)
    CTEI            reduce using rule 120 (push_op -> .)
    CTEF            reduce using rule 120 (push_op -> .)
    CTECHAR         reduce using rule 120 (push_op -> .)

    push_op                        shift and go to state 203

state 169

    (90) a_exp -> term pop_op_art_n2 .
    (91) a_exp -> term pop_op_art_n2 . PLUS push_op a_exp
    (92) a_exp -> term pop_op_art_n2 . MINUS push_op a_exp

    RELOP           reduce using rule 90 (a_exp -> term pop_op_art_n2 .)
    OR              reduce using rule 90 (a_exp -> term pop_op_art_n2 .)
    AND             reduce using rule 90 (a_exp -> term pop_op_art_n2 .)
    SEMICOLON       reduce using rule 90 (a_exp -> term pop_op_art_n2 .)
    RPAREN          reduce using rule 90 (a_exp -> term pop_op_art_n2 .)
    RBRACKET        reduce using rule 90 (a_exp -> term pop_op_art_n2 .)
    COMMA           reduce using rule 90 (a_exp -> term pop_op_art_n2 .)
    PLUS            shift and go to state 204
    MINUS           shift and go to state 205


state 170

    (100) factor_aux -> PLUS cte .

    TIMES           reduce using rule 100 (factor_aux -> PLUS cte .)
    DIVIDE          reduce using rule 100 (factor_aux -> PLUS cte .)
    PLUS            reduce using rule 100 (factor_aux -> PLUS cte .)
    MINUS           reduce using rule 100 (factor_aux -> PLUS cte .)
    RELOP           reduce using rule 100 (factor_aux -> PLUS cte .)
    OR              reduce using rule 100 (factor_aux -> PLUS cte .)
    AND             reduce using rule 100 (factor_aux -> PLUS cte .)
    SEMICOLON       reduce using rule 100 (factor_aux -> PLUS cte .)
    RPAREN          reduce using rule 100 (factor_aux -> PLUS cte .)
    RBRACKET        reduce using rule 100 (factor_aux -> PLUS cte .)
    COMMA           reduce using rule 100 (factor_aux -> PLUS cte .)


state 171

    (102) cte -> ID . push_var
    (103) cte -> ID . var_aux push_var
    (119) push_var -> .
    (60) var_aux -> . POINT ID
    (61) var_aux -> . POINT ID var_aux_2
    (62) var_aux -> . var_aux_2
    (63) var_aux_2 -> . LBRACKET exp RBRACKET
    (64) var_aux_2 -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET

    TIMES           reduce using rule 119 (push_var -> .)
    DIVIDE          reduce using rule 119 (push_var -> .)
    PLUS            reduce using rule 119 (push_var -> .)
    MINUS           reduce using rule 119 (push_var -> .)
    RELOP           reduce using rule 119 (push_var -> .)
    OR              reduce using rule 119 (push_var -> .)
    AND             reduce using rule 119 (push_var -> .)
    SEMICOLON       reduce using rule 119 (push_var -> .)
    RPAREN          reduce using rule 119 (push_var -> .)
    RBRACKET        reduce using rule 119 (push_var -> .)
    COMMA           reduce using rule 119 (push_var -> .)
    POINT           shift and go to state 104
    LBRACKET        shift and go to state 106

    push_var                       shift and go to state 165
    var_aux                        shift and go to state 166
    var_aux_2                      shift and go to state 105

state 172

    (101) factor_aux -> MINUS cte .

    TIMES           reduce using rule 101 (factor_aux -> MINUS cte .)
    DIVIDE          reduce using rule 101 (factor_aux -> MINUS cte .)
    PLUS            reduce using rule 101 (factor_aux -> MINUS cte .)
    MINUS           reduce using rule 101 (factor_aux -> MINUS cte .)
    RELOP           reduce using rule 101 (factor_aux -> MINUS cte .)
    OR              reduce using rule 101 (factor_aux -> MINUS cte .)
    AND             reduce using rule 101 (factor_aux -> MINUS cte .)
    SEMICOLON       reduce using rule 101 (factor_aux -> MINUS cte .)
    RPAREN          reduce using rule 101 (factor_aux -> MINUS cte .)
    RBRACKET        reduce using rule 101 (factor_aux -> MINUS cte .)
    COMMA           reduce using rule 101 (factor_aux -> MINUS cte .)


state 173

    (93) term -> factor pop_op_art_n1 .
    (94) term -> factor pop_op_art_n1 . TIMES push_op term
    (95) term -> factor pop_op_art_n1 . DIVIDE push_op term

    PLUS            reduce using rule 93 (term -> factor pop_op_art_n1 .)
    MINUS           reduce using rule 93 (term -> factor pop_op_art_n1 .)
    RELOP           reduce using rule 93 (term -> factor pop_op_art_n1 .)
    OR              reduce using rule 93 (term -> factor pop_op_art_n1 .)
    AND             reduce using rule 93 (term -> factor pop_op_art_n1 .)
    SEMICOLON       reduce using rule 93 (term -> factor pop_op_art_n1 .)
    RPAREN          reduce using rule 93 (term -> factor pop_op_art_n1 .)
    RBRACKET        reduce using rule 93 (term -> factor pop_op_art_n1 .)
    COMMA           reduce using rule 93 (term -> factor pop_op_art_n1 .)
    TIMES           shift and go to state 206
    DIVIDE          shift and go to state 207


state 174

    (96) factor -> LPAREN push_paren . exp RPAREN pop_paren
    (85) exp -> . l_exp pop_op_lop
    (86) exp -> . l_exp pop_op_lop OR push_op exp
    (87) exp -> . l_exp pop_op_lop AND push_op exp
    (88) l_exp -> . a_exp
    (89) l_exp -> . a_exp RELOP push_op a_exp pop_op_relop
    (90) a_exp -> . term pop_op_art_n2
    (91) a_exp -> . term pop_op_art_n2 PLUS push_op a_exp
    (92) a_exp -> . term pop_op_art_n2 MINUS push_op a_exp
    (93) term -> . factor pop_op_art_n1
    (94) term -> . factor pop_op_art_n1 TIMES push_op term
    (95) term -> . factor pop_op_art_n1 DIVIDE push_op term
    (96) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (97) factor -> . call
    (98) factor -> . factor_aux
    (65) call -> . ID LPAREN RPAREN
    (66) call -> . ID POINT ID LPAREN RPAREN
    (67) call -> . ID LPAREN call_aux RPAREN
    (68) call -> . ID POINT ID LPAREN call_aux RPAREN
    (99) factor_aux -> . cte
    (100) factor_aux -> . PLUS cte
    (101) factor_aux -> . MINUS cte
    (102) cte -> . ID push_var
    (103) cte -> . ID var_aux push_var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 135
    ID              shift and go to state 127
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    CTEI            shift and go to state 139
    CTEF            shift and go to state 140
    CTECHAR         shift and go to state 141

    exp                            shift and go to state 208
    l_exp                          shift and go to state 129
    a_exp                          shift and go to state 130
    term                           shift and go to state 131
    factor                         shift and go to state 134
    call                           shift and go to state 136
    factor_aux                     shift and go to state 137
    cte                            shift and go to state 138

state 175

    (104) cte -> CTEI push_var .

    TIMES           reduce using rule 104 (cte -> CTEI push_var .)
    DIVIDE          reduce using rule 104 (cte -> CTEI push_var .)
    PLUS            reduce using rule 104 (cte -> CTEI push_var .)
    MINUS           reduce using rule 104 (cte -> CTEI push_var .)
    RELOP           reduce using rule 104 (cte -> CTEI push_var .)
    OR              reduce using rule 104 (cte -> CTEI push_var .)
    AND             reduce using rule 104 (cte -> CTEI push_var .)
    SEMICOLON       reduce using rule 104 (cte -> CTEI push_var .)
    RPAREN          reduce using rule 104 (cte -> CTEI push_var .)
    RBRACKET        reduce using rule 104 (cte -> CTEI push_var .)
    COMMA           reduce using rule 104 (cte -> CTEI push_var .)


state 176

    (105) cte -> CTEF push_var .

    TIMES           reduce using rule 105 (cte -> CTEF push_var .)
    DIVIDE          reduce using rule 105 (cte -> CTEF push_var .)
    PLUS            reduce using rule 105 (cte -> CTEF push_var .)
    MINUS           reduce using rule 105 (cte -> CTEF push_var .)
    RELOP           reduce using rule 105 (cte -> CTEF push_var .)
    OR              reduce using rule 105 (cte -> CTEF push_var .)
    AND             reduce using rule 105 (cte -> CTEF push_var .)
    SEMICOLON       reduce using rule 105 (cte -> CTEF push_var .)
    RPAREN          reduce using rule 105 (cte -> CTEF push_var .)
    RBRACKET        reduce using rule 105 (cte -> CTEF push_var .)
    COMMA           reduce using rule 105 (cte -> CTEF push_var .)


state 177

    (106) cte -> CTECHAR push_var .

    TIMES           reduce using rule 106 (cte -> CTECHAR push_var .)
    DIVIDE          reduce using rule 106 (cte -> CTECHAR push_var .)
    PLUS            reduce using rule 106 (cte -> CTECHAR push_var .)
    MINUS           reduce using rule 106 (cte -> CTECHAR push_var .)
    RELOP           reduce using rule 106 (cte -> CTECHAR push_var .)
    OR              reduce using rule 106 (cte -> CTECHAR push_var .)
    AND             reduce using rule 106 (cte -> CTECHAR push_var .)
    SEMICOLON       reduce using rule 106 (cte -> CTECHAR push_var .)
    RPAREN          reduce using rule 106 (cte -> CTECHAR push_var .)
    RBRACKET        reduce using rule 106 (cte -> CTECHAR push_var .)
    COMMA           reduce using rule 106 (cte -> CTECHAR push_var .)


state 178

    (59) assignation -> ID var_aux EQUAL exp .

    SEMICOLON       reduce using rule 59 (assignation -> ID var_aux EQUAL exp .)
    RPAREN          reduce using rule 59 (assignation -> ID var_aux EQUAL exp .)


state 179

    (61) var_aux -> POINT ID var_aux_2 .

    EQUAL           reduce using rule 61 (var_aux -> POINT ID var_aux_2 .)
    TIMES           reduce using rule 61 (var_aux -> POINT ID var_aux_2 .)
    DIVIDE          reduce using rule 61 (var_aux -> POINT ID var_aux_2 .)
    PLUS            reduce using rule 61 (var_aux -> POINT ID var_aux_2 .)
    MINUS           reduce using rule 61 (var_aux -> POINT ID var_aux_2 .)
    RELOP           reduce using rule 61 (var_aux -> POINT ID var_aux_2 .)
    OR              reduce using rule 61 (var_aux -> POINT ID var_aux_2 .)
    AND             reduce using rule 61 (var_aux -> POINT ID var_aux_2 .)
    SEMICOLON       reduce using rule 61 (var_aux -> POINT ID var_aux_2 .)
    RPAREN          reduce using rule 61 (var_aux -> POINT ID var_aux_2 .)
    RBRACKET        reduce using rule 61 (var_aux -> POINT ID var_aux_2 .)
    COMMA           reduce using rule 61 (var_aux -> POINT ID var_aux_2 .)


state 180

    (63) var_aux_2 -> LBRACKET exp RBRACKET .
    (64) var_aux_2 -> LBRACKET exp RBRACKET . LBRACKET exp RBRACKET

    EQUAL           reduce using rule 63 (var_aux_2 -> LBRACKET exp RBRACKET .)
    TIMES           reduce using rule 63 (var_aux_2 -> LBRACKET exp RBRACKET .)
    DIVIDE          reduce using rule 63 (var_aux_2 -> LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 63 (var_aux_2 -> LBRACKET exp RBRACKET .)
    MINUS           reduce using rule 63 (var_aux_2 -> LBRACKET exp RBRACKET .)
    RELOP           reduce using rule 63 (var_aux_2 -> LBRACKET exp RBRACKET .)
    OR              reduce using rule 63 (var_aux_2 -> LBRACKET exp RBRACKET .)
    AND             reduce using rule 63 (var_aux_2 -> LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 63 (var_aux_2 -> LBRACKET exp RBRACKET .)
    RPAREN          reduce using rule 63 (var_aux_2 -> LBRACKET exp RBRACKET .)
    RBRACKET        reduce using rule 63 (var_aux_2 -> LBRACKET exp RBRACKET .)
    COMMA           reduce using rule 63 (var_aux_2 -> LBRACKET exp RBRACKET .)
    LBRACKET        shift and go to state 209


state 181

    (77) read -> READ LPAREN ID RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 210


state 182

    (78) write -> WRITE LPAREN write_aux RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 211


state 183

    (80) write_aux -> exp COMMA . write_aux
    (79) write_aux -> . exp
    (80) write_aux -> . exp COMMA write_aux
    (81) write_aux -> . CTESTRING
    (82) write_aux -> . CTESTRING COMMA write_aux
    (85) exp -> . l_exp pop_op_lop
    (86) exp -> . l_exp pop_op_lop OR push_op exp
    (87) exp -> . l_exp pop_op_lop AND push_op exp
    (88) l_exp -> . a_exp
    (89) l_exp -> . a_exp RELOP push_op a_exp pop_op_relop
    (90) a_exp -> . term pop_op_art_n2
    (91) a_exp -> . term pop_op_art_n2 PLUS push_op a_exp
    (92) a_exp -> . term pop_op_art_n2 MINUS push_op a_exp
    (93) term -> . factor pop_op_art_n1
    (94) term -> . factor pop_op_art_n1 TIMES push_op term
    (95) term -> . factor pop_op_art_n1 DIVIDE push_op term
    (96) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (97) factor -> . call
    (98) factor -> . factor_aux
    (65) call -> . ID LPAREN RPAREN
    (66) call -> . ID POINT ID LPAREN RPAREN
    (67) call -> . ID LPAREN call_aux RPAREN
    (68) call -> . ID POINT ID LPAREN call_aux RPAREN
    (99) factor_aux -> . cte
    (100) factor_aux -> . PLUS cte
    (101) factor_aux -> . MINUS cte
    (102) cte -> . ID push_var
    (103) cte -> . ID var_aux push_var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var

    CTESTRING       shift and go to state 148
    LPAREN          shift and go to state 135
    ID              shift and go to state 127
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    CTEI            shift and go to state 139
    CTEF            shift and go to state 140
    CTECHAR         shift and go to state 141

    exp                            shift and go to state 147
    write_aux                      shift and go to state 212
    l_exp                          shift and go to state 129
    a_exp                          shift and go to state 130
    term                           shift and go to state 131
    factor                         shift and go to state 134
    call                           shift and go to state 136
    factor_aux                     shift and go to state 137
    cte                            shift and go to state 138

state 184

    (82) write_aux -> CTESTRING COMMA . write_aux
    (79) write_aux -> . exp
    (80) write_aux -> . exp COMMA write_aux
    (81) write_aux -> . CTESTRING
    (82) write_aux -> . CTESTRING COMMA write_aux
    (85) exp -> . l_exp pop_op_lop
    (86) exp -> . l_exp pop_op_lop OR push_op exp
    (87) exp -> . l_exp pop_op_lop AND push_op exp
    (88) l_exp -> . a_exp
    (89) l_exp -> . a_exp RELOP push_op a_exp pop_op_relop
    (90) a_exp -> . term pop_op_art_n2
    (91) a_exp -> . term pop_op_art_n2 PLUS push_op a_exp
    (92) a_exp -> . term pop_op_art_n2 MINUS push_op a_exp
    (93) term -> . factor pop_op_art_n1
    (94) term -> . factor pop_op_art_n1 TIMES push_op term
    (95) term -> . factor pop_op_art_n1 DIVIDE push_op term
    (96) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (97) factor -> . call
    (98) factor -> . factor_aux
    (65) call -> . ID LPAREN RPAREN
    (66) call -> . ID POINT ID LPAREN RPAREN
    (67) call -> . ID LPAREN call_aux RPAREN
    (68) call -> . ID POINT ID LPAREN call_aux RPAREN
    (99) factor_aux -> . cte
    (100) factor_aux -> . PLUS cte
    (101) factor_aux -> . MINUS cte
    (102) cte -> . ID push_var
    (103) cte -> . ID var_aux push_var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var

    CTESTRING       shift and go to state 148
    LPAREN          shift and go to state 135
    ID              shift and go to state 127
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    CTEI            shift and go to state 139
    CTEF            shift and go to state 140
    CTECHAR         shift and go to state 141

    write_aux                      shift and go to state 213
    exp                            shift and go to state 147
    l_exp                          shift and go to state 129
    a_exp                          shift and go to state 130
    term                           shift and go to state 131
    factor                         shift and go to state 134
    call                           shift and go to state 136
    factor_aux                     shift and go to state 137
    cte                            shift and go to state 138

state 185

    (72) condition_aux -> LPAREN exp RPAREN . THEN LBRACE statutes_aux RBRACE condition_aux_3
    (74) condition_aux_2 -> LPAREN exp RPAREN . THEN LBRACE statutes_aux RBRACE ELIF condition_aux

    THEN            shift and go to state 214


state 186

    (83) while -> WHILE LPAREN exp RPAREN . DO LBRACE statutes_aux RBRACE

    DO              shift and go to state 215


state 187

    (84) for -> FROM LPAREN assignation RPAREN . UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    UNTIL           shift and go to state 216


state 188

    (22) vars_simple_type_aux -> LBRACKET CTEI RBRACKET LBRACKET CTEI . RBRACKET add_matrix_variable

    RBRACKET        shift and go to state 217


state 189

    (35) functions_aux -> VOID ID add_function LPAREN params RPAREN body .

    FUNCT           reduce using rule 35 (functions_aux -> VOID ID add_function LPAREN params RPAREN body .)
    RBRACE          reduce using rule 35 (functions_aux -> VOID ID add_function LPAREN params RPAREN body .)
    INIT            reduce using rule 35 (functions_aux -> VOID ID add_function LPAREN params RPAREN body .)


state 190

    (45) body -> LBRACE dec_vars . statutes_aux RBRACE
    (48) body -> LBRACE dec_vars . statutes_aux RETURN ID SEMICOLON RBRACE
    (56) statutes_aux -> . statutes
    (57) statutes_aux -> . statutes statutes_aux
    (49) statutes -> . assignation SEMICOLON
    (50) statutes -> . CALL call SEMICOLON
    (51) statutes -> . read
    (52) statutes -> . write
    (53) statutes -> . condition
    (54) statutes -> . while
    (55) statutes -> . for
    (58) assignation -> . ID EQUAL exp
    (59) assignation -> . ID var_aux EQUAL exp
    (77) read -> . READ LPAREN ID RPAREN SEMICOLON
    (78) write -> . WRITE LPAREN write_aux RPAREN SEMICOLON
    (71) condition -> . IF condition_aux
    (83) while -> . WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (84) for -> . FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    CALL            shift and go to state 75
    ID              shift and go to state 81
    READ            shift and go to state 82
    WRITE           shift and go to state 83
    IF              shift and go to state 84
    WHILE           shift and go to state 85
    FROM            shift and go to state 86

    statutes_aux                   shift and go to state 218
    statutes                       shift and go to state 73
    assignation                    shift and go to state 74
    read                           shift and go to state 76
    write                          shift and go to state 77
    condition                      shift and go to state 78
    while                          shift and go to state 79
    for                            shift and go to state 80

state 191

    (46) body -> LBRACE statutes_aux . RBRACE
    (47) body -> LBRACE statutes_aux . RETURN ID SEMICOLON RBRACE

    RBRACE          shift and go to state 219
    RETURN          shift and go to state 220


state 192

    (39) params -> simple_type ID add_variable .
    (40) params -> simple_type ID add_variable . COMMA params

    RPAREN          reduce using rule 39 (params -> simple_type ID add_variable .)
    COMMA           shift and go to state 221


state 193

    (41) params -> simple_type ID params_aux .
    (42) params -> simple_type ID params_aux . COMMA params

    RPAREN          reduce using rule 41 (params -> simple_type ID params_aux .)
    COMMA           shift and go to state 222


state 194

    (43) params_aux -> LBRACKET . RBRACKET add_array_var_params
    (44) params_aux -> LBRACKET . RBRACKET LBRACKET RBRACKET add_matrix_var_params

    RBRACKET        shift and go to state 223


state 195

    (38) functions_aux -> simple_type ID add_function LPAREN params RPAREN body .

    FUNCT           reduce using rule 38 (functions_aux -> simple_type ID add_function LPAREN params RPAREN body .)
    RBRACE          reduce using rule 38 (functions_aux -> simple_type ID add_function LPAREN params RPAREN body .)
    INIT            reduce using rule 38 (functions_aux -> simple_type ID add_function LPAREN params RPAREN body .)


state 196

    (67) call -> ID LPAREN call_aux RPAREN .

    SEMICOLON       reduce using rule 67 (call -> ID LPAREN call_aux RPAREN .)
    TIMES           reduce using rule 67 (call -> ID LPAREN call_aux RPAREN .)
    DIVIDE          reduce using rule 67 (call -> ID LPAREN call_aux RPAREN .)
    PLUS            reduce using rule 67 (call -> ID LPAREN call_aux RPAREN .)
    MINUS           reduce using rule 67 (call -> ID LPAREN call_aux RPAREN .)
    RELOP           reduce using rule 67 (call -> ID LPAREN call_aux RPAREN .)
    OR              reduce using rule 67 (call -> ID LPAREN call_aux RPAREN .)
    AND             reduce using rule 67 (call -> ID LPAREN call_aux RPAREN .)
    RPAREN          reduce using rule 67 (call -> ID LPAREN call_aux RPAREN .)
    RBRACKET        reduce using rule 67 (call -> ID LPAREN call_aux RPAREN .)
    COMMA           reduce using rule 67 (call -> ID LPAREN call_aux RPAREN .)


state 197

    (70) call_aux -> exp COMMA . call_aux
    (69) call_aux -> . exp
    (70) call_aux -> . exp COMMA call_aux
    (85) exp -> . l_exp pop_op_lop
    (86) exp -> . l_exp pop_op_lop OR push_op exp
    (87) exp -> . l_exp pop_op_lop AND push_op exp
    (88) l_exp -> . a_exp
    (89) l_exp -> . a_exp RELOP push_op a_exp pop_op_relop
    (90) a_exp -> . term pop_op_art_n2
    (91) a_exp -> . term pop_op_art_n2 PLUS push_op a_exp
    (92) a_exp -> . term pop_op_art_n2 MINUS push_op a_exp
    (93) term -> . factor pop_op_art_n1
    (94) term -> . factor pop_op_art_n1 TIMES push_op term
    (95) term -> . factor pop_op_art_n1 DIVIDE push_op term
    (96) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (97) factor -> . call
    (98) factor -> . factor_aux
    (65) call -> . ID LPAREN RPAREN
    (66) call -> . ID POINT ID LPAREN RPAREN
    (67) call -> . ID LPAREN call_aux RPAREN
    (68) call -> . ID POINT ID LPAREN call_aux RPAREN
    (99) factor_aux -> . cte
    (100) factor_aux -> . PLUS cte
    (101) factor_aux -> . MINUS cte
    (102) cte -> . ID push_var
    (103) cte -> . ID var_aux push_var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 135
    ID              shift and go to state 127
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    CTEI            shift and go to state 139
    CTEF            shift and go to state 140
    CTECHAR         shift and go to state 141

    exp                            shift and go to state 162
    call_aux                       shift and go to state 224
    l_exp                          shift and go to state 129
    a_exp                          shift and go to state 130
    term                           shift and go to state 131
    factor                         shift and go to state 134
    call                           shift and go to state 136
    factor_aux                     shift and go to state 137
    cte                            shift and go to state 138

state 198

    (66) call -> ID POINT ID LPAREN . RPAREN
    (68) call -> ID POINT ID LPAREN . call_aux RPAREN
    (69) call_aux -> . exp
    (70) call_aux -> . exp COMMA call_aux
    (85) exp -> . l_exp pop_op_lop
    (86) exp -> . l_exp pop_op_lop OR push_op exp
    (87) exp -> . l_exp pop_op_lop AND push_op exp
    (88) l_exp -> . a_exp
    (89) l_exp -> . a_exp RELOP push_op a_exp pop_op_relop
    (90) a_exp -> . term pop_op_art_n2
    (91) a_exp -> . term pop_op_art_n2 PLUS push_op a_exp
    (92) a_exp -> . term pop_op_art_n2 MINUS push_op a_exp
    (93) term -> . factor pop_op_art_n1
    (94) term -> . factor pop_op_art_n1 TIMES push_op term
    (95) term -> . factor pop_op_art_n1 DIVIDE push_op term
    (96) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (97) factor -> . call
    (98) factor -> . factor_aux
    (65) call -> . ID LPAREN RPAREN
    (66) call -> . ID POINT ID LPAREN RPAREN
    (67) call -> . ID LPAREN call_aux RPAREN
    (68) call -> . ID POINT ID LPAREN call_aux RPAREN
    (99) factor_aux -> . cte
    (100) factor_aux -> . PLUS cte
    (101) factor_aux -> . MINUS cte
    (102) cte -> . ID push_var
    (103) cte -> . ID var_aux push_var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var

    RPAREN          shift and go to state 225
    LPAREN          shift and go to state 135
    ID              shift and go to state 127
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    CTEI            shift and go to state 139
    CTEF            shift and go to state 140
    CTECHAR         shift and go to state 141

    call_aux                       shift and go to state 226
    exp                            shift and go to state 162
    l_exp                          shift and go to state 129
    a_exp                          shift and go to state 130
    term                           shift and go to state 131
    factor                         shift and go to state 134
    call                           shift and go to state 136
    factor_aux                     shift and go to state 137
    cte                            shift and go to state 138

state 199

    (66) call -> ID POINT ID . LPAREN RPAREN
    (68) call -> ID POINT ID . LPAREN call_aux RPAREN
    (60) var_aux -> POINT ID .
    (61) var_aux -> POINT ID . var_aux_2
    (63) var_aux_2 -> . LBRACKET exp RBRACKET
    (64) var_aux_2 -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET

    LPAREN          shift and go to state 198
    TIMES           reduce using rule 60 (var_aux -> POINT ID .)
    DIVIDE          reduce using rule 60 (var_aux -> POINT ID .)
    PLUS            reduce using rule 60 (var_aux -> POINT ID .)
    MINUS           reduce using rule 60 (var_aux -> POINT ID .)
    RELOP           reduce using rule 60 (var_aux -> POINT ID .)
    OR              reduce using rule 60 (var_aux -> POINT ID .)
    AND             reduce using rule 60 (var_aux -> POINT ID .)
    SEMICOLON       reduce using rule 60 (var_aux -> POINT ID .)
    RPAREN          reduce using rule 60 (var_aux -> POINT ID .)
    RBRACKET        reduce using rule 60 (var_aux -> POINT ID .)
    COMMA           reduce using rule 60 (var_aux -> POINT ID .)
    LBRACKET        shift and go to state 106

    var_aux_2                      shift and go to state 179

state 200

    (103) cte -> ID var_aux push_var .

    TIMES           reduce using rule 103 (cte -> ID var_aux push_var .)
    DIVIDE          reduce using rule 103 (cte -> ID var_aux push_var .)
    PLUS            reduce using rule 103 (cte -> ID var_aux push_var .)
    MINUS           reduce using rule 103 (cte -> ID var_aux push_var .)
    RELOP           reduce using rule 103 (cte -> ID var_aux push_var .)
    OR              reduce using rule 103 (cte -> ID var_aux push_var .)
    AND             reduce using rule 103 (cte -> ID var_aux push_var .)
    SEMICOLON       reduce using rule 103 (cte -> ID var_aux push_var .)
    RPAREN          reduce using rule 103 (cte -> ID var_aux push_var .)
    RBRACKET        reduce using rule 103 (cte -> ID var_aux push_var .)
    COMMA           reduce using rule 103 (cte -> ID var_aux push_var .)


state 201

    (86) exp -> l_exp pop_op_lop OR . push_op exp
    (120) push_op -> .

    LPAREN          reduce using rule 120 (push_op -> .)
    ID              reduce using rule 120 (push_op -> .)
    PLUS            reduce using rule 120 (push_op -> .)
    MINUS           reduce using rule 120 (push_op -> .)
    CTEI            reduce using rule 120 (push_op -> .)
    CTEF            reduce using rule 120 (push_op -> .)
    CTECHAR         reduce using rule 120 (push_op -> .)

    push_op                        shift and go to state 227

state 202

    (87) exp -> l_exp pop_op_lop AND . push_op exp
    (120) push_op -> .

    LPAREN          reduce using rule 120 (push_op -> .)
    ID              reduce using rule 120 (push_op -> .)
    PLUS            reduce using rule 120 (push_op -> .)
    MINUS           reduce using rule 120 (push_op -> .)
    CTEI            reduce using rule 120 (push_op -> .)
    CTEF            reduce using rule 120 (push_op -> .)
    CTECHAR         reduce using rule 120 (push_op -> .)

    push_op                        shift and go to state 228

state 203

    (89) l_exp -> a_exp RELOP push_op . a_exp pop_op_relop
    (90) a_exp -> . term pop_op_art_n2
    (91) a_exp -> . term pop_op_art_n2 PLUS push_op a_exp
    (92) a_exp -> . term pop_op_art_n2 MINUS push_op a_exp
    (93) term -> . factor pop_op_art_n1
    (94) term -> . factor pop_op_art_n1 TIMES push_op term
    (95) term -> . factor pop_op_art_n1 DIVIDE push_op term
    (96) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (97) factor -> . call
    (98) factor -> . factor_aux
    (65) call -> . ID LPAREN RPAREN
    (66) call -> . ID POINT ID LPAREN RPAREN
    (67) call -> . ID LPAREN call_aux RPAREN
    (68) call -> . ID POINT ID LPAREN call_aux RPAREN
    (99) factor_aux -> . cte
    (100) factor_aux -> . PLUS cte
    (101) factor_aux -> . MINUS cte
    (102) cte -> . ID push_var
    (103) cte -> . ID var_aux push_var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 135
    ID              shift and go to state 127
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    CTEI            shift and go to state 139
    CTEF            shift and go to state 140
    CTECHAR         shift and go to state 141

    a_exp                          shift and go to state 229
    term                           shift and go to state 131
    factor                         shift and go to state 134
    call                           shift and go to state 136
    factor_aux                     shift and go to state 137
    cte                            shift and go to state 138

state 204

    (91) a_exp -> term pop_op_art_n2 PLUS . push_op a_exp
    (120) push_op -> .

    LPAREN          reduce using rule 120 (push_op -> .)
    ID              reduce using rule 120 (push_op -> .)
    PLUS            reduce using rule 120 (push_op -> .)
    MINUS           reduce using rule 120 (push_op -> .)
    CTEI            reduce using rule 120 (push_op -> .)
    CTEF            reduce using rule 120 (push_op -> .)
    CTECHAR         reduce using rule 120 (push_op -> .)

    push_op                        shift and go to state 230

state 205

    (92) a_exp -> term pop_op_art_n2 MINUS . push_op a_exp
    (120) push_op -> .

    LPAREN          reduce using rule 120 (push_op -> .)
    ID              reduce using rule 120 (push_op -> .)
    PLUS            reduce using rule 120 (push_op -> .)
    MINUS           reduce using rule 120 (push_op -> .)
    CTEI            reduce using rule 120 (push_op -> .)
    CTEF            reduce using rule 120 (push_op -> .)
    CTECHAR         reduce using rule 120 (push_op -> .)

    push_op                        shift and go to state 231

state 206

    (94) term -> factor pop_op_art_n1 TIMES . push_op term
    (120) push_op -> .

    LPAREN          reduce using rule 120 (push_op -> .)
    ID              reduce using rule 120 (push_op -> .)
    PLUS            reduce using rule 120 (push_op -> .)
    MINUS           reduce using rule 120 (push_op -> .)
    CTEI            reduce using rule 120 (push_op -> .)
    CTEF            reduce using rule 120 (push_op -> .)
    CTECHAR         reduce using rule 120 (push_op -> .)

    push_op                        shift and go to state 232

state 207

    (95) term -> factor pop_op_art_n1 DIVIDE . push_op term
    (120) push_op -> .

    LPAREN          reduce using rule 120 (push_op -> .)
    ID              reduce using rule 120 (push_op -> .)
    PLUS            reduce using rule 120 (push_op -> .)
    MINUS           reduce using rule 120 (push_op -> .)
    CTEI            reduce using rule 120 (push_op -> .)
    CTEF            reduce using rule 120 (push_op -> .)
    CTECHAR         reduce using rule 120 (push_op -> .)

    push_op                        shift and go to state 233

state 208

    (96) factor -> LPAREN push_paren exp . RPAREN pop_paren

    RPAREN          shift and go to state 234


state 209

    (64) var_aux_2 -> LBRACKET exp RBRACKET LBRACKET . exp RBRACKET
    (85) exp -> . l_exp pop_op_lop
    (86) exp -> . l_exp pop_op_lop OR push_op exp
    (87) exp -> . l_exp pop_op_lop AND push_op exp
    (88) l_exp -> . a_exp
    (89) l_exp -> . a_exp RELOP push_op a_exp pop_op_relop
    (90) a_exp -> . term pop_op_art_n2
    (91) a_exp -> . term pop_op_art_n2 PLUS push_op a_exp
    (92) a_exp -> . term pop_op_art_n2 MINUS push_op a_exp
    (93) term -> . factor pop_op_art_n1
    (94) term -> . factor pop_op_art_n1 TIMES push_op term
    (95) term -> . factor pop_op_art_n1 DIVIDE push_op term
    (96) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (97) factor -> . call
    (98) factor -> . factor_aux
    (65) call -> . ID LPAREN RPAREN
    (66) call -> . ID POINT ID LPAREN RPAREN
    (67) call -> . ID LPAREN call_aux RPAREN
    (68) call -> . ID POINT ID LPAREN call_aux RPAREN
    (99) factor_aux -> . cte
    (100) factor_aux -> . PLUS cte
    (101) factor_aux -> . MINUS cte
    (102) cte -> . ID push_var
    (103) cte -> . ID var_aux push_var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 135
    ID              shift and go to state 127
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    CTEI            shift and go to state 139
    CTEF            shift and go to state 140
    CTECHAR         shift and go to state 141

    exp                            shift and go to state 235
    l_exp                          shift and go to state 129
    a_exp                          shift and go to state 130
    term                           shift and go to state 131
    factor                         shift and go to state 134
    call                           shift and go to state 136
    factor_aux                     shift and go to state 137
    cte                            shift and go to state 138

state 210

    (77) read -> READ LPAREN ID RPAREN SEMICOLON .

    CALL            reduce using rule 77 (read -> READ LPAREN ID RPAREN SEMICOLON .)
    ID              reduce using rule 77 (read -> READ LPAREN ID RPAREN SEMICOLON .)
    READ            reduce using rule 77 (read -> READ LPAREN ID RPAREN SEMICOLON .)
    WRITE           reduce using rule 77 (read -> READ LPAREN ID RPAREN SEMICOLON .)
    IF              reduce using rule 77 (read -> READ LPAREN ID RPAREN SEMICOLON .)
    WHILE           reduce using rule 77 (read -> READ LPAREN ID RPAREN SEMICOLON .)
    FROM            reduce using rule 77 (read -> READ LPAREN ID RPAREN SEMICOLON .)
    RBRACE          reduce using rule 77 (read -> READ LPAREN ID RPAREN SEMICOLON .)
    RETURN          reduce using rule 77 (read -> READ LPAREN ID RPAREN SEMICOLON .)


state 211

    (78) write -> WRITE LPAREN write_aux RPAREN SEMICOLON .

    CALL            reduce using rule 78 (write -> WRITE LPAREN write_aux RPAREN SEMICOLON .)
    ID              reduce using rule 78 (write -> WRITE LPAREN write_aux RPAREN SEMICOLON .)
    READ            reduce using rule 78 (write -> WRITE LPAREN write_aux RPAREN SEMICOLON .)
    WRITE           reduce using rule 78 (write -> WRITE LPAREN write_aux RPAREN SEMICOLON .)
    IF              reduce using rule 78 (write -> WRITE LPAREN write_aux RPAREN SEMICOLON .)
    WHILE           reduce using rule 78 (write -> WRITE LPAREN write_aux RPAREN SEMICOLON .)
    FROM            reduce using rule 78 (write -> WRITE LPAREN write_aux RPAREN SEMICOLON .)
    RBRACE          reduce using rule 78 (write -> WRITE LPAREN write_aux RPAREN SEMICOLON .)
    RETURN          reduce using rule 78 (write -> WRITE LPAREN write_aux RPAREN SEMICOLON .)


state 212

    (80) write_aux -> exp COMMA write_aux .

    RPAREN          reduce using rule 80 (write_aux -> exp COMMA write_aux .)


state 213

    (82) write_aux -> CTESTRING COMMA write_aux .

    RPAREN          reduce using rule 82 (write_aux -> CTESTRING COMMA write_aux .)


state 214

    (72) condition_aux -> LPAREN exp RPAREN THEN . LBRACE statutes_aux RBRACE condition_aux_3
    (74) condition_aux_2 -> LPAREN exp RPAREN THEN . LBRACE statutes_aux RBRACE ELIF condition_aux

    LBRACE          shift and go to state 236


state 215

    (83) while -> WHILE LPAREN exp RPAREN DO . LBRACE statutes_aux RBRACE

    LBRACE          shift and go to state 237


state 216

    (84) for -> FROM LPAREN assignation RPAREN UNTIL . LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    LPAREN          shift and go to state 238


state 217

    (22) vars_simple_type_aux -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET . add_matrix_variable
    (112) add_matrix_variable -> .

    COMMA           reduce using rule 112 (add_matrix_variable -> .)
    SEMICOLON       reduce using rule 112 (add_matrix_variable -> .)

    add_matrix_variable            shift and go to state 239

state 218

    (45) body -> LBRACE dec_vars statutes_aux . RBRACE
    (48) body -> LBRACE dec_vars statutes_aux . RETURN ID SEMICOLON RBRACE

    RBRACE          shift and go to state 240
    RETURN          shift and go to state 241


state 219

    (46) body -> LBRACE statutes_aux RBRACE .

    FUNCT           reduce using rule 46 (body -> LBRACE statutes_aux RBRACE .)
    RBRACE          reduce using rule 46 (body -> LBRACE statutes_aux RBRACE .)
    INIT            reduce using rule 46 (body -> LBRACE statutes_aux RBRACE .)


state 220

    (47) body -> LBRACE statutes_aux RETURN . ID SEMICOLON RBRACE

    ID              shift and go to state 242


state 221

    (40) params -> simple_type ID add_variable COMMA . params
    (39) params -> . simple_type ID add_variable
    (40) params -> . simple_type ID add_variable COMMA params
    (41) params -> . simple_type ID params_aux
    (42) params -> . simple_type ID params_aux COMMA params
    (14) simple_type -> . INT
    (15) simple_type -> . FLOAT
    (16) simple_type -> . CHAR

    INT             shift and go to state 38
    FLOAT           shift and go to state 39
    CHAR            shift and go to state 40

    simple_type                    shift and go to state 120
    params                         shift and go to state 243

state 222

    (42) params -> simple_type ID params_aux COMMA . params
    (39) params -> . simple_type ID add_variable
    (40) params -> . simple_type ID add_variable COMMA params
    (41) params -> . simple_type ID params_aux
    (42) params -> . simple_type ID params_aux COMMA params
    (14) simple_type -> . INT
    (15) simple_type -> . FLOAT
    (16) simple_type -> . CHAR

    INT             shift and go to state 38
    FLOAT           shift and go to state 39
    CHAR            shift and go to state 40

    simple_type                    shift and go to state 120
    params                         shift and go to state 244

state 223

    (43) params_aux -> LBRACKET RBRACKET . add_array_var_params
    (44) params_aux -> LBRACKET RBRACKET . LBRACKET RBRACKET add_matrix_var_params
    (113) add_array_var_params -> .

    LBRACKET        shift and go to state 245
    COMMA           reduce using rule 113 (add_array_var_params -> .)
    RPAREN          reduce using rule 113 (add_array_var_params -> .)

    add_array_var_params           shift and go to state 246

state 224

    (70) call_aux -> exp COMMA call_aux .

    RPAREN          reduce using rule 70 (call_aux -> exp COMMA call_aux .)


state 225

    (66) call -> ID POINT ID LPAREN RPAREN .

    SEMICOLON       reduce using rule 66 (call -> ID POINT ID LPAREN RPAREN .)
    TIMES           reduce using rule 66 (call -> ID POINT ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 66 (call -> ID POINT ID LPAREN RPAREN .)
    PLUS            reduce using rule 66 (call -> ID POINT ID LPAREN RPAREN .)
    MINUS           reduce using rule 66 (call -> ID POINT ID LPAREN RPAREN .)
    RELOP           reduce using rule 66 (call -> ID POINT ID LPAREN RPAREN .)
    OR              reduce using rule 66 (call -> ID POINT ID LPAREN RPAREN .)
    AND             reduce using rule 66 (call -> ID POINT ID LPAREN RPAREN .)
    RPAREN          reduce using rule 66 (call -> ID POINT ID LPAREN RPAREN .)
    RBRACKET        reduce using rule 66 (call -> ID POINT ID LPAREN RPAREN .)
    COMMA           reduce using rule 66 (call -> ID POINT ID LPAREN RPAREN .)


state 226

    (68) call -> ID POINT ID LPAREN call_aux . RPAREN

    RPAREN          shift and go to state 247


state 227

    (86) exp -> l_exp pop_op_lop OR push_op . exp
    (85) exp -> . l_exp pop_op_lop
    (86) exp -> . l_exp pop_op_lop OR push_op exp
    (87) exp -> . l_exp pop_op_lop AND push_op exp
    (88) l_exp -> . a_exp
    (89) l_exp -> . a_exp RELOP push_op a_exp pop_op_relop
    (90) a_exp -> . term pop_op_art_n2
    (91) a_exp -> . term pop_op_art_n2 PLUS push_op a_exp
    (92) a_exp -> . term pop_op_art_n2 MINUS push_op a_exp
    (93) term -> . factor pop_op_art_n1
    (94) term -> . factor pop_op_art_n1 TIMES push_op term
    (95) term -> . factor pop_op_art_n1 DIVIDE push_op term
    (96) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (97) factor -> . call
    (98) factor -> . factor_aux
    (65) call -> . ID LPAREN RPAREN
    (66) call -> . ID POINT ID LPAREN RPAREN
    (67) call -> . ID LPAREN call_aux RPAREN
    (68) call -> . ID POINT ID LPAREN call_aux RPAREN
    (99) factor_aux -> . cte
    (100) factor_aux -> . PLUS cte
    (101) factor_aux -> . MINUS cte
    (102) cte -> . ID push_var
    (103) cte -> . ID var_aux push_var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 135
    ID              shift and go to state 127
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    CTEI            shift and go to state 139
    CTEF            shift and go to state 140
    CTECHAR         shift and go to state 141

    l_exp                          shift and go to state 129
    exp                            shift and go to state 248
    a_exp                          shift and go to state 130
    term                           shift and go to state 131
    factor                         shift and go to state 134
    call                           shift and go to state 136
    factor_aux                     shift and go to state 137
    cte                            shift and go to state 138

state 228

    (87) exp -> l_exp pop_op_lop AND push_op . exp
    (85) exp -> . l_exp pop_op_lop
    (86) exp -> . l_exp pop_op_lop OR push_op exp
    (87) exp -> . l_exp pop_op_lop AND push_op exp
    (88) l_exp -> . a_exp
    (89) l_exp -> . a_exp RELOP push_op a_exp pop_op_relop
    (90) a_exp -> . term pop_op_art_n2
    (91) a_exp -> . term pop_op_art_n2 PLUS push_op a_exp
    (92) a_exp -> . term pop_op_art_n2 MINUS push_op a_exp
    (93) term -> . factor pop_op_art_n1
    (94) term -> . factor pop_op_art_n1 TIMES push_op term
    (95) term -> . factor pop_op_art_n1 DIVIDE push_op term
    (96) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (97) factor -> . call
    (98) factor -> . factor_aux
    (65) call -> . ID LPAREN RPAREN
    (66) call -> . ID POINT ID LPAREN RPAREN
    (67) call -> . ID LPAREN call_aux RPAREN
    (68) call -> . ID POINT ID LPAREN call_aux RPAREN
    (99) factor_aux -> . cte
    (100) factor_aux -> . PLUS cte
    (101) factor_aux -> . MINUS cte
    (102) cte -> . ID push_var
    (103) cte -> . ID var_aux push_var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 135
    ID              shift and go to state 127
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    CTEI            shift and go to state 139
    CTEF            shift and go to state 140
    CTECHAR         shift and go to state 141

    l_exp                          shift and go to state 129
    exp                            shift and go to state 249
    a_exp                          shift and go to state 130
    term                           shift and go to state 131
    factor                         shift and go to state 134
    call                           shift and go to state 136
    factor_aux                     shift and go to state 137
    cte                            shift and go to state 138

state 229

    (89) l_exp -> a_exp RELOP push_op a_exp . pop_op_relop
    (123) pop_op_relop -> .

    OR              reduce using rule 123 (pop_op_relop -> .)
    AND             reduce using rule 123 (pop_op_relop -> .)
    SEMICOLON       reduce using rule 123 (pop_op_relop -> .)
    RPAREN          reduce using rule 123 (pop_op_relop -> .)
    RBRACKET        reduce using rule 123 (pop_op_relop -> .)
    COMMA           reduce using rule 123 (pop_op_relop -> .)

    pop_op_relop                   shift and go to state 250

state 230

    (91) a_exp -> term pop_op_art_n2 PLUS push_op . a_exp
    (90) a_exp -> . term pop_op_art_n2
    (91) a_exp -> . term pop_op_art_n2 PLUS push_op a_exp
    (92) a_exp -> . term pop_op_art_n2 MINUS push_op a_exp
    (93) term -> . factor pop_op_art_n1
    (94) term -> . factor pop_op_art_n1 TIMES push_op term
    (95) term -> . factor pop_op_art_n1 DIVIDE push_op term
    (96) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (97) factor -> . call
    (98) factor -> . factor_aux
    (65) call -> . ID LPAREN RPAREN
    (66) call -> . ID POINT ID LPAREN RPAREN
    (67) call -> . ID LPAREN call_aux RPAREN
    (68) call -> . ID POINT ID LPAREN call_aux RPAREN
    (99) factor_aux -> . cte
    (100) factor_aux -> . PLUS cte
    (101) factor_aux -> . MINUS cte
    (102) cte -> . ID push_var
    (103) cte -> . ID var_aux push_var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 135
    ID              shift and go to state 127
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    CTEI            shift and go to state 139
    CTEF            shift and go to state 140
    CTECHAR         shift and go to state 141

    term                           shift and go to state 131
    a_exp                          shift and go to state 251
    factor                         shift and go to state 134
    call                           shift and go to state 136
    factor_aux                     shift and go to state 137
    cte                            shift and go to state 138

state 231

    (92) a_exp -> term pop_op_art_n2 MINUS push_op . a_exp
    (90) a_exp -> . term pop_op_art_n2
    (91) a_exp -> . term pop_op_art_n2 PLUS push_op a_exp
    (92) a_exp -> . term pop_op_art_n2 MINUS push_op a_exp
    (93) term -> . factor pop_op_art_n1
    (94) term -> . factor pop_op_art_n1 TIMES push_op term
    (95) term -> . factor pop_op_art_n1 DIVIDE push_op term
    (96) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (97) factor -> . call
    (98) factor -> . factor_aux
    (65) call -> . ID LPAREN RPAREN
    (66) call -> . ID POINT ID LPAREN RPAREN
    (67) call -> . ID LPAREN call_aux RPAREN
    (68) call -> . ID POINT ID LPAREN call_aux RPAREN
    (99) factor_aux -> . cte
    (100) factor_aux -> . PLUS cte
    (101) factor_aux -> . MINUS cte
    (102) cte -> . ID push_var
    (103) cte -> . ID var_aux push_var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 135
    ID              shift and go to state 127
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    CTEI            shift and go to state 139
    CTEF            shift and go to state 140
    CTECHAR         shift and go to state 141

    term                           shift and go to state 131
    a_exp                          shift and go to state 252
    factor                         shift and go to state 134
    call                           shift and go to state 136
    factor_aux                     shift and go to state 137
    cte                            shift and go to state 138

state 232

    (94) term -> factor pop_op_art_n1 TIMES push_op . term
    (93) term -> . factor pop_op_art_n1
    (94) term -> . factor pop_op_art_n1 TIMES push_op term
    (95) term -> . factor pop_op_art_n1 DIVIDE push_op term
    (96) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (97) factor -> . call
    (98) factor -> . factor_aux
    (65) call -> . ID LPAREN RPAREN
    (66) call -> . ID POINT ID LPAREN RPAREN
    (67) call -> . ID LPAREN call_aux RPAREN
    (68) call -> . ID POINT ID LPAREN call_aux RPAREN
    (99) factor_aux -> . cte
    (100) factor_aux -> . PLUS cte
    (101) factor_aux -> . MINUS cte
    (102) cte -> . ID push_var
    (103) cte -> . ID var_aux push_var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 135
    ID              shift and go to state 127
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    CTEI            shift and go to state 139
    CTEF            shift and go to state 140
    CTECHAR         shift and go to state 141

    factor                         shift and go to state 134
    term                           shift and go to state 253
    call                           shift and go to state 136
    factor_aux                     shift and go to state 137
    cte                            shift and go to state 138

state 233

    (95) term -> factor pop_op_art_n1 DIVIDE push_op . term
    (93) term -> . factor pop_op_art_n1
    (94) term -> . factor pop_op_art_n1 TIMES push_op term
    (95) term -> . factor pop_op_art_n1 DIVIDE push_op term
    (96) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (97) factor -> . call
    (98) factor -> . factor_aux
    (65) call -> . ID LPAREN RPAREN
    (66) call -> . ID POINT ID LPAREN RPAREN
    (67) call -> . ID LPAREN call_aux RPAREN
    (68) call -> . ID POINT ID LPAREN call_aux RPAREN
    (99) factor_aux -> . cte
    (100) factor_aux -> . PLUS cte
    (101) factor_aux -> . MINUS cte
    (102) cte -> . ID push_var
    (103) cte -> . ID var_aux push_var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 135
    ID              shift and go to state 127
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    CTEI            shift and go to state 139
    CTEF            shift and go to state 140
    CTECHAR         shift and go to state 141

    factor                         shift and go to state 134
    term                           shift and go to state 254
    call                           shift and go to state 136
    factor_aux                     shift and go to state 137
    cte                            shift and go to state 138

state 234

    (96) factor -> LPAREN push_paren exp RPAREN . pop_paren
    (126) pop_paren -> .

    TIMES           reduce using rule 126 (pop_paren -> .)
    DIVIDE          reduce using rule 126 (pop_paren -> .)
    PLUS            reduce using rule 126 (pop_paren -> .)
    MINUS           reduce using rule 126 (pop_paren -> .)
    RELOP           reduce using rule 126 (pop_paren -> .)
    OR              reduce using rule 126 (pop_paren -> .)
    AND             reduce using rule 126 (pop_paren -> .)
    SEMICOLON       reduce using rule 126 (pop_paren -> .)
    RPAREN          reduce using rule 126 (pop_paren -> .)
    RBRACKET        reduce using rule 126 (pop_paren -> .)
    COMMA           reduce using rule 126 (pop_paren -> .)

    pop_paren                      shift and go to state 255

state 235

    (64) var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp . RBRACKET

    RBRACKET        shift and go to state 256


state 236

    (72) condition_aux -> LPAREN exp RPAREN THEN LBRACE . statutes_aux RBRACE condition_aux_3
    (74) condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE . statutes_aux RBRACE ELIF condition_aux
    (56) statutes_aux -> . statutes
    (57) statutes_aux -> . statutes statutes_aux
    (49) statutes -> . assignation SEMICOLON
    (50) statutes -> . CALL call SEMICOLON
    (51) statutes -> . read
    (52) statutes -> . write
    (53) statutes -> . condition
    (54) statutes -> . while
    (55) statutes -> . for
    (58) assignation -> . ID EQUAL exp
    (59) assignation -> . ID var_aux EQUAL exp
    (77) read -> . READ LPAREN ID RPAREN SEMICOLON
    (78) write -> . WRITE LPAREN write_aux RPAREN SEMICOLON
    (71) condition -> . IF condition_aux
    (83) while -> . WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (84) for -> . FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    CALL            shift and go to state 75
    ID              shift and go to state 81
    READ            shift and go to state 82
    WRITE           shift and go to state 83
    IF              shift and go to state 84
    WHILE           shift and go to state 85
    FROM            shift and go to state 86

    statutes_aux                   shift and go to state 257
    statutes                       shift and go to state 73
    assignation                    shift and go to state 74
    read                           shift and go to state 76
    write                          shift and go to state 77
    condition                      shift and go to state 78
    while                          shift and go to state 79
    for                            shift and go to state 80

state 237

    (83) while -> WHILE LPAREN exp RPAREN DO LBRACE . statutes_aux RBRACE
    (56) statutes_aux -> . statutes
    (57) statutes_aux -> . statutes statutes_aux
    (49) statutes -> . assignation SEMICOLON
    (50) statutes -> . CALL call SEMICOLON
    (51) statutes -> . read
    (52) statutes -> . write
    (53) statutes -> . condition
    (54) statutes -> . while
    (55) statutes -> . for
    (58) assignation -> . ID EQUAL exp
    (59) assignation -> . ID var_aux EQUAL exp
    (77) read -> . READ LPAREN ID RPAREN SEMICOLON
    (78) write -> . WRITE LPAREN write_aux RPAREN SEMICOLON
    (71) condition -> . IF condition_aux
    (83) while -> . WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (84) for -> . FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    CALL            shift and go to state 75
    ID              shift and go to state 81
    READ            shift and go to state 82
    WRITE           shift and go to state 83
    IF              shift and go to state 84
    WHILE           shift and go to state 85
    FROM            shift and go to state 86

    statutes_aux                   shift and go to state 258
    statutes                       shift and go to state 73
    assignation                    shift and go to state 74
    read                           shift and go to state 76
    write                          shift and go to state 77
    condition                      shift and go to state 78
    while                          shift and go to state 79
    for                            shift and go to state 80

state 238

    (84) for -> FROM LPAREN assignation RPAREN UNTIL LPAREN . exp RPAREN DO LBRACE statutes_aux RBRACE
    (85) exp -> . l_exp pop_op_lop
    (86) exp -> . l_exp pop_op_lop OR push_op exp
    (87) exp -> . l_exp pop_op_lop AND push_op exp
    (88) l_exp -> . a_exp
    (89) l_exp -> . a_exp RELOP push_op a_exp pop_op_relop
    (90) a_exp -> . term pop_op_art_n2
    (91) a_exp -> . term pop_op_art_n2 PLUS push_op a_exp
    (92) a_exp -> . term pop_op_art_n2 MINUS push_op a_exp
    (93) term -> . factor pop_op_art_n1
    (94) term -> . factor pop_op_art_n1 TIMES push_op term
    (95) term -> . factor pop_op_art_n1 DIVIDE push_op term
    (96) factor -> . LPAREN push_paren exp RPAREN pop_paren
    (97) factor -> . call
    (98) factor -> . factor_aux
    (65) call -> . ID LPAREN RPAREN
    (66) call -> . ID POINT ID LPAREN RPAREN
    (67) call -> . ID LPAREN call_aux RPAREN
    (68) call -> . ID POINT ID LPAREN call_aux RPAREN
    (99) factor_aux -> . cte
    (100) factor_aux -> . PLUS cte
    (101) factor_aux -> . MINUS cte
    (102) cte -> . ID push_var
    (103) cte -> . ID var_aux push_var
    (104) cte -> . CTEI push_var
    (105) cte -> . CTEF push_var
    (106) cte -> . CTECHAR push_var

    LPAREN          shift and go to state 135
    ID              shift and go to state 127
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    CTEI            shift and go to state 139
    CTEF            shift and go to state 140
    CTECHAR         shift and go to state 141

    exp                            shift and go to state 259
    l_exp                          shift and go to state 129
    a_exp                          shift and go to state 130
    term                           shift and go to state 131
    factor                         shift and go to state 134
    call                           shift and go to state 136
    factor_aux                     shift and go to state 137
    cte                            shift and go to state 138

state 239

    (22) vars_simple_type_aux -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET add_matrix_variable .

    COMMA           reduce using rule 22 (vars_simple_type_aux -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET add_matrix_variable .)
    SEMICOLON       reduce using rule 22 (vars_simple_type_aux -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET add_matrix_variable .)


state 240

    (45) body -> LBRACE dec_vars statutes_aux RBRACE .

    FUNCT           reduce using rule 45 (body -> LBRACE dec_vars statutes_aux RBRACE .)
    RBRACE          reduce using rule 45 (body -> LBRACE dec_vars statutes_aux RBRACE .)
    INIT            reduce using rule 45 (body -> LBRACE dec_vars statutes_aux RBRACE .)


state 241

    (48) body -> LBRACE dec_vars statutes_aux RETURN . ID SEMICOLON RBRACE

    ID              shift and go to state 260


state 242

    (47) body -> LBRACE statutes_aux RETURN ID . SEMICOLON RBRACE

    SEMICOLON       shift and go to state 261


state 243

    (40) params -> simple_type ID add_variable COMMA params .

    RPAREN          reduce using rule 40 (params -> simple_type ID add_variable COMMA params .)


state 244

    (42) params -> simple_type ID params_aux COMMA params .

    RPAREN          reduce using rule 42 (params -> simple_type ID params_aux COMMA params .)


state 245

    (44) params_aux -> LBRACKET RBRACKET LBRACKET . RBRACKET add_matrix_var_params

    RBRACKET        shift and go to state 262


state 246

    (43) params_aux -> LBRACKET RBRACKET add_array_var_params .

    COMMA           reduce using rule 43 (params_aux -> LBRACKET RBRACKET add_array_var_params .)
    RPAREN          reduce using rule 43 (params_aux -> LBRACKET RBRACKET add_array_var_params .)


state 247

    (68) call -> ID POINT ID LPAREN call_aux RPAREN .

    SEMICOLON       reduce using rule 68 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    TIMES           reduce using rule 68 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    DIVIDE          reduce using rule 68 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    PLUS            reduce using rule 68 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    MINUS           reduce using rule 68 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    RELOP           reduce using rule 68 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    OR              reduce using rule 68 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    AND             reduce using rule 68 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    RPAREN          reduce using rule 68 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    RBRACKET        reduce using rule 68 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    COMMA           reduce using rule 68 (call -> ID POINT ID LPAREN call_aux RPAREN .)


state 248

    (86) exp -> l_exp pop_op_lop OR push_op exp .

    SEMICOLON       reduce using rule 86 (exp -> l_exp pop_op_lop OR push_op exp .)
    RPAREN          reduce using rule 86 (exp -> l_exp pop_op_lop OR push_op exp .)
    RBRACKET        reduce using rule 86 (exp -> l_exp pop_op_lop OR push_op exp .)
    COMMA           reduce using rule 86 (exp -> l_exp pop_op_lop OR push_op exp .)


state 249

    (87) exp -> l_exp pop_op_lop AND push_op exp .

    SEMICOLON       reduce using rule 87 (exp -> l_exp pop_op_lop AND push_op exp .)
    RPAREN          reduce using rule 87 (exp -> l_exp pop_op_lop AND push_op exp .)
    RBRACKET        reduce using rule 87 (exp -> l_exp pop_op_lop AND push_op exp .)
    COMMA           reduce using rule 87 (exp -> l_exp pop_op_lop AND push_op exp .)


state 250

    (89) l_exp -> a_exp RELOP push_op a_exp pop_op_relop .

    OR              reduce using rule 89 (l_exp -> a_exp RELOP push_op a_exp pop_op_relop .)
    AND             reduce using rule 89 (l_exp -> a_exp RELOP push_op a_exp pop_op_relop .)
    SEMICOLON       reduce using rule 89 (l_exp -> a_exp RELOP push_op a_exp pop_op_relop .)
    RPAREN          reduce using rule 89 (l_exp -> a_exp RELOP push_op a_exp pop_op_relop .)
    RBRACKET        reduce using rule 89 (l_exp -> a_exp RELOP push_op a_exp pop_op_relop .)
    COMMA           reduce using rule 89 (l_exp -> a_exp RELOP push_op a_exp pop_op_relop .)


state 251

    (91) a_exp -> term pop_op_art_n2 PLUS push_op a_exp .

    RELOP           reduce using rule 91 (a_exp -> term pop_op_art_n2 PLUS push_op a_exp .)
    OR              reduce using rule 91 (a_exp -> term pop_op_art_n2 PLUS push_op a_exp .)
    AND             reduce using rule 91 (a_exp -> term pop_op_art_n2 PLUS push_op a_exp .)
    SEMICOLON       reduce using rule 91 (a_exp -> term pop_op_art_n2 PLUS push_op a_exp .)
    RPAREN          reduce using rule 91 (a_exp -> term pop_op_art_n2 PLUS push_op a_exp .)
    RBRACKET        reduce using rule 91 (a_exp -> term pop_op_art_n2 PLUS push_op a_exp .)
    COMMA           reduce using rule 91 (a_exp -> term pop_op_art_n2 PLUS push_op a_exp .)


state 252

    (92) a_exp -> term pop_op_art_n2 MINUS push_op a_exp .

    RELOP           reduce using rule 92 (a_exp -> term pop_op_art_n2 MINUS push_op a_exp .)
    OR              reduce using rule 92 (a_exp -> term pop_op_art_n2 MINUS push_op a_exp .)
    AND             reduce using rule 92 (a_exp -> term pop_op_art_n2 MINUS push_op a_exp .)
    SEMICOLON       reduce using rule 92 (a_exp -> term pop_op_art_n2 MINUS push_op a_exp .)
    RPAREN          reduce using rule 92 (a_exp -> term pop_op_art_n2 MINUS push_op a_exp .)
    RBRACKET        reduce using rule 92 (a_exp -> term pop_op_art_n2 MINUS push_op a_exp .)
    COMMA           reduce using rule 92 (a_exp -> term pop_op_art_n2 MINUS push_op a_exp .)


state 253

    (94) term -> factor pop_op_art_n1 TIMES push_op term .

    PLUS            reduce using rule 94 (term -> factor pop_op_art_n1 TIMES push_op term .)
    MINUS           reduce using rule 94 (term -> factor pop_op_art_n1 TIMES push_op term .)
    RELOP           reduce using rule 94 (term -> factor pop_op_art_n1 TIMES push_op term .)
    OR              reduce using rule 94 (term -> factor pop_op_art_n1 TIMES push_op term .)
    AND             reduce using rule 94 (term -> factor pop_op_art_n1 TIMES push_op term .)
    SEMICOLON       reduce using rule 94 (term -> factor pop_op_art_n1 TIMES push_op term .)
    RPAREN          reduce using rule 94 (term -> factor pop_op_art_n1 TIMES push_op term .)
    RBRACKET        reduce using rule 94 (term -> factor pop_op_art_n1 TIMES push_op term .)
    COMMA           reduce using rule 94 (term -> factor pop_op_art_n1 TIMES push_op term .)


state 254

    (95) term -> factor pop_op_art_n1 DIVIDE push_op term .

    PLUS            reduce using rule 95 (term -> factor pop_op_art_n1 DIVIDE push_op term .)
    MINUS           reduce using rule 95 (term -> factor pop_op_art_n1 DIVIDE push_op term .)
    RELOP           reduce using rule 95 (term -> factor pop_op_art_n1 DIVIDE push_op term .)
    OR              reduce using rule 95 (term -> factor pop_op_art_n1 DIVIDE push_op term .)
    AND             reduce using rule 95 (term -> factor pop_op_art_n1 DIVIDE push_op term .)
    SEMICOLON       reduce using rule 95 (term -> factor pop_op_art_n1 DIVIDE push_op term .)
    RPAREN          reduce using rule 95 (term -> factor pop_op_art_n1 DIVIDE push_op term .)
    RBRACKET        reduce using rule 95 (term -> factor pop_op_art_n1 DIVIDE push_op term .)
    COMMA           reduce using rule 95 (term -> factor pop_op_art_n1 DIVIDE push_op term .)


state 255

    (96) factor -> LPAREN push_paren exp RPAREN pop_paren .

    TIMES           reduce using rule 96 (factor -> LPAREN push_paren exp RPAREN pop_paren .)
    DIVIDE          reduce using rule 96 (factor -> LPAREN push_paren exp RPAREN pop_paren .)
    PLUS            reduce using rule 96 (factor -> LPAREN push_paren exp RPAREN pop_paren .)
    MINUS           reduce using rule 96 (factor -> LPAREN push_paren exp RPAREN pop_paren .)
    RELOP           reduce using rule 96 (factor -> LPAREN push_paren exp RPAREN pop_paren .)
    OR              reduce using rule 96 (factor -> LPAREN push_paren exp RPAREN pop_paren .)
    AND             reduce using rule 96 (factor -> LPAREN push_paren exp RPAREN pop_paren .)
    SEMICOLON       reduce using rule 96 (factor -> LPAREN push_paren exp RPAREN pop_paren .)
    RPAREN          reduce using rule 96 (factor -> LPAREN push_paren exp RPAREN pop_paren .)
    RBRACKET        reduce using rule 96 (factor -> LPAREN push_paren exp RPAREN pop_paren .)
    COMMA           reduce using rule 96 (factor -> LPAREN push_paren exp RPAREN pop_paren .)


state 256

    (64) var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .

    EQUAL           reduce using rule 64 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    TIMES           reduce using rule 64 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    DIVIDE          reduce using rule 64 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 64 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    MINUS           reduce using rule 64 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    RELOP           reduce using rule 64 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    OR              reduce using rule 64 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    AND             reduce using rule 64 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 64 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    RPAREN          reduce using rule 64 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    RBRACKET        reduce using rule 64 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    COMMA           reduce using rule 64 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)


state 257

    (72) condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux . RBRACE condition_aux_3
    (74) condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux . RBRACE ELIF condition_aux

    RBRACE          shift and go to state 263


state 258

    (83) while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux . RBRACE

    RBRACE          shift and go to state 264


state 259

    (84) for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp . RPAREN DO LBRACE statutes_aux RBRACE

    RPAREN          shift and go to state 265


state 260

    (48) body -> LBRACE dec_vars statutes_aux RETURN ID . SEMICOLON RBRACE

    SEMICOLON       shift and go to state 266


state 261

    (47) body -> LBRACE statutes_aux RETURN ID SEMICOLON . RBRACE

    RBRACE          shift and go to state 267


state 262

    (44) params_aux -> LBRACKET RBRACKET LBRACKET RBRACKET . add_matrix_var_params
    (114) add_matrix_var_params -> .

    COMMA           reduce using rule 114 (add_matrix_var_params -> .)
    RPAREN          reduce using rule 114 (add_matrix_var_params -> .)

    add_matrix_var_params          shift and go to state 268

state 263

    (72) condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE . condition_aux_3
    (74) condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE . ELIF condition_aux
    (75) condition_aux_3 -> . ELSE LBRACE statutes_aux RBRACE
    (76) condition_aux_3 -> . empty
    (109) empty -> .

    ELIF            shift and go to state 270
    ELSE            shift and go to state 271
    CALL            reduce using rule 109 (empty -> .)
    ID              reduce using rule 109 (empty -> .)
    READ            reduce using rule 109 (empty -> .)
    WRITE           reduce using rule 109 (empty -> .)
    IF              reduce using rule 109 (empty -> .)
    WHILE           reduce using rule 109 (empty -> .)
    FROM            reduce using rule 109 (empty -> .)
    RBRACE          reduce using rule 109 (empty -> .)
    RETURN          reduce using rule 109 (empty -> .)

    condition_aux_3                shift and go to state 269
    empty                          shift and go to state 272

state 264

    (83) while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .

    CALL            reduce using rule 83 (while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    ID              reduce using rule 83 (while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    READ            reduce using rule 83 (while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    WRITE           reduce using rule 83 (while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    IF              reduce using rule 83 (while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    WHILE           reduce using rule 83 (while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    FROM            reduce using rule 83 (while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    RBRACE          reduce using rule 83 (while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    RETURN          reduce using rule 83 (while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)


state 265

    (84) for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN . DO LBRACE statutes_aux RBRACE

    DO              shift and go to state 273


state 266

    (48) body -> LBRACE dec_vars statutes_aux RETURN ID SEMICOLON . RBRACE

    RBRACE          shift and go to state 274


state 267

    (47) body -> LBRACE statutes_aux RETURN ID SEMICOLON RBRACE .

    FUNCT           reduce using rule 47 (body -> LBRACE statutes_aux RETURN ID SEMICOLON RBRACE .)
    RBRACE          reduce using rule 47 (body -> LBRACE statutes_aux RETURN ID SEMICOLON RBRACE .)
    INIT            reduce using rule 47 (body -> LBRACE statutes_aux RETURN ID SEMICOLON RBRACE .)


state 268

    (44) params_aux -> LBRACKET RBRACKET LBRACKET RBRACKET add_matrix_var_params .

    COMMA           reduce using rule 44 (params_aux -> LBRACKET RBRACKET LBRACKET RBRACKET add_matrix_var_params .)
    RPAREN          reduce using rule 44 (params_aux -> LBRACKET RBRACKET LBRACKET RBRACKET add_matrix_var_params .)


state 269

    (72) condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .

    CALL            reduce using rule 72 (condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .)
    ID              reduce using rule 72 (condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .)
    READ            reduce using rule 72 (condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .)
    WRITE           reduce using rule 72 (condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .)
    IF              reduce using rule 72 (condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .)
    WHILE           reduce using rule 72 (condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .)
    FROM            reduce using rule 72 (condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .)
    RBRACE          reduce using rule 72 (condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .)
    RETURN          reduce using rule 72 (condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .)


state 270

    (74) condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF . condition_aux
    (72) condition_aux -> . LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3
    (73) condition_aux -> . condition_aux_2
    (74) condition_aux_2 -> . LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux

    LPAREN          shift and go to state 110

    condition_aux                  shift and go to state 275
    condition_aux_2                shift and go to state 111

state 271

    (75) condition_aux_3 -> ELSE . LBRACE statutes_aux RBRACE

    LBRACE          shift and go to state 276


state 272

    (76) condition_aux_3 -> empty .

    CALL            reduce using rule 76 (condition_aux_3 -> empty .)
    ID              reduce using rule 76 (condition_aux_3 -> empty .)
    READ            reduce using rule 76 (condition_aux_3 -> empty .)
    WRITE           reduce using rule 76 (condition_aux_3 -> empty .)
    IF              reduce using rule 76 (condition_aux_3 -> empty .)
    WHILE           reduce using rule 76 (condition_aux_3 -> empty .)
    FROM            reduce using rule 76 (condition_aux_3 -> empty .)
    RBRACE          reduce using rule 76 (condition_aux_3 -> empty .)
    RETURN          reduce using rule 76 (condition_aux_3 -> empty .)


state 273

    (84) for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO . LBRACE statutes_aux RBRACE

    LBRACE          shift and go to state 277


state 274

    (48) body -> LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE .

    FUNCT           reduce using rule 48 (body -> LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE .)
    RBRACE          reduce using rule 48 (body -> LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE .)
    INIT            reduce using rule 48 (body -> LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE .)


state 275

    (74) condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .

    CALL            reduce using rule 74 (condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .)
    ID              reduce using rule 74 (condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .)
    READ            reduce using rule 74 (condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .)
    WRITE           reduce using rule 74 (condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .)
    IF              reduce using rule 74 (condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .)
    WHILE           reduce using rule 74 (condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .)
    FROM            reduce using rule 74 (condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .)
    RBRACE          reduce using rule 74 (condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .)
    RETURN          reduce using rule 74 (condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .)


state 276

    (75) condition_aux_3 -> ELSE LBRACE . statutes_aux RBRACE
    (56) statutes_aux -> . statutes
    (57) statutes_aux -> . statutes statutes_aux
    (49) statutes -> . assignation SEMICOLON
    (50) statutes -> . CALL call SEMICOLON
    (51) statutes -> . read
    (52) statutes -> . write
    (53) statutes -> . condition
    (54) statutes -> . while
    (55) statutes -> . for
    (58) assignation -> . ID EQUAL exp
    (59) assignation -> . ID var_aux EQUAL exp
    (77) read -> . READ LPAREN ID RPAREN SEMICOLON
    (78) write -> . WRITE LPAREN write_aux RPAREN SEMICOLON
    (71) condition -> . IF condition_aux
    (83) while -> . WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (84) for -> . FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    CALL            shift and go to state 75
    ID              shift and go to state 81
    READ            shift and go to state 82
    WRITE           shift and go to state 83
    IF              shift and go to state 84
    WHILE           shift and go to state 85
    FROM            shift and go to state 86

    statutes_aux                   shift and go to state 278
    statutes                       shift and go to state 73
    assignation                    shift and go to state 74
    read                           shift and go to state 76
    write                          shift and go to state 77
    condition                      shift and go to state 78
    while                          shift and go to state 79
    for                            shift and go to state 80

state 277

    (84) for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE . statutes_aux RBRACE
    (56) statutes_aux -> . statutes
    (57) statutes_aux -> . statutes statutes_aux
    (49) statutes -> . assignation SEMICOLON
    (50) statutes -> . CALL call SEMICOLON
    (51) statutes -> . read
    (52) statutes -> . write
    (53) statutes -> . condition
    (54) statutes -> . while
    (55) statutes -> . for
    (58) assignation -> . ID EQUAL exp
    (59) assignation -> . ID var_aux EQUAL exp
    (77) read -> . READ LPAREN ID RPAREN SEMICOLON
    (78) write -> . WRITE LPAREN write_aux RPAREN SEMICOLON
    (71) condition -> . IF condition_aux
    (83) while -> . WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (84) for -> . FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    CALL            shift and go to state 75
    ID              shift and go to state 81
    READ            shift and go to state 82
    WRITE           shift and go to state 83
    IF              shift and go to state 84
    WHILE           shift and go to state 85
    FROM            shift and go to state 86

    assignation                    shift and go to state 74
    statutes_aux                   shift and go to state 279
    statutes                       shift and go to state 73
    read                           shift and go to state 76
    write                          shift and go to state 77
    condition                      shift and go to state 78
    while                          shift and go to state 79
    for                            shift and go to state 80

state 278

    (75) condition_aux_3 -> ELSE LBRACE statutes_aux . RBRACE

    RBRACE          shift and go to state 280


state 279

    (84) for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux . RBRACE

    RBRACE          shift and go to state 281


state 280

    (75) condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .

    CALL            reduce using rule 75 (condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .)
    ID              reduce using rule 75 (condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .)
    READ            reduce using rule 75 (condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .)
    WRITE           reduce using rule 75 (condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .)
    IF              reduce using rule 75 (condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .)
    WHILE           reduce using rule 75 (condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .)
    FROM            reduce using rule 75 (condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .)
    RBRACE          reduce using rule 75 (condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .)
    RETURN          reduce using rule 75 (condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .)


state 281

    (84) for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .

    CALL            reduce using rule 84 (for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    ID              reduce using rule 84 (for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    READ            reduce using rule 84 (for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    WRITE           reduce using rule 84 (for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    IF              reduce using rule 84 (for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    WHILE           reduce using rule 84 (for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    FROM            reduce using rule 84 (for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    RBRACE          reduce using rule 84 (for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    RETURN          reduce using rule 84 (for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)

