Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> program_body_class PROGRAM ID TWOPOINTS program_body main END
Rule 2     program_body -> program_body_vars program_body_funct
Rule 3     program_body_vars -> dec_vars
Rule 4     program_body_vars -> empty
Rule 5     program_body_class -> classes
Rule 6     program_body_class -> empty
Rule 7     program_body_funct -> functions
Rule 8     program_body_funct -> empty
Rule 9     dec_vars -> VAR dec_vars_aux
Rule 10    dec_vars_aux -> simple_type vars_simple_type SEMICOLON
Rule 11    dec_vars_aux -> simple_type vars_simple_type SEMICOLON dec_vars_aux
Rule 12    dec_vars_aux -> complex_type vars_complex_type SEMICOLON
Rule 13    dec_vars_aux -> complex_type vars_complex_type SEMICOLON dec_vars_aux
Rule 14    vars_complex_type -> ID
Rule 15    vars_complex_type -> ID COMMA vars_complex_type
Rule 16    vars_simple_type -> ID
Rule 17    vars_simple_type -> ID COMMA vars_simple_type
Rule 18    vars_simple_type -> ID vars_simple_type_aux
Rule 19    vars_simple_type -> ID vars_simple_type_aux COMMA vars_simple_type
Rule 20    vars_simple_type_aux -> LBRACKET CTEI RBRACKET
Rule 21    vars_simple_type_aux -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET
Rule 22    simple_type -> INT
Rule 23    simple_type -> FLOAT
Rule 24    simple_type -> CHAR
Rule 25    complex_type -> ID
Rule 26    classes -> CLASS ID classes_aux
Rule 27    classes -> CLASS ID classes_aux classes
Rule 28    classes_aux -> LBRACE dec_vars functions RBRACE
Rule 29    classes_aux -> LBRACE functions RBRACE
Rule 30    classes_aux -> INHERITS ID LBRACE dec_vars functions RBRACE
Rule 31    classes_aux -> INHERITS ID LBRACE functions RBRACE
Rule 32    functions -> FUNCT functions_aux
Rule 33    functions -> FUNCT functions_aux functions
Rule 34    functions_aux -> VOID ID LPAREN params RPAREN body
Rule 35    functions_aux -> VOID ID LPAREN RPAREN body
Rule 36    functions_aux -> simple_type ID LPAREN RPAREN body
Rule 37    functions_aux -> simple_type ID LPAREN params RPAREN body
Rule 38    params -> simple_type ID
Rule 39    params -> simple_type ID COMMA params
Rule 40    body -> LBRACE dec_vars statutes_aux RBRACE
Rule 41    body -> LBRACE statutes_aux RBRACE
Rule 42    body -> LBRACE statutes_aux RETURN ID SEMICOLON RBRACE
Rule 43    body -> LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE
Rule 44    statutes -> ASSIGN assignation SEMICOLON
Rule 45    statutes -> CALL call SEMICOLON
Rule 46    statutes -> read
Rule 47    statutes -> write
Rule 48    statutes -> condition
Rule 49    statutes -> while
Rule 50    statutes -> for
Rule 51    statutes_aux -> statutes
Rule 52    statutes_aux -> statutes statutes_aux
Rule 53    assignation -> var EQUAL exp
Rule 54    var -> ID
Rule 55    var -> ID var_aux
Rule 56    var_aux -> POINT ID
Rule 57    var_aux -> POINT ID var_aux_2
Rule 58    var_aux -> var_aux_2
Rule 59    var_aux_2 -> LBRACKET exp RBRACKET
Rule 60    var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET
Rule 61    call -> ID LPAREN RPAREN
Rule 62    call -> ID POINT ID LPAREN RPAREN
Rule 63    call -> ID LPAREN call_aux RPAREN
Rule 64    call -> ID POINT ID LPAREN call_aux RPAREN
Rule 65    call_aux -> exp
Rule 66    call_aux -> exp COMMA call_aux
Rule 67    condition -> IF condition_aux
Rule 68    condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3
Rule 69    condition_aux -> condition_aux_2
Rule 70    condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux
Rule 71    condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE
Rule 72    condition_aux_3 -> empty
Rule 73    read -> READ LPAREN var RPAREN SEMICOLON
Rule 74    write -> WRITE LPAREN write_aux RPAREN SEMICOLON
Rule 75    write_aux -> exp
Rule 76    write_aux -> exp COMMA write_aux
Rule 77    write_aux -> CTESTRING
Rule 78    write_aux -> CTESTRING COMMA write_aux
Rule 79    while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
Rule 80    for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
Rule 81    exp -> n_exp
Rule 82    exp -> n_exp OR exp
Rule 83    n_exp -> l_exp
Rule 84    n_exp -> l_exp AND n_exp
Rule 85    l_exp -> a_exp
Rule 86    l_exp -> a_exp RELOP a_exp
Rule 87    a_exp -> term
Rule 88    a_exp -> term PLUS a_exp
Rule 89    a_exp -> term MINUS a_exp
Rule 90    term -> factor
Rule 91    term -> factor TIMES term
Rule 92    term -> factor DIVIDE term
Rule 93    factor -> LPAREN exp RPAREN
Rule 94    factor -> var
Rule 95    factor -> call
Rule 96    factor -> factor_aux
Rule 97    factor_aux -> cte
Rule 98    factor_aux -> PLUS cte
Rule 99    factor_aux -> MINUS cte
Rule 100   cte -> ID
Rule 101   cte -> CTEI
Rule 102   cte -> CTEF
Rule 103   cte -> CTECHAR
Rule 104   main -> MAIN LBRACE statutes_aux RBRACE
Rule 105   main -> MAIN LBRACE dec_vars statutes_aux RBRACE
Rule 106   empty -> <empty>

Terminals, with rules where they appear

AND                  : 84
ASSIGN               : 44
CALL                 : 45
CHAR                 : 24
CLASS                : 26 27
COMMA                : 15 17 19 39 66 76 78
CTECHAR              : 103
CTEF                 : 102
CTEI                 : 20 21 21 101
CTESTRING            : 77 78
DIVIDE               : 92
DO                   : 79 80
ELIF                 : 70
ELSE                 : 71
END                  : 1
EQUAL                : 53
FLOAT                : 23
FROM                 : 80
FUNCT                : 32 33
ID                   : 1 14 15 16 17 18 19 25 26 27 30 31 34 35 36 37 38 39 42 43 54 55 56 57 61 62 62 63 64 64 100
IF                   : 67
INHERITS             : 30 31
INT                  : 22
LBRACE               : 28 29 30 31 40 41 42 43 68 70 71 79 80 104 105
LBRACKET             : 20 21 21 59 60 60
LPAREN               : 34 35 36 37 61 62 63 64 68 70 73 74 79 80 80 93
MAIN                 : 104 105
MINUS                : 89 99
OR                   : 82
PLUS                 : 88 98
POINT                : 56 57 62 64
PROGRAM              : 1
RBRACE               : 28 29 30 31 40 41 42 43 68 70 71 79 80 104 105
RBRACKET             : 20 21 21 59 60 60
READ                 : 73
RELOP                : 86
RETURN               : 42 43
RPAREN               : 34 35 36 37 61 62 63 64 68 70 73 74 79 80 80 93
SEMICOLON            : 10 11 12 13 42 43 44 45 73 74
THEN                 : 68 70
TIMES                : 91
TWOPOINTS            : 1
UNTIL                : 80
VAR                  : 9
VOID                 : 34 35
WHILE                : 79
WRITE                : 74
error                : 

Nonterminals, with rules where they appear

a_exp                : 85 86 86 88 89
assignation          : 44 80
body                 : 34 35 36 37
call                 : 45 95
call_aux             : 63 64 66
classes              : 5 27
classes_aux          : 26 27
complex_type         : 12 13
condition            : 48
condition_aux        : 67 70
condition_aux_2      : 69
condition_aux_3      : 68
cte                  : 97 98 99
dec_vars             : 3 28 30 40 43 105
dec_vars_aux         : 9 11 13
empty                : 4 6 8 72
exp                  : 53 59 60 60 65 66 68 70 75 76 79 80 82 93
factor               : 90 91 92
factor_aux           : 96
for                  : 50
functions            : 7 28 29 30 31 33
functions_aux        : 32 33
l_exp                : 83 84
main                 : 1
n_exp                : 81 82 84
params               : 34 37 39
program              : 0
program_body         : 1
program_body_class   : 1
program_body_funct   : 2
program_body_vars    : 2
read                 : 46
simple_type          : 10 11 36 37 38 39
statutes             : 51 52
statutes_aux         : 40 41 42 43 52 68 70 71 79 80 104 105
term                 : 87 88 89 91 92
var                  : 53 73 94
var_aux              : 55
var_aux_2            : 57 58
vars_complex_type    : 12 13 15
vars_simple_type     : 10 11 17 19
vars_simple_type_aux : 18 19
while                : 49
write                : 47
write_aux            : 74 76 78

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . program_body_class PROGRAM ID TWOPOINTS program_body main END
    (5) program_body_class -> . classes
    (6) program_body_class -> . empty
    (26) classes -> . CLASS ID classes_aux
    (27) classes -> . CLASS ID classes_aux classes
    (106) empty -> .

    CLASS           shift and go to state 5
    PROGRAM         reduce using rule 106 (empty -> .)

    program                        shift and go to state 1
    program_body_class             shift and go to state 2
    classes                        shift and go to state 3
    empty                          shift and go to state 4

state 1

    (0) S' -> program .



state 2

    (1) program -> program_body_class . PROGRAM ID TWOPOINTS program_body main END

    PROGRAM         shift and go to state 6


state 3

    (5) program_body_class -> classes .

    PROGRAM         reduce using rule 5 (program_body_class -> classes .)


state 4

    (6) program_body_class -> empty .

    PROGRAM         reduce using rule 6 (program_body_class -> empty .)


state 5

    (26) classes -> CLASS . ID classes_aux
    (27) classes -> CLASS . ID classes_aux classes

    ID              shift and go to state 7


state 6

    (1) program -> program_body_class PROGRAM . ID TWOPOINTS program_body main END

    ID              shift and go to state 8


state 7

    (26) classes -> CLASS ID . classes_aux
    (27) classes -> CLASS ID . classes_aux classes
    (28) classes_aux -> . LBRACE dec_vars functions RBRACE
    (29) classes_aux -> . LBRACE functions RBRACE
    (30) classes_aux -> . INHERITS ID LBRACE dec_vars functions RBRACE
    (31) classes_aux -> . INHERITS ID LBRACE functions RBRACE

    LBRACE          shift and go to state 10
    INHERITS        shift and go to state 11

    classes_aux                    shift and go to state 9

state 8

    (1) program -> program_body_class PROGRAM ID . TWOPOINTS program_body main END

    TWOPOINTS       shift and go to state 12


state 9

    (26) classes -> CLASS ID classes_aux .
    (27) classes -> CLASS ID classes_aux . classes
    (26) classes -> . CLASS ID classes_aux
    (27) classes -> . CLASS ID classes_aux classes

    PROGRAM         reduce using rule 26 (classes -> CLASS ID classes_aux .)
    CLASS           shift and go to state 5

    classes                        shift and go to state 13

state 10

    (28) classes_aux -> LBRACE . dec_vars functions RBRACE
    (29) classes_aux -> LBRACE . functions RBRACE
    (9) dec_vars -> . VAR dec_vars_aux
    (32) functions -> . FUNCT functions_aux
    (33) functions -> . FUNCT functions_aux functions

    VAR             shift and go to state 16
    FUNCT           shift and go to state 17

    dec_vars                       shift and go to state 14
    functions                      shift and go to state 15

state 11

    (30) classes_aux -> INHERITS . ID LBRACE dec_vars functions RBRACE
    (31) classes_aux -> INHERITS . ID LBRACE functions RBRACE

    ID              shift and go to state 18


state 12

    (1) program -> program_body_class PROGRAM ID TWOPOINTS . program_body main END
    (2) program_body -> . program_body_vars program_body_funct
    (3) program_body_vars -> . dec_vars
    (4) program_body_vars -> . empty
    (9) dec_vars -> . VAR dec_vars_aux
    (106) empty -> .

    VAR             shift and go to state 16
    FUNCT           reduce using rule 106 (empty -> .)
    MAIN            reduce using rule 106 (empty -> .)

    program_body                   shift and go to state 19
    program_body_vars              shift and go to state 20
    dec_vars                       shift and go to state 21
    empty                          shift and go to state 22

state 13

    (27) classes -> CLASS ID classes_aux classes .

    PROGRAM         reduce using rule 27 (classes -> CLASS ID classes_aux classes .)


state 14

    (28) classes_aux -> LBRACE dec_vars . functions RBRACE
    (32) functions -> . FUNCT functions_aux
    (33) functions -> . FUNCT functions_aux functions

    FUNCT           shift and go to state 17

    functions                      shift and go to state 23

state 15

    (29) classes_aux -> LBRACE functions . RBRACE

    RBRACE          shift and go to state 24


state 16

    (9) dec_vars -> VAR . dec_vars_aux
    (10) dec_vars_aux -> . simple_type vars_simple_type SEMICOLON
    (11) dec_vars_aux -> . simple_type vars_simple_type SEMICOLON dec_vars_aux
    (12) dec_vars_aux -> . complex_type vars_complex_type SEMICOLON
    (13) dec_vars_aux -> . complex_type vars_complex_type SEMICOLON dec_vars_aux
    (22) simple_type -> . INT
    (23) simple_type -> . FLOAT
    (24) simple_type -> . CHAR
    (25) complex_type -> . ID

    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    CHAR            shift and go to state 30
    ID              shift and go to state 31

    dec_vars_aux                   shift and go to state 25
    simple_type                    shift and go to state 26
    complex_type                   shift and go to state 27

state 17

    (32) functions -> FUNCT . functions_aux
    (33) functions -> FUNCT . functions_aux functions
    (34) functions_aux -> . VOID ID LPAREN params RPAREN body
    (35) functions_aux -> . VOID ID LPAREN RPAREN body
    (36) functions_aux -> . simple_type ID LPAREN RPAREN body
    (37) functions_aux -> . simple_type ID LPAREN params RPAREN body
    (22) simple_type -> . INT
    (23) simple_type -> . FLOAT
    (24) simple_type -> . CHAR

    VOID            shift and go to state 33
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    CHAR            shift and go to state 30

    functions_aux                  shift and go to state 32
    simple_type                    shift and go to state 34

state 18

    (30) classes_aux -> INHERITS ID . LBRACE dec_vars functions RBRACE
    (31) classes_aux -> INHERITS ID . LBRACE functions RBRACE

    LBRACE          shift and go to state 35


state 19

    (1) program -> program_body_class PROGRAM ID TWOPOINTS program_body . main END
    (104) main -> . MAIN LBRACE statutes_aux RBRACE
    (105) main -> . MAIN LBRACE dec_vars statutes_aux RBRACE

    MAIN            shift and go to state 37

    main                           shift and go to state 36

state 20

    (2) program_body -> program_body_vars . program_body_funct
    (7) program_body_funct -> . functions
    (8) program_body_funct -> . empty
    (32) functions -> . FUNCT functions_aux
    (33) functions -> . FUNCT functions_aux functions
    (106) empty -> .

    FUNCT           shift and go to state 17
    MAIN            reduce using rule 106 (empty -> .)

    program_body_funct             shift and go to state 38
    functions                      shift and go to state 39
    empty                          shift and go to state 40

state 21

    (3) program_body_vars -> dec_vars .

    FUNCT           reduce using rule 3 (program_body_vars -> dec_vars .)
    MAIN            reduce using rule 3 (program_body_vars -> dec_vars .)


state 22

    (4) program_body_vars -> empty .

    FUNCT           reduce using rule 4 (program_body_vars -> empty .)
    MAIN            reduce using rule 4 (program_body_vars -> empty .)


state 23

    (28) classes_aux -> LBRACE dec_vars functions . RBRACE

    RBRACE          shift and go to state 41


state 24

    (29) classes_aux -> LBRACE functions RBRACE .

    CLASS           reduce using rule 29 (classes_aux -> LBRACE functions RBRACE .)
    PROGRAM         reduce using rule 29 (classes_aux -> LBRACE functions RBRACE .)


state 25

    (9) dec_vars -> VAR dec_vars_aux .

    FUNCT           reduce using rule 9 (dec_vars -> VAR dec_vars_aux .)
    MAIN            reduce using rule 9 (dec_vars -> VAR dec_vars_aux .)
    ASSIGN          reduce using rule 9 (dec_vars -> VAR dec_vars_aux .)
    CALL            reduce using rule 9 (dec_vars -> VAR dec_vars_aux .)
    READ            reduce using rule 9 (dec_vars -> VAR dec_vars_aux .)
    WRITE           reduce using rule 9 (dec_vars -> VAR dec_vars_aux .)
    IF              reduce using rule 9 (dec_vars -> VAR dec_vars_aux .)
    WHILE           reduce using rule 9 (dec_vars -> VAR dec_vars_aux .)
    FROM            reduce using rule 9 (dec_vars -> VAR dec_vars_aux .)


state 26

    (10) dec_vars_aux -> simple_type . vars_simple_type SEMICOLON
    (11) dec_vars_aux -> simple_type . vars_simple_type SEMICOLON dec_vars_aux
    (16) vars_simple_type -> . ID
    (17) vars_simple_type -> . ID COMMA vars_simple_type
    (18) vars_simple_type -> . ID vars_simple_type_aux
    (19) vars_simple_type -> . ID vars_simple_type_aux COMMA vars_simple_type

    ID              shift and go to state 43

    vars_simple_type               shift and go to state 42

state 27

    (12) dec_vars_aux -> complex_type . vars_complex_type SEMICOLON
    (13) dec_vars_aux -> complex_type . vars_complex_type SEMICOLON dec_vars_aux
    (14) vars_complex_type -> . ID
    (15) vars_complex_type -> . ID COMMA vars_complex_type

    ID              shift and go to state 45

    vars_complex_type              shift and go to state 44

state 28

    (22) simple_type -> INT .

    ID              reduce using rule 22 (simple_type -> INT .)


state 29

    (23) simple_type -> FLOAT .

    ID              reduce using rule 23 (simple_type -> FLOAT .)


state 30

    (24) simple_type -> CHAR .

    ID              reduce using rule 24 (simple_type -> CHAR .)


state 31

    (25) complex_type -> ID .

    ID              reduce using rule 25 (complex_type -> ID .)


state 32

    (32) functions -> FUNCT functions_aux .
    (33) functions -> FUNCT functions_aux . functions
    (32) functions -> . FUNCT functions_aux
    (33) functions -> . FUNCT functions_aux functions

    RBRACE          reduce using rule 32 (functions -> FUNCT functions_aux .)
    MAIN            reduce using rule 32 (functions -> FUNCT functions_aux .)
    FUNCT           shift and go to state 17

    functions                      shift and go to state 46

state 33

    (34) functions_aux -> VOID . ID LPAREN params RPAREN body
    (35) functions_aux -> VOID . ID LPAREN RPAREN body

    ID              shift and go to state 47


state 34

    (36) functions_aux -> simple_type . ID LPAREN RPAREN body
    (37) functions_aux -> simple_type . ID LPAREN params RPAREN body

    ID              shift and go to state 48


state 35

    (30) classes_aux -> INHERITS ID LBRACE . dec_vars functions RBRACE
    (31) classes_aux -> INHERITS ID LBRACE . functions RBRACE
    (9) dec_vars -> . VAR dec_vars_aux
    (32) functions -> . FUNCT functions_aux
    (33) functions -> . FUNCT functions_aux functions

    VAR             shift and go to state 16
    FUNCT           shift and go to state 17

    dec_vars                       shift and go to state 49
    functions                      shift and go to state 50

state 36

    (1) program -> program_body_class PROGRAM ID TWOPOINTS program_body main . END

    END             shift and go to state 51


state 37

    (104) main -> MAIN . LBRACE statutes_aux RBRACE
    (105) main -> MAIN . LBRACE dec_vars statutes_aux RBRACE

    LBRACE          shift and go to state 52


state 38

    (2) program_body -> program_body_vars program_body_funct .

    MAIN            reduce using rule 2 (program_body -> program_body_vars program_body_funct .)


state 39

    (7) program_body_funct -> functions .

    MAIN            reduce using rule 7 (program_body_funct -> functions .)


state 40

    (8) program_body_funct -> empty .

    MAIN            reduce using rule 8 (program_body_funct -> empty .)


state 41

    (28) classes_aux -> LBRACE dec_vars functions RBRACE .

    CLASS           reduce using rule 28 (classes_aux -> LBRACE dec_vars functions RBRACE .)
    PROGRAM         reduce using rule 28 (classes_aux -> LBRACE dec_vars functions RBRACE .)


state 42

    (10) dec_vars_aux -> simple_type vars_simple_type . SEMICOLON
    (11) dec_vars_aux -> simple_type vars_simple_type . SEMICOLON dec_vars_aux

    SEMICOLON       shift and go to state 53


state 43

    (16) vars_simple_type -> ID .
    (17) vars_simple_type -> ID . COMMA vars_simple_type
    (18) vars_simple_type -> ID . vars_simple_type_aux
    (19) vars_simple_type -> ID . vars_simple_type_aux COMMA vars_simple_type
    (20) vars_simple_type_aux -> . LBRACKET CTEI RBRACKET
    (21) vars_simple_type_aux -> . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET

    SEMICOLON       reduce using rule 16 (vars_simple_type -> ID .)
    COMMA           shift and go to state 54
    LBRACKET        shift and go to state 56

    vars_simple_type_aux           shift and go to state 55

state 44

    (12) dec_vars_aux -> complex_type vars_complex_type . SEMICOLON
    (13) dec_vars_aux -> complex_type vars_complex_type . SEMICOLON dec_vars_aux

    SEMICOLON       shift and go to state 57


state 45

    (14) vars_complex_type -> ID .
    (15) vars_complex_type -> ID . COMMA vars_complex_type

    SEMICOLON       reduce using rule 14 (vars_complex_type -> ID .)
    COMMA           shift and go to state 58


state 46

    (33) functions -> FUNCT functions_aux functions .

    RBRACE          reduce using rule 33 (functions -> FUNCT functions_aux functions .)
    MAIN            reduce using rule 33 (functions -> FUNCT functions_aux functions .)


state 47

    (34) functions_aux -> VOID ID . LPAREN params RPAREN body
    (35) functions_aux -> VOID ID . LPAREN RPAREN body

    LPAREN          shift and go to state 59


state 48

    (36) functions_aux -> simple_type ID . LPAREN RPAREN body
    (37) functions_aux -> simple_type ID . LPAREN params RPAREN body

    LPAREN          shift and go to state 60


state 49

    (30) classes_aux -> INHERITS ID LBRACE dec_vars . functions RBRACE
    (32) functions -> . FUNCT functions_aux
    (33) functions -> . FUNCT functions_aux functions

    FUNCT           shift and go to state 17

    functions                      shift and go to state 61

state 50

    (31) classes_aux -> INHERITS ID LBRACE functions . RBRACE

    RBRACE          shift and go to state 62


state 51

    (1) program -> program_body_class PROGRAM ID TWOPOINTS program_body main END .

    $end            reduce using rule 1 (program -> program_body_class PROGRAM ID TWOPOINTS program_body main END .)


state 52

    (104) main -> MAIN LBRACE . statutes_aux RBRACE
    (105) main -> MAIN LBRACE . dec_vars statutes_aux RBRACE
    (51) statutes_aux -> . statutes
    (52) statutes_aux -> . statutes statutes_aux
    (9) dec_vars -> . VAR dec_vars_aux
    (44) statutes -> . ASSIGN assignation SEMICOLON
    (45) statutes -> . CALL call SEMICOLON
    (46) statutes -> . read
    (47) statutes -> . write
    (48) statutes -> . condition
    (49) statutes -> . while
    (50) statutes -> . for
    (73) read -> . READ LPAREN var RPAREN SEMICOLON
    (74) write -> . WRITE LPAREN write_aux RPAREN SEMICOLON
    (67) condition -> . IF condition_aux
    (79) while -> . WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (80) for -> . FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    VAR             shift and go to state 16
    ASSIGN          shift and go to state 66
    CALL            shift and go to state 67
    READ            shift and go to state 73
    WRITE           shift and go to state 74
    IF              shift and go to state 75
    WHILE           shift and go to state 76
    FROM            shift and go to state 77

    statutes_aux                   shift and go to state 63
    dec_vars                       shift and go to state 64
    statutes                       shift and go to state 65
    read                           shift and go to state 68
    write                          shift and go to state 69
    condition                      shift and go to state 70
    while                          shift and go to state 71
    for                            shift and go to state 72

state 53

    (10) dec_vars_aux -> simple_type vars_simple_type SEMICOLON .
    (11) dec_vars_aux -> simple_type vars_simple_type SEMICOLON . dec_vars_aux
    (10) dec_vars_aux -> . simple_type vars_simple_type SEMICOLON
    (11) dec_vars_aux -> . simple_type vars_simple_type SEMICOLON dec_vars_aux
    (12) dec_vars_aux -> . complex_type vars_complex_type SEMICOLON
    (13) dec_vars_aux -> . complex_type vars_complex_type SEMICOLON dec_vars_aux
    (22) simple_type -> . INT
    (23) simple_type -> . FLOAT
    (24) simple_type -> . CHAR
    (25) complex_type -> . ID

    FUNCT           reduce using rule 10 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON .)
    MAIN            reduce using rule 10 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON .)
    ASSIGN          reduce using rule 10 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON .)
    CALL            reduce using rule 10 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON .)
    READ            reduce using rule 10 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON .)
    WRITE           reduce using rule 10 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON .)
    IF              reduce using rule 10 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON .)
    WHILE           reduce using rule 10 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON .)
    FROM            reduce using rule 10 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON .)
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    CHAR            shift and go to state 30
    ID              shift and go to state 31

    simple_type                    shift and go to state 26
    dec_vars_aux                   shift and go to state 78
    complex_type                   shift and go to state 27

state 54

    (17) vars_simple_type -> ID COMMA . vars_simple_type
    (16) vars_simple_type -> . ID
    (17) vars_simple_type -> . ID COMMA vars_simple_type
    (18) vars_simple_type -> . ID vars_simple_type_aux
    (19) vars_simple_type -> . ID vars_simple_type_aux COMMA vars_simple_type

    ID              shift and go to state 43

    vars_simple_type               shift and go to state 79

state 55

    (18) vars_simple_type -> ID vars_simple_type_aux .
    (19) vars_simple_type -> ID vars_simple_type_aux . COMMA vars_simple_type

    SEMICOLON       reduce using rule 18 (vars_simple_type -> ID vars_simple_type_aux .)
    COMMA           shift and go to state 80


state 56

    (20) vars_simple_type_aux -> LBRACKET . CTEI RBRACKET
    (21) vars_simple_type_aux -> LBRACKET . CTEI RBRACKET LBRACKET CTEI RBRACKET

    CTEI            shift and go to state 81


state 57

    (12) dec_vars_aux -> complex_type vars_complex_type SEMICOLON .
    (13) dec_vars_aux -> complex_type vars_complex_type SEMICOLON . dec_vars_aux
    (10) dec_vars_aux -> . simple_type vars_simple_type SEMICOLON
    (11) dec_vars_aux -> . simple_type vars_simple_type SEMICOLON dec_vars_aux
    (12) dec_vars_aux -> . complex_type vars_complex_type SEMICOLON
    (13) dec_vars_aux -> . complex_type vars_complex_type SEMICOLON dec_vars_aux
    (22) simple_type -> . INT
    (23) simple_type -> . FLOAT
    (24) simple_type -> . CHAR
    (25) complex_type -> . ID

    FUNCT           reduce using rule 12 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON .)
    MAIN            reduce using rule 12 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON .)
    ASSIGN          reduce using rule 12 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON .)
    CALL            reduce using rule 12 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON .)
    READ            reduce using rule 12 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON .)
    WRITE           reduce using rule 12 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON .)
    IF              reduce using rule 12 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON .)
    WHILE           reduce using rule 12 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON .)
    FROM            reduce using rule 12 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON .)
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    CHAR            shift and go to state 30
    ID              shift and go to state 31

    complex_type                   shift and go to state 27
    dec_vars_aux                   shift and go to state 82
    simple_type                    shift and go to state 26

state 58

    (15) vars_complex_type -> ID COMMA . vars_complex_type
    (14) vars_complex_type -> . ID
    (15) vars_complex_type -> . ID COMMA vars_complex_type

    ID              shift and go to state 45

    vars_complex_type              shift and go to state 83

state 59

    (34) functions_aux -> VOID ID LPAREN . params RPAREN body
    (35) functions_aux -> VOID ID LPAREN . RPAREN body
    (38) params -> . simple_type ID
    (39) params -> . simple_type ID COMMA params
    (22) simple_type -> . INT
    (23) simple_type -> . FLOAT
    (24) simple_type -> . CHAR

    RPAREN          shift and go to state 85
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    CHAR            shift and go to state 30

    params                         shift and go to state 84
    simple_type                    shift and go to state 86

state 60

    (36) functions_aux -> simple_type ID LPAREN . RPAREN body
    (37) functions_aux -> simple_type ID LPAREN . params RPAREN body
    (38) params -> . simple_type ID
    (39) params -> . simple_type ID COMMA params
    (22) simple_type -> . INT
    (23) simple_type -> . FLOAT
    (24) simple_type -> . CHAR

    RPAREN          shift and go to state 87
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    CHAR            shift and go to state 30

    simple_type                    shift and go to state 86
    params                         shift and go to state 88

state 61

    (30) classes_aux -> INHERITS ID LBRACE dec_vars functions . RBRACE

    RBRACE          shift and go to state 89


state 62

    (31) classes_aux -> INHERITS ID LBRACE functions RBRACE .

    CLASS           reduce using rule 31 (classes_aux -> INHERITS ID LBRACE functions RBRACE .)
    PROGRAM         reduce using rule 31 (classes_aux -> INHERITS ID LBRACE functions RBRACE .)


state 63

    (104) main -> MAIN LBRACE statutes_aux . RBRACE

    RBRACE          shift and go to state 90


state 64

    (105) main -> MAIN LBRACE dec_vars . statutes_aux RBRACE
    (51) statutes_aux -> . statutes
    (52) statutes_aux -> . statutes statutes_aux
    (44) statutes -> . ASSIGN assignation SEMICOLON
    (45) statutes -> . CALL call SEMICOLON
    (46) statutes -> . read
    (47) statutes -> . write
    (48) statutes -> . condition
    (49) statutes -> . while
    (50) statutes -> . for
    (73) read -> . READ LPAREN var RPAREN SEMICOLON
    (74) write -> . WRITE LPAREN write_aux RPAREN SEMICOLON
    (67) condition -> . IF condition_aux
    (79) while -> . WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (80) for -> . FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    ASSIGN          shift and go to state 66
    CALL            shift and go to state 67
    READ            shift and go to state 73
    WRITE           shift and go to state 74
    IF              shift and go to state 75
    WHILE           shift and go to state 76
    FROM            shift and go to state 77

    statutes_aux                   shift and go to state 91
    statutes                       shift and go to state 65
    read                           shift and go to state 68
    write                          shift and go to state 69
    condition                      shift and go to state 70
    while                          shift and go to state 71
    for                            shift and go to state 72

state 65

    (51) statutes_aux -> statutes .
    (52) statutes_aux -> statutes . statutes_aux
    (51) statutes_aux -> . statutes
    (52) statutes_aux -> . statutes statutes_aux
    (44) statutes -> . ASSIGN assignation SEMICOLON
    (45) statutes -> . CALL call SEMICOLON
    (46) statutes -> . read
    (47) statutes -> . write
    (48) statutes -> . condition
    (49) statutes -> . while
    (50) statutes -> . for
    (73) read -> . READ LPAREN var RPAREN SEMICOLON
    (74) write -> . WRITE LPAREN write_aux RPAREN SEMICOLON
    (67) condition -> . IF condition_aux
    (79) while -> . WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (80) for -> . FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    RBRACE          reduce using rule 51 (statutes_aux -> statutes .)
    RETURN          reduce using rule 51 (statutes_aux -> statutes .)
    ASSIGN          shift and go to state 66
    CALL            shift and go to state 67
    READ            shift and go to state 73
    WRITE           shift and go to state 74
    IF              shift and go to state 75
    WHILE           shift and go to state 76
    FROM            shift and go to state 77

    statutes                       shift and go to state 65
    statutes_aux                   shift and go to state 92
    read                           shift and go to state 68
    write                          shift and go to state 69
    condition                      shift and go to state 70
    while                          shift and go to state 71
    for                            shift and go to state 72

state 66

    (44) statutes -> ASSIGN . assignation SEMICOLON
    (53) assignation -> . var EQUAL exp
    (54) var -> . ID
    (55) var -> . ID var_aux

    ID              shift and go to state 95

    assignation                    shift and go to state 93
    var                            shift and go to state 94

state 67

    (45) statutes -> CALL . call SEMICOLON
    (61) call -> . ID LPAREN RPAREN
    (62) call -> . ID POINT ID LPAREN RPAREN
    (63) call -> . ID LPAREN call_aux RPAREN
    (64) call -> . ID POINT ID LPAREN call_aux RPAREN

    ID              shift and go to state 97

    call                           shift and go to state 96

state 68

    (46) statutes -> read .

    ASSIGN          reduce using rule 46 (statutes -> read .)
    CALL            reduce using rule 46 (statutes -> read .)
    READ            reduce using rule 46 (statutes -> read .)
    WRITE           reduce using rule 46 (statutes -> read .)
    IF              reduce using rule 46 (statutes -> read .)
    WHILE           reduce using rule 46 (statutes -> read .)
    FROM            reduce using rule 46 (statutes -> read .)
    RBRACE          reduce using rule 46 (statutes -> read .)
    RETURN          reduce using rule 46 (statutes -> read .)


state 69

    (47) statutes -> write .

    ASSIGN          reduce using rule 47 (statutes -> write .)
    CALL            reduce using rule 47 (statutes -> write .)
    READ            reduce using rule 47 (statutes -> write .)
    WRITE           reduce using rule 47 (statutes -> write .)
    IF              reduce using rule 47 (statutes -> write .)
    WHILE           reduce using rule 47 (statutes -> write .)
    FROM            reduce using rule 47 (statutes -> write .)
    RBRACE          reduce using rule 47 (statutes -> write .)
    RETURN          reduce using rule 47 (statutes -> write .)


state 70

    (48) statutes -> condition .

    ASSIGN          reduce using rule 48 (statutes -> condition .)
    CALL            reduce using rule 48 (statutes -> condition .)
    READ            reduce using rule 48 (statutes -> condition .)
    WRITE           reduce using rule 48 (statutes -> condition .)
    IF              reduce using rule 48 (statutes -> condition .)
    WHILE           reduce using rule 48 (statutes -> condition .)
    FROM            reduce using rule 48 (statutes -> condition .)
    RBRACE          reduce using rule 48 (statutes -> condition .)
    RETURN          reduce using rule 48 (statutes -> condition .)


state 71

    (49) statutes -> while .

    ASSIGN          reduce using rule 49 (statutes -> while .)
    CALL            reduce using rule 49 (statutes -> while .)
    READ            reduce using rule 49 (statutes -> while .)
    WRITE           reduce using rule 49 (statutes -> while .)
    IF              reduce using rule 49 (statutes -> while .)
    WHILE           reduce using rule 49 (statutes -> while .)
    FROM            reduce using rule 49 (statutes -> while .)
    RBRACE          reduce using rule 49 (statutes -> while .)
    RETURN          reduce using rule 49 (statutes -> while .)


state 72

    (50) statutes -> for .

    ASSIGN          reduce using rule 50 (statutes -> for .)
    CALL            reduce using rule 50 (statutes -> for .)
    READ            reduce using rule 50 (statutes -> for .)
    WRITE           reduce using rule 50 (statutes -> for .)
    IF              reduce using rule 50 (statutes -> for .)
    WHILE           reduce using rule 50 (statutes -> for .)
    FROM            reduce using rule 50 (statutes -> for .)
    RBRACE          reduce using rule 50 (statutes -> for .)
    RETURN          reduce using rule 50 (statutes -> for .)


state 73

    (73) read -> READ . LPAREN var RPAREN SEMICOLON

    LPAREN          shift and go to state 98


state 74

    (74) write -> WRITE . LPAREN write_aux RPAREN SEMICOLON

    LPAREN          shift and go to state 99


state 75

    (67) condition -> IF . condition_aux
    (68) condition_aux -> . LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3
    (69) condition_aux -> . condition_aux_2
    (70) condition_aux_2 -> . LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux

    LPAREN          shift and go to state 101

    condition_aux                  shift and go to state 100
    condition_aux_2                shift and go to state 102

state 76

    (79) while -> WHILE . LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    LPAREN          shift and go to state 103


state 77

    (80) for -> FROM . LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    LPAREN          shift and go to state 104


state 78

    (11) dec_vars_aux -> simple_type vars_simple_type SEMICOLON dec_vars_aux .

    FUNCT           reduce using rule 11 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON dec_vars_aux .)
    MAIN            reduce using rule 11 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON dec_vars_aux .)
    ASSIGN          reduce using rule 11 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON dec_vars_aux .)
    CALL            reduce using rule 11 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON dec_vars_aux .)
    READ            reduce using rule 11 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON dec_vars_aux .)
    WRITE           reduce using rule 11 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON dec_vars_aux .)
    IF              reduce using rule 11 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON dec_vars_aux .)
    WHILE           reduce using rule 11 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON dec_vars_aux .)
    FROM            reduce using rule 11 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON dec_vars_aux .)


state 79

    (17) vars_simple_type -> ID COMMA vars_simple_type .

    SEMICOLON       reduce using rule 17 (vars_simple_type -> ID COMMA vars_simple_type .)


state 80

    (19) vars_simple_type -> ID vars_simple_type_aux COMMA . vars_simple_type
    (16) vars_simple_type -> . ID
    (17) vars_simple_type -> . ID COMMA vars_simple_type
    (18) vars_simple_type -> . ID vars_simple_type_aux
    (19) vars_simple_type -> . ID vars_simple_type_aux COMMA vars_simple_type

    ID              shift and go to state 43

    vars_simple_type               shift and go to state 105

state 81

    (20) vars_simple_type_aux -> LBRACKET CTEI . RBRACKET
    (21) vars_simple_type_aux -> LBRACKET CTEI . RBRACKET LBRACKET CTEI RBRACKET

    RBRACKET        shift and go to state 106


state 82

    (13) dec_vars_aux -> complex_type vars_complex_type SEMICOLON dec_vars_aux .

    FUNCT           reduce using rule 13 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON dec_vars_aux .)
    MAIN            reduce using rule 13 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON dec_vars_aux .)
    ASSIGN          reduce using rule 13 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON dec_vars_aux .)
    CALL            reduce using rule 13 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON dec_vars_aux .)
    READ            reduce using rule 13 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON dec_vars_aux .)
    WRITE           reduce using rule 13 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON dec_vars_aux .)
    IF              reduce using rule 13 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON dec_vars_aux .)
    WHILE           reduce using rule 13 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON dec_vars_aux .)
    FROM            reduce using rule 13 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON dec_vars_aux .)


state 83

    (15) vars_complex_type -> ID COMMA vars_complex_type .

    SEMICOLON       reduce using rule 15 (vars_complex_type -> ID COMMA vars_complex_type .)


state 84

    (34) functions_aux -> VOID ID LPAREN params . RPAREN body

    RPAREN          shift and go to state 107


state 85

    (35) functions_aux -> VOID ID LPAREN RPAREN . body
    (40) body -> . LBRACE dec_vars statutes_aux RBRACE
    (41) body -> . LBRACE statutes_aux RBRACE
    (42) body -> . LBRACE statutes_aux RETURN ID SEMICOLON RBRACE
    (43) body -> . LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE

    LBRACE          shift and go to state 109

    body                           shift and go to state 108

state 86

    (38) params -> simple_type . ID
    (39) params -> simple_type . ID COMMA params

    ID              shift and go to state 110


state 87

    (36) functions_aux -> simple_type ID LPAREN RPAREN . body
    (40) body -> . LBRACE dec_vars statutes_aux RBRACE
    (41) body -> . LBRACE statutes_aux RBRACE
    (42) body -> . LBRACE statutes_aux RETURN ID SEMICOLON RBRACE
    (43) body -> . LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE

    LBRACE          shift and go to state 109

    body                           shift and go to state 111

state 88

    (37) functions_aux -> simple_type ID LPAREN params . RPAREN body

    RPAREN          shift and go to state 112


state 89

    (30) classes_aux -> INHERITS ID LBRACE dec_vars functions RBRACE .

    CLASS           reduce using rule 30 (classes_aux -> INHERITS ID LBRACE dec_vars functions RBRACE .)
    PROGRAM         reduce using rule 30 (classes_aux -> INHERITS ID LBRACE dec_vars functions RBRACE .)


state 90

    (104) main -> MAIN LBRACE statutes_aux RBRACE .

    END             reduce using rule 104 (main -> MAIN LBRACE statutes_aux RBRACE .)


state 91

    (105) main -> MAIN LBRACE dec_vars statutes_aux . RBRACE

    RBRACE          shift and go to state 113


state 92

    (52) statutes_aux -> statutes statutes_aux .

    RBRACE          reduce using rule 52 (statutes_aux -> statutes statutes_aux .)
    RETURN          reduce using rule 52 (statutes_aux -> statutes statutes_aux .)


state 93

    (44) statutes -> ASSIGN assignation . SEMICOLON

    SEMICOLON       shift and go to state 114


state 94

    (53) assignation -> var . EQUAL exp

    EQUAL           shift and go to state 115


state 95

    (54) var -> ID .
    (55) var -> ID . var_aux
    (56) var_aux -> . POINT ID
    (57) var_aux -> . POINT ID var_aux_2
    (58) var_aux -> . var_aux_2
    (59) var_aux_2 -> . LBRACKET exp RBRACKET
    (60) var_aux_2 -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET

    EQUAL           reduce using rule 54 (var -> ID .)
    RPAREN          reduce using rule 54 (var -> ID .)
    POINT           shift and go to state 117
    LBRACKET        shift and go to state 119

    var_aux                        shift and go to state 116
    var_aux_2                      shift and go to state 118

state 96

    (45) statutes -> CALL call . SEMICOLON

    SEMICOLON       shift and go to state 120


state 97

    (61) call -> ID . LPAREN RPAREN
    (62) call -> ID . POINT ID LPAREN RPAREN
    (63) call -> ID . LPAREN call_aux RPAREN
    (64) call -> ID . POINT ID LPAREN call_aux RPAREN

    LPAREN          shift and go to state 121
    POINT           shift and go to state 122


state 98

    (73) read -> READ LPAREN . var RPAREN SEMICOLON
    (54) var -> . ID
    (55) var -> . ID var_aux

    ID              shift and go to state 95

    var                            shift and go to state 123

state 99

    (74) write -> WRITE LPAREN . write_aux RPAREN SEMICOLON
    (75) write_aux -> . exp
    (76) write_aux -> . exp COMMA write_aux
    (77) write_aux -> . CTESTRING
    (78) write_aux -> . CTESTRING COMMA write_aux
    (81) exp -> . n_exp
    (82) exp -> . n_exp OR exp
    (83) n_exp -> . l_exp
    (84) n_exp -> . l_exp AND n_exp
    (85) l_exp -> . a_exp
    (86) l_exp -> . a_exp RELOP a_exp
    (87) a_exp -> . term
    (88) a_exp -> . term PLUS a_exp
    (89) a_exp -> . term MINUS a_exp
    (90) term -> . factor
    (91) term -> . factor TIMES term
    (92) term -> . factor DIVIDE term
    (93) factor -> . LPAREN exp RPAREN
    (94) factor -> . var
    (95) factor -> . call
    (96) factor -> . factor_aux
    (54) var -> . ID
    (55) var -> . ID var_aux
    (61) call -> . ID LPAREN RPAREN
    (62) call -> . ID POINT ID LPAREN RPAREN
    (63) call -> . ID LPAREN call_aux RPAREN
    (64) call -> . ID POINT ID LPAREN call_aux RPAREN
    (97) factor_aux -> . cte
    (98) factor_aux -> . PLUS cte
    (99) factor_aux -> . MINUS cte
    (100) cte -> . ID
    (101) cte -> . CTEI
    (102) cte -> . CTEF
    (103) cte -> . CTECHAR

    CTESTRING       shift and go to state 127
    LPAREN          shift and go to state 124
    ID              shift and go to state 138
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    CTEI            shift and go to state 140
    CTEF            shift and go to state 141
    CTECHAR         shift and go to state 142

    write_aux                      shift and go to state 125
    exp                            shift and go to state 126
    n_exp                          shift and go to state 128
    l_exp                          shift and go to state 129
    a_exp                          shift and go to state 130
    term                           shift and go to state 131
    factor                         shift and go to state 134
    var                            shift and go to state 135
    call                           shift and go to state 136
    factor_aux                     shift and go to state 137
    cte                            shift and go to state 139

state 100

    (67) condition -> IF condition_aux .

    ASSIGN          reduce using rule 67 (condition -> IF condition_aux .)
    CALL            reduce using rule 67 (condition -> IF condition_aux .)
    READ            reduce using rule 67 (condition -> IF condition_aux .)
    WRITE           reduce using rule 67 (condition -> IF condition_aux .)
    IF              reduce using rule 67 (condition -> IF condition_aux .)
    WHILE           reduce using rule 67 (condition -> IF condition_aux .)
    FROM            reduce using rule 67 (condition -> IF condition_aux .)
    RBRACE          reduce using rule 67 (condition -> IF condition_aux .)
    RETURN          reduce using rule 67 (condition -> IF condition_aux .)


state 101

    (68) condition_aux -> LPAREN . exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3
    (70) condition_aux_2 -> LPAREN . exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux
    (81) exp -> . n_exp
    (82) exp -> . n_exp OR exp
    (83) n_exp -> . l_exp
    (84) n_exp -> . l_exp AND n_exp
    (85) l_exp -> . a_exp
    (86) l_exp -> . a_exp RELOP a_exp
    (87) a_exp -> . term
    (88) a_exp -> . term PLUS a_exp
    (89) a_exp -> . term MINUS a_exp
    (90) term -> . factor
    (91) term -> . factor TIMES term
    (92) term -> . factor DIVIDE term
    (93) factor -> . LPAREN exp RPAREN
    (94) factor -> . var
    (95) factor -> . call
    (96) factor -> . factor_aux
    (54) var -> . ID
    (55) var -> . ID var_aux
    (61) call -> . ID LPAREN RPAREN
    (62) call -> . ID POINT ID LPAREN RPAREN
    (63) call -> . ID LPAREN call_aux RPAREN
    (64) call -> . ID POINT ID LPAREN call_aux RPAREN
    (97) factor_aux -> . cte
    (98) factor_aux -> . PLUS cte
    (99) factor_aux -> . MINUS cte
    (100) cte -> . ID
    (101) cte -> . CTEI
    (102) cte -> . CTEF
    (103) cte -> . CTECHAR

    LPAREN          shift and go to state 124
    ID              shift and go to state 138
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    CTEI            shift and go to state 140
    CTEF            shift and go to state 141
    CTECHAR         shift and go to state 142

    exp                            shift and go to state 143
    n_exp                          shift and go to state 128
    l_exp                          shift and go to state 129
    a_exp                          shift and go to state 130
    term                           shift and go to state 131
    factor                         shift and go to state 134
    var                            shift and go to state 135
    call                           shift and go to state 136
    factor_aux                     shift and go to state 137
    cte                            shift and go to state 139

state 102

    (69) condition_aux -> condition_aux_2 .

    ASSIGN          reduce using rule 69 (condition_aux -> condition_aux_2 .)
    CALL            reduce using rule 69 (condition_aux -> condition_aux_2 .)
    READ            reduce using rule 69 (condition_aux -> condition_aux_2 .)
    WRITE           reduce using rule 69 (condition_aux -> condition_aux_2 .)
    IF              reduce using rule 69 (condition_aux -> condition_aux_2 .)
    WHILE           reduce using rule 69 (condition_aux -> condition_aux_2 .)
    FROM            reduce using rule 69 (condition_aux -> condition_aux_2 .)
    RBRACE          reduce using rule 69 (condition_aux -> condition_aux_2 .)
    RETURN          reduce using rule 69 (condition_aux -> condition_aux_2 .)


state 103

    (79) while -> WHILE LPAREN . exp RPAREN DO LBRACE statutes_aux RBRACE
    (81) exp -> . n_exp
    (82) exp -> . n_exp OR exp
    (83) n_exp -> . l_exp
    (84) n_exp -> . l_exp AND n_exp
    (85) l_exp -> . a_exp
    (86) l_exp -> . a_exp RELOP a_exp
    (87) a_exp -> . term
    (88) a_exp -> . term PLUS a_exp
    (89) a_exp -> . term MINUS a_exp
    (90) term -> . factor
    (91) term -> . factor TIMES term
    (92) term -> . factor DIVIDE term
    (93) factor -> . LPAREN exp RPAREN
    (94) factor -> . var
    (95) factor -> . call
    (96) factor -> . factor_aux
    (54) var -> . ID
    (55) var -> . ID var_aux
    (61) call -> . ID LPAREN RPAREN
    (62) call -> . ID POINT ID LPAREN RPAREN
    (63) call -> . ID LPAREN call_aux RPAREN
    (64) call -> . ID POINT ID LPAREN call_aux RPAREN
    (97) factor_aux -> . cte
    (98) factor_aux -> . PLUS cte
    (99) factor_aux -> . MINUS cte
    (100) cte -> . ID
    (101) cte -> . CTEI
    (102) cte -> . CTEF
    (103) cte -> . CTECHAR

    LPAREN          shift and go to state 124
    ID              shift and go to state 138
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    CTEI            shift and go to state 140
    CTEF            shift and go to state 141
    CTECHAR         shift and go to state 142

    exp                            shift and go to state 144
    n_exp                          shift and go to state 128
    l_exp                          shift and go to state 129
    a_exp                          shift and go to state 130
    term                           shift and go to state 131
    factor                         shift and go to state 134
    var                            shift and go to state 135
    call                           shift and go to state 136
    factor_aux                     shift and go to state 137
    cte                            shift and go to state 139

state 104

    (80) for -> FROM LPAREN . assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (53) assignation -> . var EQUAL exp
    (54) var -> . ID
    (55) var -> . ID var_aux

    ID              shift and go to state 95

    assignation                    shift and go to state 145
    var                            shift and go to state 94

state 105

    (19) vars_simple_type -> ID vars_simple_type_aux COMMA vars_simple_type .

    SEMICOLON       reduce using rule 19 (vars_simple_type -> ID vars_simple_type_aux COMMA vars_simple_type .)


state 106

    (20) vars_simple_type_aux -> LBRACKET CTEI RBRACKET .
    (21) vars_simple_type_aux -> LBRACKET CTEI RBRACKET . LBRACKET CTEI RBRACKET

    COMMA           reduce using rule 20 (vars_simple_type_aux -> LBRACKET CTEI RBRACKET .)
    SEMICOLON       reduce using rule 20 (vars_simple_type_aux -> LBRACKET CTEI RBRACKET .)
    LBRACKET        shift and go to state 146


state 107

    (34) functions_aux -> VOID ID LPAREN params RPAREN . body
    (40) body -> . LBRACE dec_vars statutes_aux RBRACE
    (41) body -> . LBRACE statutes_aux RBRACE
    (42) body -> . LBRACE statutes_aux RETURN ID SEMICOLON RBRACE
    (43) body -> . LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE

    LBRACE          shift and go to state 109

    body                           shift and go to state 147

state 108

    (35) functions_aux -> VOID ID LPAREN RPAREN body .

    FUNCT           reduce using rule 35 (functions_aux -> VOID ID LPAREN RPAREN body .)
    RBRACE          reduce using rule 35 (functions_aux -> VOID ID LPAREN RPAREN body .)
    MAIN            reduce using rule 35 (functions_aux -> VOID ID LPAREN RPAREN body .)


state 109

    (40) body -> LBRACE . dec_vars statutes_aux RBRACE
    (41) body -> LBRACE . statutes_aux RBRACE
    (42) body -> LBRACE . statutes_aux RETURN ID SEMICOLON RBRACE
    (43) body -> LBRACE . dec_vars statutes_aux RETURN ID SEMICOLON RBRACE
    (9) dec_vars -> . VAR dec_vars_aux
    (51) statutes_aux -> . statutes
    (52) statutes_aux -> . statutes statutes_aux
    (44) statutes -> . ASSIGN assignation SEMICOLON
    (45) statutes -> . CALL call SEMICOLON
    (46) statutes -> . read
    (47) statutes -> . write
    (48) statutes -> . condition
    (49) statutes -> . while
    (50) statutes -> . for
    (73) read -> . READ LPAREN var RPAREN SEMICOLON
    (74) write -> . WRITE LPAREN write_aux RPAREN SEMICOLON
    (67) condition -> . IF condition_aux
    (79) while -> . WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (80) for -> . FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    VAR             shift and go to state 16
    ASSIGN          shift and go to state 66
    CALL            shift and go to state 67
    READ            shift and go to state 73
    WRITE           shift and go to state 74
    IF              shift and go to state 75
    WHILE           shift and go to state 76
    FROM            shift and go to state 77

    dec_vars                       shift and go to state 148
    statutes_aux                   shift and go to state 149
    statutes                       shift and go to state 65
    read                           shift and go to state 68
    write                          shift and go to state 69
    condition                      shift and go to state 70
    while                          shift and go to state 71
    for                            shift and go to state 72

state 110

    (38) params -> simple_type ID .
    (39) params -> simple_type ID . COMMA params

    RPAREN          reduce using rule 38 (params -> simple_type ID .)
    COMMA           shift and go to state 150


state 111

    (36) functions_aux -> simple_type ID LPAREN RPAREN body .

    FUNCT           reduce using rule 36 (functions_aux -> simple_type ID LPAREN RPAREN body .)
    RBRACE          reduce using rule 36 (functions_aux -> simple_type ID LPAREN RPAREN body .)
    MAIN            reduce using rule 36 (functions_aux -> simple_type ID LPAREN RPAREN body .)


state 112

    (37) functions_aux -> simple_type ID LPAREN params RPAREN . body
    (40) body -> . LBRACE dec_vars statutes_aux RBRACE
    (41) body -> . LBRACE statutes_aux RBRACE
    (42) body -> . LBRACE statutes_aux RETURN ID SEMICOLON RBRACE
    (43) body -> . LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE

    LBRACE          shift and go to state 109

    body                           shift and go to state 151

state 113

    (105) main -> MAIN LBRACE dec_vars statutes_aux RBRACE .

    END             reduce using rule 105 (main -> MAIN LBRACE dec_vars statutes_aux RBRACE .)


state 114

    (44) statutes -> ASSIGN assignation SEMICOLON .

    ASSIGN          reduce using rule 44 (statutes -> ASSIGN assignation SEMICOLON .)
    CALL            reduce using rule 44 (statutes -> ASSIGN assignation SEMICOLON .)
    READ            reduce using rule 44 (statutes -> ASSIGN assignation SEMICOLON .)
    WRITE           reduce using rule 44 (statutes -> ASSIGN assignation SEMICOLON .)
    IF              reduce using rule 44 (statutes -> ASSIGN assignation SEMICOLON .)
    WHILE           reduce using rule 44 (statutes -> ASSIGN assignation SEMICOLON .)
    FROM            reduce using rule 44 (statutes -> ASSIGN assignation SEMICOLON .)
    RBRACE          reduce using rule 44 (statutes -> ASSIGN assignation SEMICOLON .)
    RETURN          reduce using rule 44 (statutes -> ASSIGN assignation SEMICOLON .)


state 115

    (53) assignation -> var EQUAL . exp
    (81) exp -> . n_exp
    (82) exp -> . n_exp OR exp
    (83) n_exp -> . l_exp
    (84) n_exp -> . l_exp AND n_exp
    (85) l_exp -> . a_exp
    (86) l_exp -> . a_exp RELOP a_exp
    (87) a_exp -> . term
    (88) a_exp -> . term PLUS a_exp
    (89) a_exp -> . term MINUS a_exp
    (90) term -> . factor
    (91) term -> . factor TIMES term
    (92) term -> . factor DIVIDE term
    (93) factor -> . LPAREN exp RPAREN
    (94) factor -> . var
    (95) factor -> . call
    (96) factor -> . factor_aux
    (54) var -> . ID
    (55) var -> . ID var_aux
    (61) call -> . ID LPAREN RPAREN
    (62) call -> . ID POINT ID LPAREN RPAREN
    (63) call -> . ID LPAREN call_aux RPAREN
    (64) call -> . ID POINT ID LPAREN call_aux RPAREN
    (97) factor_aux -> . cte
    (98) factor_aux -> . PLUS cte
    (99) factor_aux -> . MINUS cte
    (100) cte -> . ID
    (101) cte -> . CTEI
    (102) cte -> . CTEF
    (103) cte -> . CTECHAR

    LPAREN          shift and go to state 124
    ID              shift and go to state 138
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    CTEI            shift and go to state 140
    CTEF            shift and go to state 141
    CTECHAR         shift and go to state 142

    var                            shift and go to state 135
    exp                            shift and go to state 152
    n_exp                          shift and go to state 128
    l_exp                          shift and go to state 129
    a_exp                          shift and go to state 130
    term                           shift and go to state 131
    factor                         shift and go to state 134
    call                           shift and go to state 136
    factor_aux                     shift and go to state 137
    cte                            shift and go to state 139

state 116

    (55) var -> ID var_aux .

    EQUAL           reduce using rule 55 (var -> ID var_aux .)
    RPAREN          reduce using rule 55 (var -> ID var_aux .)
    TIMES           reduce using rule 55 (var -> ID var_aux .)
    DIVIDE          reduce using rule 55 (var -> ID var_aux .)
    PLUS            reduce using rule 55 (var -> ID var_aux .)
    MINUS           reduce using rule 55 (var -> ID var_aux .)
    RELOP           reduce using rule 55 (var -> ID var_aux .)
    AND             reduce using rule 55 (var -> ID var_aux .)
    OR              reduce using rule 55 (var -> ID var_aux .)
    COMMA           reduce using rule 55 (var -> ID var_aux .)
    SEMICOLON       reduce using rule 55 (var -> ID var_aux .)
    RBRACKET        reduce using rule 55 (var -> ID var_aux .)


state 117

    (56) var_aux -> POINT . ID
    (57) var_aux -> POINT . ID var_aux_2

    ID              shift and go to state 153


state 118

    (58) var_aux -> var_aux_2 .

    EQUAL           reduce using rule 58 (var_aux -> var_aux_2 .)
    RPAREN          reduce using rule 58 (var_aux -> var_aux_2 .)
    TIMES           reduce using rule 58 (var_aux -> var_aux_2 .)
    DIVIDE          reduce using rule 58 (var_aux -> var_aux_2 .)
    PLUS            reduce using rule 58 (var_aux -> var_aux_2 .)
    MINUS           reduce using rule 58 (var_aux -> var_aux_2 .)
    RELOP           reduce using rule 58 (var_aux -> var_aux_2 .)
    AND             reduce using rule 58 (var_aux -> var_aux_2 .)
    OR              reduce using rule 58 (var_aux -> var_aux_2 .)
    COMMA           reduce using rule 58 (var_aux -> var_aux_2 .)
    SEMICOLON       reduce using rule 58 (var_aux -> var_aux_2 .)
    RBRACKET        reduce using rule 58 (var_aux -> var_aux_2 .)


state 119

    (59) var_aux_2 -> LBRACKET . exp RBRACKET
    (60) var_aux_2 -> LBRACKET . exp RBRACKET LBRACKET exp RBRACKET
    (81) exp -> . n_exp
    (82) exp -> . n_exp OR exp
    (83) n_exp -> . l_exp
    (84) n_exp -> . l_exp AND n_exp
    (85) l_exp -> . a_exp
    (86) l_exp -> . a_exp RELOP a_exp
    (87) a_exp -> . term
    (88) a_exp -> . term PLUS a_exp
    (89) a_exp -> . term MINUS a_exp
    (90) term -> . factor
    (91) term -> . factor TIMES term
    (92) term -> . factor DIVIDE term
    (93) factor -> . LPAREN exp RPAREN
    (94) factor -> . var
    (95) factor -> . call
    (96) factor -> . factor_aux
    (54) var -> . ID
    (55) var -> . ID var_aux
    (61) call -> . ID LPAREN RPAREN
    (62) call -> . ID POINT ID LPAREN RPAREN
    (63) call -> . ID LPAREN call_aux RPAREN
    (64) call -> . ID POINT ID LPAREN call_aux RPAREN
    (97) factor_aux -> . cte
    (98) factor_aux -> . PLUS cte
    (99) factor_aux -> . MINUS cte
    (100) cte -> . ID
    (101) cte -> . CTEI
    (102) cte -> . CTEF
    (103) cte -> . CTECHAR

    LPAREN          shift and go to state 124
    ID              shift and go to state 138
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    CTEI            shift and go to state 140
    CTEF            shift and go to state 141
    CTECHAR         shift and go to state 142

    exp                            shift and go to state 154
    n_exp                          shift and go to state 128
    l_exp                          shift and go to state 129
    a_exp                          shift and go to state 130
    term                           shift and go to state 131
    factor                         shift and go to state 134
    var                            shift and go to state 135
    call                           shift and go to state 136
    factor_aux                     shift and go to state 137
    cte                            shift and go to state 139

state 120

    (45) statutes -> CALL call SEMICOLON .

    ASSIGN          reduce using rule 45 (statutes -> CALL call SEMICOLON .)
    CALL            reduce using rule 45 (statutes -> CALL call SEMICOLON .)
    READ            reduce using rule 45 (statutes -> CALL call SEMICOLON .)
    WRITE           reduce using rule 45 (statutes -> CALL call SEMICOLON .)
    IF              reduce using rule 45 (statutes -> CALL call SEMICOLON .)
    WHILE           reduce using rule 45 (statutes -> CALL call SEMICOLON .)
    FROM            reduce using rule 45 (statutes -> CALL call SEMICOLON .)
    RBRACE          reduce using rule 45 (statutes -> CALL call SEMICOLON .)
    RETURN          reduce using rule 45 (statutes -> CALL call SEMICOLON .)


state 121

    (61) call -> ID LPAREN . RPAREN
    (63) call -> ID LPAREN . call_aux RPAREN
    (65) call_aux -> . exp
    (66) call_aux -> . exp COMMA call_aux
    (81) exp -> . n_exp
    (82) exp -> . n_exp OR exp
    (83) n_exp -> . l_exp
    (84) n_exp -> . l_exp AND n_exp
    (85) l_exp -> . a_exp
    (86) l_exp -> . a_exp RELOP a_exp
    (87) a_exp -> . term
    (88) a_exp -> . term PLUS a_exp
    (89) a_exp -> . term MINUS a_exp
    (90) term -> . factor
    (91) term -> . factor TIMES term
    (92) term -> . factor DIVIDE term
    (93) factor -> . LPAREN exp RPAREN
    (94) factor -> . var
    (95) factor -> . call
    (96) factor -> . factor_aux
    (54) var -> . ID
    (55) var -> . ID var_aux
    (61) call -> . ID LPAREN RPAREN
    (62) call -> . ID POINT ID LPAREN RPAREN
    (63) call -> . ID LPAREN call_aux RPAREN
    (64) call -> . ID POINT ID LPAREN call_aux RPAREN
    (97) factor_aux -> . cte
    (98) factor_aux -> . PLUS cte
    (99) factor_aux -> . MINUS cte
    (100) cte -> . ID
    (101) cte -> . CTEI
    (102) cte -> . CTEF
    (103) cte -> . CTECHAR

    RPAREN          shift and go to state 155
    LPAREN          shift and go to state 124
    ID              shift and go to state 138
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    CTEI            shift and go to state 140
    CTEF            shift and go to state 141
    CTECHAR         shift and go to state 142

    call_aux                       shift and go to state 156
    exp                            shift and go to state 157
    n_exp                          shift and go to state 128
    l_exp                          shift and go to state 129
    a_exp                          shift and go to state 130
    term                           shift and go to state 131
    factor                         shift and go to state 134
    var                            shift and go to state 135
    call                           shift and go to state 136
    factor_aux                     shift and go to state 137
    cte                            shift and go to state 139

state 122

    (62) call -> ID POINT . ID LPAREN RPAREN
    (64) call -> ID POINT . ID LPAREN call_aux RPAREN

    ID              shift and go to state 158


state 123

    (73) read -> READ LPAREN var . RPAREN SEMICOLON

    RPAREN          shift and go to state 159


state 124

    (93) factor -> LPAREN . exp RPAREN
    (81) exp -> . n_exp
    (82) exp -> . n_exp OR exp
    (83) n_exp -> . l_exp
    (84) n_exp -> . l_exp AND n_exp
    (85) l_exp -> . a_exp
    (86) l_exp -> . a_exp RELOP a_exp
    (87) a_exp -> . term
    (88) a_exp -> . term PLUS a_exp
    (89) a_exp -> . term MINUS a_exp
    (90) term -> . factor
    (91) term -> . factor TIMES term
    (92) term -> . factor DIVIDE term
    (93) factor -> . LPAREN exp RPAREN
    (94) factor -> . var
    (95) factor -> . call
    (96) factor -> . factor_aux
    (54) var -> . ID
    (55) var -> . ID var_aux
    (61) call -> . ID LPAREN RPAREN
    (62) call -> . ID POINT ID LPAREN RPAREN
    (63) call -> . ID LPAREN call_aux RPAREN
    (64) call -> . ID POINT ID LPAREN call_aux RPAREN
    (97) factor_aux -> . cte
    (98) factor_aux -> . PLUS cte
    (99) factor_aux -> . MINUS cte
    (100) cte -> . ID
    (101) cte -> . CTEI
    (102) cte -> . CTEF
    (103) cte -> . CTECHAR

    LPAREN          shift and go to state 124
    ID              shift and go to state 138
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    CTEI            shift and go to state 140
    CTEF            shift and go to state 141
    CTECHAR         shift and go to state 142

    exp                            shift and go to state 160
    n_exp                          shift and go to state 128
    l_exp                          shift and go to state 129
    a_exp                          shift and go to state 130
    term                           shift and go to state 131
    factor                         shift and go to state 134
    var                            shift and go to state 135
    call                           shift and go to state 136
    factor_aux                     shift and go to state 137
    cte                            shift and go to state 139

state 125

    (74) write -> WRITE LPAREN write_aux . RPAREN SEMICOLON

    RPAREN          shift and go to state 161


state 126

    (75) write_aux -> exp .
    (76) write_aux -> exp . COMMA write_aux

    RPAREN          reduce using rule 75 (write_aux -> exp .)
    COMMA           shift and go to state 162


state 127

    (77) write_aux -> CTESTRING .
    (78) write_aux -> CTESTRING . COMMA write_aux

    RPAREN          reduce using rule 77 (write_aux -> CTESTRING .)
    COMMA           shift and go to state 163


state 128

    (81) exp -> n_exp .
    (82) exp -> n_exp . OR exp

    COMMA           reduce using rule 81 (exp -> n_exp .)
    RPAREN          reduce using rule 81 (exp -> n_exp .)
    SEMICOLON       reduce using rule 81 (exp -> n_exp .)
    RBRACKET        reduce using rule 81 (exp -> n_exp .)
    OR              shift and go to state 164


state 129

    (83) n_exp -> l_exp .
    (84) n_exp -> l_exp . AND n_exp

    OR              reduce using rule 83 (n_exp -> l_exp .)
    COMMA           reduce using rule 83 (n_exp -> l_exp .)
    RPAREN          reduce using rule 83 (n_exp -> l_exp .)
    SEMICOLON       reduce using rule 83 (n_exp -> l_exp .)
    RBRACKET        reduce using rule 83 (n_exp -> l_exp .)
    AND             shift and go to state 165


state 130

    (85) l_exp -> a_exp .
    (86) l_exp -> a_exp . RELOP a_exp

    AND             reduce using rule 85 (l_exp -> a_exp .)
    OR              reduce using rule 85 (l_exp -> a_exp .)
    COMMA           reduce using rule 85 (l_exp -> a_exp .)
    RPAREN          reduce using rule 85 (l_exp -> a_exp .)
    SEMICOLON       reduce using rule 85 (l_exp -> a_exp .)
    RBRACKET        reduce using rule 85 (l_exp -> a_exp .)
    RELOP           shift and go to state 166


state 131

    (87) a_exp -> term .
    (88) a_exp -> term . PLUS a_exp
    (89) a_exp -> term . MINUS a_exp

    RELOP           reduce using rule 87 (a_exp -> term .)
    AND             reduce using rule 87 (a_exp -> term .)
    OR              reduce using rule 87 (a_exp -> term .)
    COMMA           reduce using rule 87 (a_exp -> term .)
    RPAREN          reduce using rule 87 (a_exp -> term .)
    SEMICOLON       reduce using rule 87 (a_exp -> term .)
    RBRACKET        reduce using rule 87 (a_exp -> term .)
    PLUS            shift and go to state 167
    MINUS           shift and go to state 168


state 132

    (98) factor_aux -> PLUS . cte
    (100) cte -> . ID
    (101) cte -> . CTEI
    (102) cte -> . CTEF
    (103) cte -> . CTECHAR

    ID              shift and go to state 170
    CTEI            shift and go to state 140
    CTEF            shift and go to state 141
    CTECHAR         shift and go to state 142

    cte                            shift and go to state 169

state 133

    (99) factor_aux -> MINUS . cte
    (100) cte -> . ID
    (101) cte -> . CTEI
    (102) cte -> . CTEF
    (103) cte -> . CTECHAR

    ID              shift and go to state 170
    CTEI            shift and go to state 140
    CTEF            shift and go to state 141
    CTECHAR         shift and go to state 142

    cte                            shift and go to state 171

state 134

    (90) term -> factor .
    (91) term -> factor . TIMES term
    (92) term -> factor . DIVIDE term

    PLUS            reduce using rule 90 (term -> factor .)
    MINUS           reduce using rule 90 (term -> factor .)
    RELOP           reduce using rule 90 (term -> factor .)
    AND             reduce using rule 90 (term -> factor .)
    OR              reduce using rule 90 (term -> factor .)
    COMMA           reduce using rule 90 (term -> factor .)
    RPAREN          reduce using rule 90 (term -> factor .)
    SEMICOLON       reduce using rule 90 (term -> factor .)
    RBRACKET        reduce using rule 90 (term -> factor .)
    TIMES           shift and go to state 172
    DIVIDE          shift and go to state 173


state 135

    (94) factor -> var .

    TIMES           reduce using rule 94 (factor -> var .)
    DIVIDE          reduce using rule 94 (factor -> var .)
    PLUS            reduce using rule 94 (factor -> var .)
    MINUS           reduce using rule 94 (factor -> var .)
    RELOP           reduce using rule 94 (factor -> var .)
    AND             reduce using rule 94 (factor -> var .)
    OR              reduce using rule 94 (factor -> var .)
    COMMA           reduce using rule 94 (factor -> var .)
    RPAREN          reduce using rule 94 (factor -> var .)
    SEMICOLON       reduce using rule 94 (factor -> var .)
    RBRACKET        reduce using rule 94 (factor -> var .)


state 136

    (95) factor -> call .

    TIMES           reduce using rule 95 (factor -> call .)
    DIVIDE          reduce using rule 95 (factor -> call .)
    PLUS            reduce using rule 95 (factor -> call .)
    MINUS           reduce using rule 95 (factor -> call .)
    RELOP           reduce using rule 95 (factor -> call .)
    AND             reduce using rule 95 (factor -> call .)
    OR              reduce using rule 95 (factor -> call .)
    COMMA           reduce using rule 95 (factor -> call .)
    RPAREN          reduce using rule 95 (factor -> call .)
    SEMICOLON       reduce using rule 95 (factor -> call .)
    RBRACKET        reduce using rule 95 (factor -> call .)


state 137

    (96) factor -> factor_aux .

    TIMES           reduce using rule 96 (factor -> factor_aux .)
    DIVIDE          reduce using rule 96 (factor -> factor_aux .)
    PLUS            reduce using rule 96 (factor -> factor_aux .)
    MINUS           reduce using rule 96 (factor -> factor_aux .)
    RELOP           reduce using rule 96 (factor -> factor_aux .)
    AND             reduce using rule 96 (factor -> factor_aux .)
    OR              reduce using rule 96 (factor -> factor_aux .)
    COMMA           reduce using rule 96 (factor -> factor_aux .)
    RPAREN          reduce using rule 96 (factor -> factor_aux .)
    SEMICOLON       reduce using rule 96 (factor -> factor_aux .)
    RBRACKET        reduce using rule 96 (factor -> factor_aux .)


state 138

    (54) var -> ID .
    (55) var -> ID . var_aux
    (61) call -> ID . LPAREN RPAREN
    (62) call -> ID . POINT ID LPAREN RPAREN
    (63) call -> ID . LPAREN call_aux RPAREN
    (64) call -> ID . POINT ID LPAREN call_aux RPAREN
    (100) cte -> ID .
    (56) var_aux -> . POINT ID
    (57) var_aux -> . POINT ID var_aux_2
    (58) var_aux -> . var_aux_2
    (59) var_aux_2 -> . LBRACKET exp RBRACKET
    (60) var_aux_2 -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET

  ! reduce/reduce conflict for TIMES resolved using rule 54 (var -> ID .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 54 (var -> ID .)
  ! reduce/reduce conflict for PLUS resolved using rule 54 (var -> ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 54 (var -> ID .)
  ! reduce/reduce conflict for RELOP resolved using rule 54 (var -> ID .)
  ! reduce/reduce conflict for AND resolved using rule 54 (var -> ID .)
  ! reduce/reduce conflict for OR resolved using rule 54 (var -> ID .)
  ! reduce/reduce conflict for COMMA resolved using rule 54 (var -> ID .)
  ! reduce/reduce conflict for RPAREN resolved using rule 54 (var -> ID .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 54 (var -> ID .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 54 (var -> ID .)
    TIMES           reduce using rule 54 (var -> ID .)
    DIVIDE          reduce using rule 54 (var -> ID .)
    PLUS            reduce using rule 54 (var -> ID .)
    MINUS           reduce using rule 54 (var -> ID .)
    RELOP           reduce using rule 54 (var -> ID .)
    AND             reduce using rule 54 (var -> ID .)
    OR              reduce using rule 54 (var -> ID .)
    COMMA           reduce using rule 54 (var -> ID .)
    RPAREN          reduce using rule 54 (var -> ID .)
    SEMICOLON       reduce using rule 54 (var -> ID .)
    RBRACKET        reduce using rule 54 (var -> ID .)
    LPAREN          shift and go to state 121
    POINT           shift and go to state 174
    LBRACKET        shift and go to state 119

  ! TIMES           [ reduce using rule 100 (cte -> ID .) ]
  ! DIVIDE          [ reduce using rule 100 (cte -> ID .) ]
  ! PLUS            [ reduce using rule 100 (cte -> ID .) ]
  ! MINUS           [ reduce using rule 100 (cte -> ID .) ]
  ! RELOP           [ reduce using rule 100 (cte -> ID .) ]
  ! AND             [ reduce using rule 100 (cte -> ID .) ]
  ! OR              [ reduce using rule 100 (cte -> ID .) ]
  ! COMMA           [ reduce using rule 100 (cte -> ID .) ]
  ! RPAREN          [ reduce using rule 100 (cte -> ID .) ]
  ! SEMICOLON       [ reduce using rule 100 (cte -> ID .) ]
  ! RBRACKET        [ reduce using rule 100 (cte -> ID .) ]

    var_aux                        shift and go to state 116
    var_aux_2                      shift and go to state 118

state 139

    (97) factor_aux -> cte .

    TIMES           reduce using rule 97 (factor_aux -> cte .)
    DIVIDE          reduce using rule 97 (factor_aux -> cte .)
    PLUS            reduce using rule 97 (factor_aux -> cte .)
    MINUS           reduce using rule 97 (factor_aux -> cte .)
    RELOP           reduce using rule 97 (factor_aux -> cte .)
    AND             reduce using rule 97 (factor_aux -> cte .)
    OR              reduce using rule 97 (factor_aux -> cte .)
    COMMA           reduce using rule 97 (factor_aux -> cte .)
    RPAREN          reduce using rule 97 (factor_aux -> cte .)
    SEMICOLON       reduce using rule 97 (factor_aux -> cte .)
    RBRACKET        reduce using rule 97 (factor_aux -> cte .)


state 140

    (101) cte -> CTEI .

    TIMES           reduce using rule 101 (cte -> CTEI .)
    DIVIDE          reduce using rule 101 (cte -> CTEI .)
    PLUS            reduce using rule 101 (cte -> CTEI .)
    MINUS           reduce using rule 101 (cte -> CTEI .)
    RELOP           reduce using rule 101 (cte -> CTEI .)
    AND             reduce using rule 101 (cte -> CTEI .)
    OR              reduce using rule 101 (cte -> CTEI .)
    COMMA           reduce using rule 101 (cte -> CTEI .)
    RPAREN          reduce using rule 101 (cte -> CTEI .)
    SEMICOLON       reduce using rule 101 (cte -> CTEI .)
    RBRACKET        reduce using rule 101 (cte -> CTEI .)


state 141

    (102) cte -> CTEF .

    TIMES           reduce using rule 102 (cte -> CTEF .)
    DIVIDE          reduce using rule 102 (cte -> CTEF .)
    PLUS            reduce using rule 102 (cte -> CTEF .)
    MINUS           reduce using rule 102 (cte -> CTEF .)
    RELOP           reduce using rule 102 (cte -> CTEF .)
    AND             reduce using rule 102 (cte -> CTEF .)
    OR              reduce using rule 102 (cte -> CTEF .)
    COMMA           reduce using rule 102 (cte -> CTEF .)
    RPAREN          reduce using rule 102 (cte -> CTEF .)
    SEMICOLON       reduce using rule 102 (cte -> CTEF .)
    RBRACKET        reduce using rule 102 (cte -> CTEF .)


state 142

    (103) cte -> CTECHAR .

    TIMES           reduce using rule 103 (cte -> CTECHAR .)
    DIVIDE          reduce using rule 103 (cte -> CTECHAR .)
    PLUS            reduce using rule 103 (cte -> CTECHAR .)
    MINUS           reduce using rule 103 (cte -> CTECHAR .)
    RELOP           reduce using rule 103 (cte -> CTECHAR .)
    AND             reduce using rule 103 (cte -> CTECHAR .)
    OR              reduce using rule 103 (cte -> CTECHAR .)
    COMMA           reduce using rule 103 (cte -> CTECHAR .)
    RPAREN          reduce using rule 103 (cte -> CTECHAR .)
    SEMICOLON       reduce using rule 103 (cte -> CTECHAR .)
    RBRACKET        reduce using rule 103 (cte -> CTECHAR .)


state 143

    (68) condition_aux -> LPAREN exp . RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3
    (70) condition_aux_2 -> LPAREN exp . RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux

    RPAREN          shift and go to state 175


state 144

    (79) while -> WHILE LPAREN exp . RPAREN DO LBRACE statutes_aux RBRACE

    RPAREN          shift and go to state 176


state 145

    (80) for -> FROM LPAREN assignation . RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    RPAREN          shift and go to state 177


state 146

    (21) vars_simple_type_aux -> LBRACKET CTEI RBRACKET LBRACKET . CTEI RBRACKET

    CTEI            shift and go to state 178


state 147

    (34) functions_aux -> VOID ID LPAREN params RPAREN body .

    FUNCT           reduce using rule 34 (functions_aux -> VOID ID LPAREN params RPAREN body .)
    RBRACE          reduce using rule 34 (functions_aux -> VOID ID LPAREN params RPAREN body .)
    MAIN            reduce using rule 34 (functions_aux -> VOID ID LPAREN params RPAREN body .)


state 148

    (40) body -> LBRACE dec_vars . statutes_aux RBRACE
    (43) body -> LBRACE dec_vars . statutes_aux RETURN ID SEMICOLON RBRACE
    (51) statutes_aux -> . statutes
    (52) statutes_aux -> . statutes statutes_aux
    (44) statutes -> . ASSIGN assignation SEMICOLON
    (45) statutes -> . CALL call SEMICOLON
    (46) statutes -> . read
    (47) statutes -> . write
    (48) statutes -> . condition
    (49) statutes -> . while
    (50) statutes -> . for
    (73) read -> . READ LPAREN var RPAREN SEMICOLON
    (74) write -> . WRITE LPAREN write_aux RPAREN SEMICOLON
    (67) condition -> . IF condition_aux
    (79) while -> . WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (80) for -> . FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    ASSIGN          shift and go to state 66
    CALL            shift and go to state 67
    READ            shift and go to state 73
    WRITE           shift and go to state 74
    IF              shift and go to state 75
    WHILE           shift and go to state 76
    FROM            shift and go to state 77

    statutes_aux                   shift and go to state 179
    statutes                       shift and go to state 65
    read                           shift and go to state 68
    write                          shift and go to state 69
    condition                      shift and go to state 70
    while                          shift and go to state 71
    for                            shift and go to state 72

state 149

    (41) body -> LBRACE statutes_aux . RBRACE
    (42) body -> LBRACE statutes_aux . RETURN ID SEMICOLON RBRACE

    RBRACE          shift and go to state 180
    RETURN          shift and go to state 181


state 150

    (39) params -> simple_type ID COMMA . params
    (38) params -> . simple_type ID
    (39) params -> . simple_type ID COMMA params
    (22) simple_type -> . INT
    (23) simple_type -> . FLOAT
    (24) simple_type -> . CHAR

    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    CHAR            shift and go to state 30

    simple_type                    shift and go to state 86
    params                         shift and go to state 182

state 151

    (37) functions_aux -> simple_type ID LPAREN params RPAREN body .

    FUNCT           reduce using rule 37 (functions_aux -> simple_type ID LPAREN params RPAREN body .)
    RBRACE          reduce using rule 37 (functions_aux -> simple_type ID LPAREN params RPAREN body .)
    MAIN            reduce using rule 37 (functions_aux -> simple_type ID LPAREN params RPAREN body .)


state 152

    (53) assignation -> var EQUAL exp .

    SEMICOLON       reduce using rule 53 (assignation -> var EQUAL exp .)
    RPAREN          reduce using rule 53 (assignation -> var EQUAL exp .)


state 153

    (56) var_aux -> POINT ID .
    (57) var_aux -> POINT ID . var_aux_2
    (59) var_aux_2 -> . LBRACKET exp RBRACKET
    (60) var_aux_2 -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET

    EQUAL           reduce using rule 56 (var_aux -> POINT ID .)
    RPAREN          reduce using rule 56 (var_aux -> POINT ID .)
    LBRACKET        shift and go to state 119

    var_aux_2                      shift and go to state 183

state 154

    (59) var_aux_2 -> LBRACKET exp . RBRACKET
    (60) var_aux_2 -> LBRACKET exp . RBRACKET LBRACKET exp RBRACKET

    RBRACKET        shift and go to state 184


state 155

    (61) call -> ID LPAREN RPAREN .

    SEMICOLON       reduce using rule 61 (call -> ID LPAREN RPAREN .)
    TIMES           reduce using rule 61 (call -> ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 61 (call -> ID LPAREN RPAREN .)
    PLUS            reduce using rule 61 (call -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 61 (call -> ID LPAREN RPAREN .)
    RELOP           reduce using rule 61 (call -> ID LPAREN RPAREN .)
    AND             reduce using rule 61 (call -> ID LPAREN RPAREN .)
    OR              reduce using rule 61 (call -> ID LPAREN RPAREN .)
    COMMA           reduce using rule 61 (call -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 61 (call -> ID LPAREN RPAREN .)
    RBRACKET        reduce using rule 61 (call -> ID LPAREN RPAREN .)


state 156

    (63) call -> ID LPAREN call_aux . RPAREN

    RPAREN          shift and go to state 185


state 157

    (65) call_aux -> exp .
    (66) call_aux -> exp . COMMA call_aux

    RPAREN          reduce using rule 65 (call_aux -> exp .)
    COMMA           shift and go to state 186


state 158

    (62) call -> ID POINT ID . LPAREN RPAREN
    (64) call -> ID POINT ID . LPAREN call_aux RPAREN

    LPAREN          shift and go to state 187


state 159

    (73) read -> READ LPAREN var RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 188


state 160

    (93) factor -> LPAREN exp . RPAREN

    RPAREN          shift and go to state 189


state 161

    (74) write -> WRITE LPAREN write_aux RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 190


state 162

    (76) write_aux -> exp COMMA . write_aux
    (75) write_aux -> . exp
    (76) write_aux -> . exp COMMA write_aux
    (77) write_aux -> . CTESTRING
    (78) write_aux -> . CTESTRING COMMA write_aux
    (81) exp -> . n_exp
    (82) exp -> . n_exp OR exp
    (83) n_exp -> . l_exp
    (84) n_exp -> . l_exp AND n_exp
    (85) l_exp -> . a_exp
    (86) l_exp -> . a_exp RELOP a_exp
    (87) a_exp -> . term
    (88) a_exp -> . term PLUS a_exp
    (89) a_exp -> . term MINUS a_exp
    (90) term -> . factor
    (91) term -> . factor TIMES term
    (92) term -> . factor DIVIDE term
    (93) factor -> . LPAREN exp RPAREN
    (94) factor -> . var
    (95) factor -> . call
    (96) factor -> . factor_aux
    (54) var -> . ID
    (55) var -> . ID var_aux
    (61) call -> . ID LPAREN RPAREN
    (62) call -> . ID POINT ID LPAREN RPAREN
    (63) call -> . ID LPAREN call_aux RPAREN
    (64) call -> . ID POINT ID LPAREN call_aux RPAREN
    (97) factor_aux -> . cte
    (98) factor_aux -> . PLUS cte
    (99) factor_aux -> . MINUS cte
    (100) cte -> . ID
    (101) cte -> . CTEI
    (102) cte -> . CTEF
    (103) cte -> . CTECHAR

    CTESTRING       shift and go to state 127
    LPAREN          shift and go to state 124
    ID              shift and go to state 138
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    CTEI            shift and go to state 140
    CTEF            shift and go to state 141
    CTECHAR         shift and go to state 142

    exp                            shift and go to state 126
    write_aux                      shift and go to state 191
    n_exp                          shift and go to state 128
    l_exp                          shift and go to state 129
    a_exp                          shift and go to state 130
    term                           shift and go to state 131
    factor                         shift and go to state 134
    var                            shift and go to state 135
    call                           shift and go to state 136
    factor_aux                     shift and go to state 137
    cte                            shift and go to state 139

state 163

    (78) write_aux -> CTESTRING COMMA . write_aux
    (75) write_aux -> . exp
    (76) write_aux -> . exp COMMA write_aux
    (77) write_aux -> . CTESTRING
    (78) write_aux -> . CTESTRING COMMA write_aux
    (81) exp -> . n_exp
    (82) exp -> . n_exp OR exp
    (83) n_exp -> . l_exp
    (84) n_exp -> . l_exp AND n_exp
    (85) l_exp -> . a_exp
    (86) l_exp -> . a_exp RELOP a_exp
    (87) a_exp -> . term
    (88) a_exp -> . term PLUS a_exp
    (89) a_exp -> . term MINUS a_exp
    (90) term -> . factor
    (91) term -> . factor TIMES term
    (92) term -> . factor DIVIDE term
    (93) factor -> . LPAREN exp RPAREN
    (94) factor -> . var
    (95) factor -> . call
    (96) factor -> . factor_aux
    (54) var -> . ID
    (55) var -> . ID var_aux
    (61) call -> . ID LPAREN RPAREN
    (62) call -> . ID POINT ID LPAREN RPAREN
    (63) call -> . ID LPAREN call_aux RPAREN
    (64) call -> . ID POINT ID LPAREN call_aux RPAREN
    (97) factor_aux -> . cte
    (98) factor_aux -> . PLUS cte
    (99) factor_aux -> . MINUS cte
    (100) cte -> . ID
    (101) cte -> . CTEI
    (102) cte -> . CTEF
    (103) cte -> . CTECHAR

    CTESTRING       shift and go to state 127
    LPAREN          shift and go to state 124
    ID              shift and go to state 138
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    CTEI            shift and go to state 140
    CTEF            shift and go to state 141
    CTECHAR         shift and go to state 142

    write_aux                      shift and go to state 192
    exp                            shift and go to state 126
    n_exp                          shift and go to state 128
    l_exp                          shift and go to state 129
    a_exp                          shift and go to state 130
    term                           shift and go to state 131
    factor                         shift and go to state 134
    var                            shift and go to state 135
    call                           shift and go to state 136
    factor_aux                     shift and go to state 137
    cte                            shift and go to state 139

state 164

    (82) exp -> n_exp OR . exp
    (81) exp -> . n_exp
    (82) exp -> . n_exp OR exp
    (83) n_exp -> . l_exp
    (84) n_exp -> . l_exp AND n_exp
    (85) l_exp -> . a_exp
    (86) l_exp -> . a_exp RELOP a_exp
    (87) a_exp -> . term
    (88) a_exp -> . term PLUS a_exp
    (89) a_exp -> . term MINUS a_exp
    (90) term -> . factor
    (91) term -> . factor TIMES term
    (92) term -> . factor DIVIDE term
    (93) factor -> . LPAREN exp RPAREN
    (94) factor -> . var
    (95) factor -> . call
    (96) factor -> . factor_aux
    (54) var -> . ID
    (55) var -> . ID var_aux
    (61) call -> . ID LPAREN RPAREN
    (62) call -> . ID POINT ID LPAREN RPAREN
    (63) call -> . ID LPAREN call_aux RPAREN
    (64) call -> . ID POINT ID LPAREN call_aux RPAREN
    (97) factor_aux -> . cte
    (98) factor_aux -> . PLUS cte
    (99) factor_aux -> . MINUS cte
    (100) cte -> . ID
    (101) cte -> . CTEI
    (102) cte -> . CTEF
    (103) cte -> . CTECHAR

    LPAREN          shift and go to state 124
    ID              shift and go to state 138
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    CTEI            shift and go to state 140
    CTEF            shift and go to state 141
    CTECHAR         shift and go to state 142

    n_exp                          shift and go to state 128
    exp                            shift and go to state 193
    l_exp                          shift and go to state 129
    a_exp                          shift and go to state 130
    term                           shift and go to state 131
    factor                         shift and go to state 134
    var                            shift and go to state 135
    call                           shift and go to state 136
    factor_aux                     shift and go to state 137
    cte                            shift and go to state 139

state 165

    (84) n_exp -> l_exp AND . n_exp
    (83) n_exp -> . l_exp
    (84) n_exp -> . l_exp AND n_exp
    (85) l_exp -> . a_exp
    (86) l_exp -> . a_exp RELOP a_exp
    (87) a_exp -> . term
    (88) a_exp -> . term PLUS a_exp
    (89) a_exp -> . term MINUS a_exp
    (90) term -> . factor
    (91) term -> . factor TIMES term
    (92) term -> . factor DIVIDE term
    (93) factor -> . LPAREN exp RPAREN
    (94) factor -> . var
    (95) factor -> . call
    (96) factor -> . factor_aux
    (54) var -> . ID
    (55) var -> . ID var_aux
    (61) call -> . ID LPAREN RPAREN
    (62) call -> . ID POINT ID LPAREN RPAREN
    (63) call -> . ID LPAREN call_aux RPAREN
    (64) call -> . ID POINT ID LPAREN call_aux RPAREN
    (97) factor_aux -> . cte
    (98) factor_aux -> . PLUS cte
    (99) factor_aux -> . MINUS cte
    (100) cte -> . ID
    (101) cte -> . CTEI
    (102) cte -> . CTEF
    (103) cte -> . CTECHAR

    LPAREN          shift and go to state 124
    ID              shift and go to state 138
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    CTEI            shift and go to state 140
    CTEF            shift and go to state 141
    CTECHAR         shift and go to state 142

    l_exp                          shift and go to state 129
    n_exp                          shift and go to state 194
    a_exp                          shift and go to state 130
    term                           shift and go to state 131
    factor                         shift and go to state 134
    var                            shift and go to state 135
    call                           shift and go to state 136
    factor_aux                     shift and go to state 137
    cte                            shift and go to state 139

state 166

    (86) l_exp -> a_exp RELOP . a_exp
    (87) a_exp -> . term
    (88) a_exp -> . term PLUS a_exp
    (89) a_exp -> . term MINUS a_exp
    (90) term -> . factor
    (91) term -> . factor TIMES term
    (92) term -> . factor DIVIDE term
    (93) factor -> . LPAREN exp RPAREN
    (94) factor -> . var
    (95) factor -> . call
    (96) factor -> . factor_aux
    (54) var -> . ID
    (55) var -> . ID var_aux
    (61) call -> . ID LPAREN RPAREN
    (62) call -> . ID POINT ID LPAREN RPAREN
    (63) call -> . ID LPAREN call_aux RPAREN
    (64) call -> . ID POINT ID LPAREN call_aux RPAREN
    (97) factor_aux -> . cte
    (98) factor_aux -> . PLUS cte
    (99) factor_aux -> . MINUS cte
    (100) cte -> . ID
    (101) cte -> . CTEI
    (102) cte -> . CTEF
    (103) cte -> . CTECHAR

    LPAREN          shift and go to state 124
    ID              shift and go to state 138
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    CTEI            shift and go to state 140
    CTEF            shift and go to state 141
    CTECHAR         shift and go to state 142

    a_exp                          shift and go to state 195
    term                           shift and go to state 131
    factor                         shift and go to state 134
    var                            shift and go to state 135
    call                           shift and go to state 136
    factor_aux                     shift and go to state 137
    cte                            shift and go to state 139

state 167

    (88) a_exp -> term PLUS . a_exp
    (87) a_exp -> . term
    (88) a_exp -> . term PLUS a_exp
    (89) a_exp -> . term MINUS a_exp
    (90) term -> . factor
    (91) term -> . factor TIMES term
    (92) term -> . factor DIVIDE term
    (93) factor -> . LPAREN exp RPAREN
    (94) factor -> . var
    (95) factor -> . call
    (96) factor -> . factor_aux
    (54) var -> . ID
    (55) var -> . ID var_aux
    (61) call -> . ID LPAREN RPAREN
    (62) call -> . ID POINT ID LPAREN RPAREN
    (63) call -> . ID LPAREN call_aux RPAREN
    (64) call -> . ID POINT ID LPAREN call_aux RPAREN
    (97) factor_aux -> . cte
    (98) factor_aux -> . PLUS cte
    (99) factor_aux -> . MINUS cte
    (100) cte -> . ID
    (101) cte -> . CTEI
    (102) cte -> . CTEF
    (103) cte -> . CTECHAR

    LPAREN          shift and go to state 124
    ID              shift and go to state 138
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    CTEI            shift and go to state 140
    CTEF            shift and go to state 141
    CTECHAR         shift and go to state 142

    term                           shift and go to state 131
    a_exp                          shift and go to state 196
    factor                         shift and go to state 134
    var                            shift and go to state 135
    call                           shift and go to state 136
    factor_aux                     shift and go to state 137
    cte                            shift and go to state 139

state 168

    (89) a_exp -> term MINUS . a_exp
    (87) a_exp -> . term
    (88) a_exp -> . term PLUS a_exp
    (89) a_exp -> . term MINUS a_exp
    (90) term -> . factor
    (91) term -> . factor TIMES term
    (92) term -> . factor DIVIDE term
    (93) factor -> . LPAREN exp RPAREN
    (94) factor -> . var
    (95) factor -> . call
    (96) factor -> . factor_aux
    (54) var -> . ID
    (55) var -> . ID var_aux
    (61) call -> . ID LPAREN RPAREN
    (62) call -> . ID POINT ID LPAREN RPAREN
    (63) call -> . ID LPAREN call_aux RPAREN
    (64) call -> . ID POINT ID LPAREN call_aux RPAREN
    (97) factor_aux -> . cte
    (98) factor_aux -> . PLUS cte
    (99) factor_aux -> . MINUS cte
    (100) cte -> . ID
    (101) cte -> . CTEI
    (102) cte -> . CTEF
    (103) cte -> . CTECHAR

    LPAREN          shift and go to state 124
    ID              shift and go to state 138
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    CTEI            shift and go to state 140
    CTEF            shift and go to state 141
    CTECHAR         shift and go to state 142

    term                           shift and go to state 131
    a_exp                          shift and go to state 197
    factor                         shift and go to state 134
    var                            shift and go to state 135
    call                           shift and go to state 136
    factor_aux                     shift and go to state 137
    cte                            shift and go to state 139

state 169

    (98) factor_aux -> PLUS cte .

    TIMES           reduce using rule 98 (factor_aux -> PLUS cte .)
    DIVIDE          reduce using rule 98 (factor_aux -> PLUS cte .)
    PLUS            reduce using rule 98 (factor_aux -> PLUS cte .)
    MINUS           reduce using rule 98 (factor_aux -> PLUS cte .)
    RELOP           reduce using rule 98 (factor_aux -> PLUS cte .)
    AND             reduce using rule 98 (factor_aux -> PLUS cte .)
    OR              reduce using rule 98 (factor_aux -> PLUS cte .)
    COMMA           reduce using rule 98 (factor_aux -> PLUS cte .)
    RPAREN          reduce using rule 98 (factor_aux -> PLUS cte .)
    SEMICOLON       reduce using rule 98 (factor_aux -> PLUS cte .)
    RBRACKET        reduce using rule 98 (factor_aux -> PLUS cte .)


state 170

    (100) cte -> ID .

    TIMES           reduce using rule 100 (cte -> ID .)
    DIVIDE          reduce using rule 100 (cte -> ID .)
    PLUS            reduce using rule 100 (cte -> ID .)
    MINUS           reduce using rule 100 (cte -> ID .)
    RELOP           reduce using rule 100 (cte -> ID .)
    AND             reduce using rule 100 (cte -> ID .)
    OR              reduce using rule 100 (cte -> ID .)
    COMMA           reduce using rule 100 (cte -> ID .)
    RPAREN          reduce using rule 100 (cte -> ID .)
    SEMICOLON       reduce using rule 100 (cte -> ID .)
    RBRACKET        reduce using rule 100 (cte -> ID .)


state 171

    (99) factor_aux -> MINUS cte .

    TIMES           reduce using rule 99 (factor_aux -> MINUS cte .)
    DIVIDE          reduce using rule 99 (factor_aux -> MINUS cte .)
    PLUS            reduce using rule 99 (factor_aux -> MINUS cte .)
    MINUS           reduce using rule 99 (factor_aux -> MINUS cte .)
    RELOP           reduce using rule 99 (factor_aux -> MINUS cte .)
    AND             reduce using rule 99 (factor_aux -> MINUS cte .)
    OR              reduce using rule 99 (factor_aux -> MINUS cte .)
    COMMA           reduce using rule 99 (factor_aux -> MINUS cte .)
    RPAREN          reduce using rule 99 (factor_aux -> MINUS cte .)
    SEMICOLON       reduce using rule 99 (factor_aux -> MINUS cte .)
    RBRACKET        reduce using rule 99 (factor_aux -> MINUS cte .)


state 172

    (91) term -> factor TIMES . term
    (90) term -> . factor
    (91) term -> . factor TIMES term
    (92) term -> . factor DIVIDE term
    (93) factor -> . LPAREN exp RPAREN
    (94) factor -> . var
    (95) factor -> . call
    (96) factor -> . factor_aux
    (54) var -> . ID
    (55) var -> . ID var_aux
    (61) call -> . ID LPAREN RPAREN
    (62) call -> . ID POINT ID LPAREN RPAREN
    (63) call -> . ID LPAREN call_aux RPAREN
    (64) call -> . ID POINT ID LPAREN call_aux RPAREN
    (97) factor_aux -> . cte
    (98) factor_aux -> . PLUS cte
    (99) factor_aux -> . MINUS cte
    (100) cte -> . ID
    (101) cte -> . CTEI
    (102) cte -> . CTEF
    (103) cte -> . CTECHAR

    LPAREN          shift and go to state 124
    ID              shift and go to state 138
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    CTEI            shift and go to state 140
    CTEF            shift and go to state 141
    CTECHAR         shift and go to state 142

    factor                         shift and go to state 134
    term                           shift and go to state 198
    var                            shift and go to state 135
    call                           shift and go to state 136
    factor_aux                     shift and go to state 137
    cte                            shift and go to state 139

state 173

    (92) term -> factor DIVIDE . term
    (90) term -> . factor
    (91) term -> . factor TIMES term
    (92) term -> . factor DIVIDE term
    (93) factor -> . LPAREN exp RPAREN
    (94) factor -> . var
    (95) factor -> . call
    (96) factor -> . factor_aux
    (54) var -> . ID
    (55) var -> . ID var_aux
    (61) call -> . ID LPAREN RPAREN
    (62) call -> . ID POINT ID LPAREN RPAREN
    (63) call -> . ID LPAREN call_aux RPAREN
    (64) call -> . ID POINT ID LPAREN call_aux RPAREN
    (97) factor_aux -> . cte
    (98) factor_aux -> . PLUS cte
    (99) factor_aux -> . MINUS cte
    (100) cte -> . ID
    (101) cte -> . CTEI
    (102) cte -> . CTEF
    (103) cte -> . CTECHAR

    LPAREN          shift and go to state 124
    ID              shift and go to state 138
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    CTEI            shift and go to state 140
    CTEF            shift and go to state 141
    CTECHAR         shift and go to state 142

    factor                         shift and go to state 134
    term                           shift and go to state 199
    var                            shift and go to state 135
    call                           shift and go to state 136
    factor_aux                     shift and go to state 137
    cte                            shift and go to state 139

state 174

    (62) call -> ID POINT . ID LPAREN RPAREN
    (64) call -> ID POINT . ID LPAREN call_aux RPAREN
    (56) var_aux -> POINT . ID
    (57) var_aux -> POINT . ID var_aux_2

    ID              shift and go to state 200


state 175

    (68) condition_aux -> LPAREN exp RPAREN . THEN LBRACE statutes_aux RBRACE condition_aux_3
    (70) condition_aux_2 -> LPAREN exp RPAREN . THEN LBRACE statutes_aux RBRACE ELIF condition_aux

    THEN            shift and go to state 201


state 176

    (79) while -> WHILE LPAREN exp RPAREN . DO LBRACE statutes_aux RBRACE

    DO              shift and go to state 202


state 177

    (80) for -> FROM LPAREN assignation RPAREN . UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    UNTIL           shift and go to state 203


state 178

    (21) vars_simple_type_aux -> LBRACKET CTEI RBRACKET LBRACKET CTEI . RBRACKET

    RBRACKET        shift and go to state 204


state 179

    (40) body -> LBRACE dec_vars statutes_aux . RBRACE
    (43) body -> LBRACE dec_vars statutes_aux . RETURN ID SEMICOLON RBRACE

    RBRACE          shift and go to state 205
    RETURN          shift and go to state 206


state 180

    (41) body -> LBRACE statutes_aux RBRACE .

    FUNCT           reduce using rule 41 (body -> LBRACE statutes_aux RBRACE .)
    RBRACE          reduce using rule 41 (body -> LBRACE statutes_aux RBRACE .)
    MAIN            reduce using rule 41 (body -> LBRACE statutes_aux RBRACE .)


state 181

    (42) body -> LBRACE statutes_aux RETURN . ID SEMICOLON RBRACE

    ID              shift and go to state 207


state 182

    (39) params -> simple_type ID COMMA params .

    RPAREN          reduce using rule 39 (params -> simple_type ID COMMA params .)


state 183

    (57) var_aux -> POINT ID var_aux_2 .

    EQUAL           reduce using rule 57 (var_aux -> POINT ID var_aux_2 .)
    RPAREN          reduce using rule 57 (var_aux -> POINT ID var_aux_2 .)
    TIMES           reduce using rule 57 (var_aux -> POINT ID var_aux_2 .)
    DIVIDE          reduce using rule 57 (var_aux -> POINT ID var_aux_2 .)
    PLUS            reduce using rule 57 (var_aux -> POINT ID var_aux_2 .)
    MINUS           reduce using rule 57 (var_aux -> POINT ID var_aux_2 .)
    RELOP           reduce using rule 57 (var_aux -> POINT ID var_aux_2 .)
    AND             reduce using rule 57 (var_aux -> POINT ID var_aux_2 .)
    OR              reduce using rule 57 (var_aux -> POINT ID var_aux_2 .)
    COMMA           reduce using rule 57 (var_aux -> POINT ID var_aux_2 .)
    SEMICOLON       reduce using rule 57 (var_aux -> POINT ID var_aux_2 .)
    RBRACKET        reduce using rule 57 (var_aux -> POINT ID var_aux_2 .)


state 184

    (59) var_aux_2 -> LBRACKET exp RBRACKET .
    (60) var_aux_2 -> LBRACKET exp RBRACKET . LBRACKET exp RBRACKET

    EQUAL           reduce using rule 59 (var_aux_2 -> LBRACKET exp RBRACKET .)
    RPAREN          reduce using rule 59 (var_aux_2 -> LBRACKET exp RBRACKET .)
    TIMES           reduce using rule 59 (var_aux_2 -> LBRACKET exp RBRACKET .)
    DIVIDE          reduce using rule 59 (var_aux_2 -> LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 59 (var_aux_2 -> LBRACKET exp RBRACKET .)
    MINUS           reduce using rule 59 (var_aux_2 -> LBRACKET exp RBRACKET .)
    RELOP           reduce using rule 59 (var_aux_2 -> LBRACKET exp RBRACKET .)
    AND             reduce using rule 59 (var_aux_2 -> LBRACKET exp RBRACKET .)
    OR              reduce using rule 59 (var_aux_2 -> LBRACKET exp RBRACKET .)
    COMMA           reduce using rule 59 (var_aux_2 -> LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 59 (var_aux_2 -> LBRACKET exp RBRACKET .)
    RBRACKET        reduce using rule 59 (var_aux_2 -> LBRACKET exp RBRACKET .)
    LBRACKET        shift and go to state 208


state 185

    (63) call -> ID LPAREN call_aux RPAREN .

    SEMICOLON       reduce using rule 63 (call -> ID LPAREN call_aux RPAREN .)
    TIMES           reduce using rule 63 (call -> ID LPAREN call_aux RPAREN .)
    DIVIDE          reduce using rule 63 (call -> ID LPAREN call_aux RPAREN .)
    PLUS            reduce using rule 63 (call -> ID LPAREN call_aux RPAREN .)
    MINUS           reduce using rule 63 (call -> ID LPAREN call_aux RPAREN .)
    RELOP           reduce using rule 63 (call -> ID LPAREN call_aux RPAREN .)
    AND             reduce using rule 63 (call -> ID LPAREN call_aux RPAREN .)
    OR              reduce using rule 63 (call -> ID LPAREN call_aux RPAREN .)
    COMMA           reduce using rule 63 (call -> ID LPAREN call_aux RPAREN .)
    RPAREN          reduce using rule 63 (call -> ID LPAREN call_aux RPAREN .)
    RBRACKET        reduce using rule 63 (call -> ID LPAREN call_aux RPAREN .)


state 186

    (66) call_aux -> exp COMMA . call_aux
    (65) call_aux -> . exp
    (66) call_aux -> . exp COMMA call_aux
    (81) exp -> . n_exp
    (82) exp -> . n_exp OR exp
    (83) n_exp -> . l_exp
    (84) n_exp -> . l_exp AND n_exp
    (85) l_exp -> . a_exp
    (86) l_exp -> . a_exp RELOP a_exp
    (87) a_exp -> . term
    (88) a_exp -> . term PLUS a_exp
    (89) a_exp -> . term MINUS a_exp
    (90) term -> . factor
    (91) term -> . factor TIMES term
    (92) term -> . factor DIVIDE term
    (93) factor -> . LPAREN exp RPAREN
    (94) factor -> . var
    (95) factor -> . call
    (96) factor -> . factor_aux
    (54) var -> . ID
    (55) var -> . ID var_aux
    (61) call -> . ID LPAREN RPAREN
    (62) call -> . ID POINT ID LPAREN RPAREN
    (63) call -> . ID LPAREN call_aux RPAREN
    (64) call -> . ID POINT ID LPAREN call_aux RPAREN
    (97) factor_aux -> . cte
    (98) factor_aux -> . PLUS cte
    (99) factor_aux -> . MINUS cte
    (100) cte -> . ID
    (101) cte -> . CTEI
    (102) cte -> . CTEF
    (103) cte -> . CTECHAR

    LPAREN          shift and go to state 124
    ID              shift and go to state 138
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    CTEI            shift and go to state 140
    CTEF            shift and go to state 141
    CTECHAR         shift and go to state 142

    exp                            shift and go to state 157
    call_aux                       shift and go to state 209
    n_exp                          shift and go to state 128
    l_exp                          shift and go to state 129
    a_exp                          shift and go to state 130
    term                           shift and go to state 131
    factor                         shift and go to state 134
    var                            shift and go to state 135
    call                           shift and go to state 136
    factor_aux                     shift and go to state 137
    cte                            shift and go to state 139

state 187

    (62) call -> ID POINT ID LPAREN . RPAREN
    (64) call -> ID POINT ID LPAREN . call_aux RPAREN
    (65) call_aux -> . exp
    (66) call_aux -> . exp COMMA call_aux
    (81) exp -> . n_exp
    (82) exp -> . n_exp OR exp
    (83) n_exp -> . l_exp
    (84) n_exp -> . l_exp AND n_exp
    (85) l_exp -> . a_exp
    (86) l_exp -> . a_exp RELOP a_exp
    (87) a_exp -> . term
    (88) a_exp -> . term PLUS a_exp
    (89) a_exp -> . term MINUS a_exp
    (90) term -> . factor
    (91) term -> . factor TIMES term
    (92) term -> . factor DIVIDE term
    (93) factor -> . LPAREN exp RPAREN
    (94) factor -> . var
    (95) factor -> . call
    (96) factor -> . factor_aux
    (54) var -> . ID
    (55) var -> . ID var_aux
    (61) call -> . ID LPAREN RPAREN
    (62) call -> . ID POINT ID LPAREN RPAREN
    (63) call -> . ID LPAREN call_aux RPAREN
    (64) call -> . ID POINT ID LPAREN call_aux RPAREN
    (97) factor_aux -> . cte
    (98) factor_aux -> . PLUS cte
    (99) factor_aux -> . MINUS cte
    (100) cte -> . ID
    (101) cte -> . CTEI
    (102) cte -> . CTEF
    (103) cte -> . CTECHAR

    RPAREN          shift and go to state 210
    LPAREN          shift and go to state 124
    ID              shift and go to state 138
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    CTEI            shift and go to state 140
    CTEF            shift and go to state 141
    CTECHAR         shift and go to state 142

    call_aux                       shift and go to state 211
    exp                            shift and go to state 157
    n_exp                          shift and go to state 128
    l_exp                          shift and go to state 129
    a_exp                          shift and go to state 130
    term                           shift and go to state 131
    factor                         shift and go to state 134
    var                            shift and go to state 135
    call                           shift and go to state 136
    factor_aux                     shift and go to state 137
    cte                            shift and go to state 139

state 188

    (73) read -> READ LPAREN var RPAREN SEMICOLON .

    ASSIGN          reduce using rule 73 (read -> READ LPAREN var RPAREN SEMICOLON .)
    CALL            reduce using rule 73 (read -> READ LPAREN var RPAREN SEMICOLON .)
    READ            reduce using rule 73 (read -> READ LPAREN var RPAREN SEMICOLON .)
    WRITE           reduce using rule 73 (read -> READ LPAREN var RPAREN SEMICOLON .)
    IF              reduce using rule 73 (read -> READ LPAREN var RPAREN SEMICOLON .)
    WHILE           reduce using rule 73 (read -> READ LPAREN var RPAREN SEMICOLON .)
    FROM            reduce using rule 73 (read -> READ LPAREN var RPAREN SEMICOLON .)
    RBRACE          reduce using rule 73 (read -> READ LPAREN var RPAREN SEMICOLON .)
    RETURN          reduce using rule 73 (read -> READ LPAREN var RPAREN SEMICOLON .)


state 189

    (93) factor -> LPAREN exp RPAREN .

    TIMES           reduce using rule 93 (factor -> LPAREN exp RPAREN .)
    DIVIDE          reduce using rule 93 (factor -> LPAREN exp RPAREN .)
    PLUS            reduce using rule 93 (factor -> LPAREN exp RPAREN .)
    MINUS           reduce using rule 93 (factor -> LPAREN exp RPAREN .)
    RELOP           reduce using rule 93 (factor -> LPAREN exp RPAREN .)
    AND             reduce using rule 93 (factor -> LPAREN exp RPAREN .)
    OR              reduce using rule 93 (factor -> LPAREN exp RPAREN .)
    COMMA           reduce using rule 93 (factor -> LPAREN exp RPAREN .)
    RPAREN          reduce using rule 93 (factor -> LPAREN exp RPAREN .)
    SEMICOLON       reduce using rule 93 (factor -> LPAREN exp RPAREN .)
    RBRACKET        reduce using rule 93 (factor -> LPAREN exp RPAREN .)


state 190

    (74) write -> WRITE LPAREN write_aux RPAREN SEMICOLON .

    ASSIGN          reduce using rule 74 (write -> WRITE LPAREN write_aux RPAREN SEMICOLON .)
    CALL            reduce using rule 74 (write -> WRITE LPAREN write_aux RPAREN SEMICOLON .)
    READ            reduce using rule 74 (write -> WRITE LPAREN write_aux RPAREN SEMICOLON .)
    WRITE           reduce using rule 74 (write -> WRITE LPAREN write_aux RPAREN SEMICOLON .)
    IF              reduce using rule 74 (write -> WRITE LPAREN write_aux RPAREN SEMICOLON .)
    WHILE           reduce using rule 74 (write -> WRITE LPAREN write_aux RPAREN SEMICOLON .)
    FROM            reduce using rule 74 (write -> WRITE LPAREN write_aux RPAREN SEMICOLON .)
    RBRACE          reduce using rule 74 (write -> WRITE LPAREN write_aux RPAREN SEMICOLON .)
    RETURN          reduce using rule 74 (write -> WRITE LPAREN write_aux RPAREN SEMICOLON .)


state 191

    (76) write_aux -> exp COMMA write_aux .

    RPAREN          reduce using rule 76 (write_aux -> exp COMMA write_aux .)


state 192

    (78) write_aux -> CTESTRING COMMA write_aux .

    RPAREN          reduce using rule 78 (write_aux -> CTESTRING COMMA write_aux .)


state 193

    (82) exp -> n_exp OR exp .

    COMMA           reduce using rule 82 (exp -> n_exp OR exp .)
    RPAREN          reduce using rule 82 (exp -> n_exp OR exp .)
    SEMICOLON       reduce using rule 82 (exp -> n_exp OR exp .)
    RBRACKET        reduce using rule 82 (exp -> n_exp OR exp .)


state 194

    (84) n_exp -> l_exp AND n_exp .

    OR              reduce using rule 84 (n_exp -> l_exp AND n_exp .)
    COMMA           reduce using rule 84 (n_exp -> l_exp AND n_exp .)
    RPAREN          reduce using rule 84 (n_exp -> l_exp AND n_exp .)
    SEMICOLON       reduce using rule 84 (n_exp -> l_exp AND n_exp .)
    RBRACKET        reduce using rule 84 (n_exp -> l_exp AND n_exp .)


state 195

    (86) l_exp -> a_exp RELOP a_exp .

    AND             reduce using rule 86 (l_exp -> a_exp RELOP a_exp .)
    OR              reduce using rule 86 (l_exp -> a_exp RELOP a_exp .)
    COMMA           reduce using rule 86 (l_exp -> a_exp RELOP a_exp .)
    RPAREN          reduce using rule 86 (l_exp -> a_exp RELOP a_exp .)
    SEMICOLON       reduce using rule 86 (l_exp -> a_exp RELOP a_exp .)
    RBRACKET        reduce using rule 86 (l_exp -> a_exp RELOP a_exp .)


state 196

    (88) a_exp -> term PLUS a_exp .

    RELOP           reduce using rule 88 (a_exp -> term PLUS a_exp .)
    AND             reduce using rule 88 (a_exp -> term PLUS a_exp .)
    OR              reduce using rule 88 (a_exp -> term PLUS a_exp .)
    COMMA           reduce using rule 88 (a_exp -> term PLUS a_exp .)
    RPAREN          reduce using rule 88 (a_exp -> term PLUS a_exp .)
    SEMICOLON       reduce using rule 88 (a_exp -> term PLUS a_exp .)
    RBRACKET        reduce using rule 88 (a_exp -> term PLUS a_exp .)


state 197

    (89) a_exp -> term MINUS a_exp .

    RELOP           reduce using rule 89 (a_exp -> term MINUS a_exp .)
    AND             reduce using rule 89 (a_exp -> term MINUS a_exp .)
    OR              reduce using rule 89 (a_exp -> term MINUS a_exp .)
    COMMA           reduce using rule 89 (a_exp -> term MINUS a_exp .)
    RPAREN          reduce using rule 89 (a_exp -> term MINUS a_exp .)
    SEMICOLON       reduce using rule 89 (a_exp -> term MINUS a_exp .)
    RBRACKET        reduce using rule 89 (a_exp -> term MINUS a_exp .)


state 198

    (91) term -> factor TIMES term .

    PLUS            reduce using rule 91 (term -> factor TIMES term .)
    MINUS           reduce using rule 91 (term -> factor TIMES term .)
    RELOP           reduce using rule 91 (term -> factor TIMES term .)
    AND             reduce using rule 91 (term -> factor TIMES term .)
    OR              reduce using rule 91 (term -> factor TIMES term .)
    COMMA           reduce using rule 91 (term -> factor TIMES term .)
    RPAREN          reduce using rule 91 (term -> factor TIMES term .)
    SEMICOLON       reduce using rule 91 (term -> factor TIMES term .)
    RBRACKET        reduce using rule 91 (term -> factor TIMES term .)


state 199

    (92) term -> factor DIVIDE term .

    PLUS            reduce using rule 92 (term -> factor DIVIDE term .)
    MINUS           reduce using rule 92 (term -> factor DIVIDE term .)
    RELOP           reduce using rule 92 (term -> factor DIVIDE term .)
    AND             reduce using rule 92 (term -> factor DIVIDE term .)
    OR              reduce using rule 92 (term -> factor DIVIDE term .)
    COMMA           reduce using rule 92 (term -> factor DIVIDE term .)
    RPAREN          reduce using rule 92 (term -> factor DIVIDE term .)
    SEMICOLON       reduce using rule 92 (term -> factor DIVIDE term .)
    RBRACKET        reduce using rule 92 (term -> factor DIVIDE term .)


state 200

    (62) call -> ID POINT ID . LPAREN RPAREN
    (64) call -> ID POINT ID . LPAREN call_aux RPAREN
    (56) var_aux -> POINT ID .
    (57) var_aux -> POINT ID . var_aux_2
    (59) var_aux_2 -> . LBRACKET exp RBRACKET
    (60) var_aux_2 -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET

    LPAREN          shift and go to state 187
    TIMES           reduce using rule 56 (var_aux -> POINT ID .)
    DIVIDE          reduce using rule 56 (var_aux -> POINT ID .)
    PLUS            reduce using rule 56 (var_aux -> POINT ID .)
    MINUS           reduce using rule 56 (var_aux -> POINT ID .)
    RELOP           reduce using rule 56 (var_aux -> POINT ID .)
    AND             reduce using rule 56 (var_aux -> POINT ID .)
    OR              reduce using rule 56 (var_aux -> POINT ID .)
    COMMA           reduce using rule 56 (var_aux -> POINT ID .)
    RPAREN          reduce using rule 56 (var_aux -> POINT ID .)
    SEMICOLON       reduce using rule 56 (var_aux -> POINT ID .)
    RBRACKET        reduce using rule 56 (var_aux -> POINT ID .)
    LBRACKET        shift and go to state 119

    var_aux_2                      shift and go to state 183

state 201

    (68) condition_aux -> LPAREN exp RPAREN THEN . LBRACE statutes_aux RBRACE condition_aux_3
    (70) condition_aux_2 -> LPAREN exp RPAREN THEN . LBRACE statutes_aux RBRACE ELIF condition_aux

    LBRACE          shift and go to state 212


state 202

    (79) while -> WHILE LPAREN exp RPAREN DO . LBRACE statutes_aux RBRACE

    LBRACE          shift and go to state 213


state 203

    (80) for -> FROM LPAREN assignation RPAREN UNTIL . LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    LPAREN          shift and go to state 214


state 204

    (21) vars_simple_type_aux -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .

    COMMA           reduce using rule 21 (vars_simple_type_aux -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    SEMICOLON       reduce using rule 21 (vars_simple_type_aux -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)


state 205

    (40) body -> LBRACE dec_vars statutes_aux RBRACE .

    FUNCT           reduce using rule 40 (body -> LBRACE dec_vars statutes_aux RBRACE .)
    RBRACE          reduce using rule 40 (body -> LBRACE dec_vars statutes_aux RBRACE .)
    MAIN            reduce using rule 40 (body -> LBRACE dec_vars statutes_aux RBRACE .)


state 206

    (43) body -> LBRACE dec_vars statutes_aux RETURN . ID SEMICOLON RBRACE

    ID              shift and go to state 215


state 207

    (42) body -> LBRACE statutes_aux RETURN ID . SEMICOLON RBRACE

    SEMICOLON       shift and go to state 216


state 208

    (60) var_aux_2 -> LBRACKET exp RBRACKET LBRACKET . exp RBRACKET
    (81) exp -> . n_exp
    (82) exp -> . n_exp OR exp
    (83) n_exp -> . l_exp
    (84) n_exp -> . l_exp AND n_exp
    (85) l_exp -> . a_exp
    (86) l_exp -> . a_exp RELOP a_exp
    (87) a_exp -> . term
    (88) a_exp -> . term PLUS a_exp
    (89) a_exp -> . term MINUS a_exp
    (90) term -> . factor
    (91) term -> . factor TIMES term
    (92) term -> . factor DIVIDE term
    (93) factor -> . LPAREN exp RPAREN
    (94) factor -> . var
    (95) factor -> . call
    (96) factor -> . factor_aux
    (54) var -> . ID
    (55) var -> . ID var_aux
    (61) call -> . ID LPAREN RPAREN
    (62) call -> . ID POINT ID LPAREN RPAREN
    (63) call -> . ID LPAREN call_aux RPAREN
    (64) call -> . ID POINT ID LPAREN call_aux RPAREN
    (97) factor_aux -> . cte
    (98) factor_aux -> . PLUS cte
    (99) factor_aux -> . MINUS cte
    (100) cte -> . ID
    (101) cte -> . CTEI
    (102) cte -> . CTEF
    (103) cte -> . CTECHAR

    LPAREN          shift and go to state 124
    ID              shift and go to state 138
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    CTEI            shift and go to state 140
    CTEF            shift and go to state 141
    CTECHAR         shift and go to state 142

    exp                            shift and go to state 217
    n_exp                          shift and go to state 128
    l_exp                          shift and go to state 129
    a_exp                          shift and go to state 130
    term                           shift and go to state 131
    factor                         shift and go to state 134
    var                            shift and go to state 135
    call                           shift and go to state 136
    factor_aux                     shift and go to state 137
    cte                            shift and go to state 139

state 209

    (66) call_aux -> exp COMMA call_aux .

    RPAREN          reduce using rule 66 (call_aux -> exp COMMA call_aux .)


state 210

    (62) call -> ID POINT ID LPAREN RPAREN .

    SEMICOLON       reduce using rule 62 (call -> ID POINT ID LPAREN RPAREN .)
    TIMES           reduce using rule 62 (call -> ID POINT ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 62 (call -> ID POINT ID LPAREN RPAREN .)
    PLUS            reduce using rule 62 (call -> ID POINT ID LPAREN RPAREN .)
    MINUS           reduce using rule 62 (call -> ID POINT ID LPAREN RPAREN .)
    RELOP           reduce using rule 62 (call -> ID POINT ID LPAREN RPAREN .)
    AND             reduce using rule 62 (call -> ID POINT ID LPAREN RPAREN .)
    OR              reduce using rule 62 (call -> ID POINT ID LPAREN RPAREN .)
    COMMA           reduce using rule 62 (call -> ID POINT ID LPAREN RPAREN .)
    RPAREN          reduce using rule 62 (call -> ID POINT ID LPAREN RPAREN .)
    RBRACKET        reduce using rule 62 (call -> ID POINT ID LPAREN RPAREN .)


state 211

    (64) call -> ID POINT ID LPAREN call_aux . RPAREN

    RPAREN          shift and go to state 218


state 212

    (68) condition_aux -> LPAREN exp RPAREN THEN LBRACE . statutes_aux RBRACE condition_aux_3
    (70) condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE . statutes_aux RBRACE ELIF condition_aux
    (51) statutes_aux -> . statutes
    (52) statutes_aux -> . statutes statutes_aux
    (44) statutes -> . ASSIGN assignation SEMICOLON
    (45) statutes -> . CALL call SEMICOLON
    (46) statutes -> . read
    (47) statutes -> . write
    (48) statutes -> . condition
    (49) statutes -> . while
    (50) statutes -> . for
    (73) read -> . READ LPAREN var RPAREN SEMICOLON
    (74) write -> . WRITE LPAREN write_aux RPAREN SEMICOLON
    (67) condition -> . IF condition_aux
    (79) while -> . WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (80) for -> . FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    ASSIGN          shift and go to state 66
    CALL            shift and go to state 67
    READ            shift and go to state 73
    WRITE           shift and go to state 74
    IF              shift and go to state 75
    WHILE           shift and go to state 76
    FROM            shift and go to state 77

    statutes_aux                   shift and go to state 219
    statutes                       shift and go to state 65
    read                           shift and go to state 68
    write                          shift and go to state 69
    condition                      shift and go to state 70
    while                          shift and go to state 71
    for                            shift and go to state 72

state 213

    (79) while -> WHILE LPAREN exp RPAREN DO LBRACE . statutes_aux RBRACE
    (51) statutes_aux -> . statutes
    (52) statutes_aux -> . statutes statutes_aux
    (44) statutes -> . ASSIGN assignation SEMICOLON
    (45) statutes -> . CALL call SEMICOLON
    (46) statutes -> . read
    (47) statutes -> . write
    (48) statutes -> . condition
    (49) statutes -> . while
    (50) statutes -> . for
    (73) read -> . READ LPAREN var RPAREN SEMICOLON
    (74) write -> . WRITE LPAREN write_aux RPAREN SEMICOLON
    (67) condition -> . IF condition_aux
    (79) while -> . WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (80) for -> . FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    ASSIGN          shift and go to state 66
    CALL            shift and go to state 67
    READ            shift and go to state 73
    WRITE           shift and go to state 74
    IF              shift and go to state 75
    WHILE           shift and go to state 76
    FROM            shift and go to state 77

    statutes_aux                   shift and go to state 220
    statutes                       shift and go to state 65
    read                           shift and go to state 68
    write                          shift and go to state 69
    condition                      shift and go to state 70
    while                          shift and go to state 71
    for                            shift and go to state 72

state 214

    (80) for -> FROM LPAREN assignation RPAREN UNTIL LPAREN . exp RPAREN DO LBRACE statutes_aux RBRACE
    (81) exp -> . n_exp
    (82) exp -> . n_exp OR exp
    (83) n_exp -> . l_exp
    (84) n_exp -> . l_exp AND n_exp
    (85) l_exp -> . a_exp
    (86) l_exp -> . a_exp RELOP a_exp
    (87) a_exp -> . term
    (88) a_exp -> . term PLUS a_exp
    (89) a_exp -> . term MINUS a_exp
    (90) term -> . factor
    (91) term -> . factor TIMES term
    (92) term -> . factor DIVIDE term
    (93) factor -> . LPAREN exp RPAREN
    (94) factor -> . var
    (95) factor -> . call
    (96) factor -> . factor_aux
    (54) var -> . ID
    (55) var -> . ID var_aux
    (61) call -> . ID LPAREN RPAREN
    (62) call -> . ID POINT ID LPAREN RPAREN
    (63) call -> . ID LPAREN call_aux RPAREN
    (64) call -> . ID POINT ID LPAREN call_aux RPAREN
    (97) factor_aux -> . cte
    (98) factor_aux -> . PLUS cte
    (99) factor_aux -> . MINUS cte
    (100) cte -> . ID
    (101) cte -> . CTEI
    (102) cte -> . CTEF
    (103) cte -> . CTECHAR

    LPAREN          shift and go to state 124
    ID              shift and go to state 138
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    CTEI            shift and go to state 140
    CTEF            shift and go to state 141
    CTECHAR         shift and go to state 142

    exp                            shift and go to state 221
    n_exp                          shift and go to state 128
    l_exp                          shift and go to state 129
    a_exp                          shift and go to state 130
    term                           shift and go to state 131
    factor                         shift and go to state 134
    var                            shift and go to state 135
    call                           shift and go to state 136
    factor_aux                     shift and go to state 137
    cte                            shift and go to state 139

state 215

    (43) body -> LBRACE dec_vars statutes_aux RETURN ID . SEMICOLON RBRACE

    SEMICOLON       shift and go to state 222


state 216

    (42) body -> LBRACE statutes_aux RETURN ID SEMICOLON . RBRACE

    RBRACE          shift and go to state 223


state 217

    (60) var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp . RBRACKET

    RBRACKET        shift and go to state 224


state 218

    (64) call -> ID POINT ID LPAREN call_aux RPAREN .

    SEMICOLON       reduce using rule 64 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    TIMES           reduce using rule 64 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    DIVIDE          reduce using rule 64 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    PLUS            reduce using rule 64 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    MINUS           reduce using rule 64 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    RELOP           reduce using rule 64 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    AND             reduce using rule 64 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    OR              reduce using rule 64 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    COMMA           reduce using rule 64 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    RPAREN          reduce using rule 64 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    RBRACKET        reduce using rule 64 (call -> ID POINT ID LPAREN call_aux RPAREN .)


state 219

    (68) condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux . RBRACE condition_aux_3
    (70) condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux . RBRACE ELIF condition_aux

    RBRACE          shift and go to state 225


state 220

    (79) while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux . RBRACE

    RBRACE          shift and go to state 226


state 221

    (80) for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp . RPAREN DO LBRACE statutes_aux RBRACE

    RPAREN          shift and go to state 227


state 222

    (43) body -> LBRACE dec_vars statutes_aux RETURN ID SEMICOLON . RBRACE

    RBRACE          shift and go to state 228


state 223

    (42) body -> LBRACE statutes_aux RETURN ID SEMICOLON RBRACE .

    FUNCT           reduce using rule 42 (body -> LBRACE statutes_aux RETURN ID SEMICOLON RBRACE .)
    RBRACE          reduce using rule 42 (body -> LBRACE statutes_aux RETURN ID SEMICOLON RBRACE .)
    MAIN            reduce using rule 42 (body -> LBRACE statutes_aux RETURN ID SEMICOLON RBRACE .)


state 224

    (60) var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .

    EQUAL           reduce using rule 60 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    RPAREN          reduce using rule 60 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    TIMES           reduce using rule 60 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    DIVIDE          reduce using rule 60 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 60 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    MINUS           reduce using rule 60 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    RELOP           reduce using rule 60 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    AND             reduce using rule 60 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    OR              reduce using rule 60 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    COMMA           reduce using rule 60 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 60 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    RBRACKET        reduce using rule 60 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)


state 225

    (68) condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE . condition_aux_3
    (70) condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE . ELIF condition_aux
    (71) condition_aux_3 -> . ELSE LBRACE statutes_aux RBRACE
    (72) condition_aux_3 -> . empty
    (106) empty -> .

    ELIF            shift and go to state 230
    ELSE            shift and go to state 231
    ASSIGN          reduce using rule 106 (empty -> .)
    CALL            reduce using rule 106 (empty -> .)
    READ            reduce using rule 106 (empty -> .)
    WRITE           reduce using rule 106 (empty -> .)
    IF              reduce using rule 106 (empty -> .)
    WHILE           reduce using rule 106 (empty -> .)
    FROM            reduce using rule 106 (empty -> .)
    RBRACE          reduce using rule 106 (empty -> .)
    RETURN          reduce using rule 106 (empty -> .)

    condition_aux_3                shift and go to state 229
    empty                          shift and go to state 232

state 226

    (79) while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .

    ASSIGN          reduce using rule 79 (while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    CALL            reduce using rule 79 (while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    READ            reduce using rule 79 (while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    WRITE           reduce using rule 79 (while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    IF              reduce using rule 79 (while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    WHILE           reduce using rule 79 (while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    FROM            reduce using rule 79 (while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    RBRACE          reduce using rule 79 (while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    RETURN          reduce using rule 79 (while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)


state 227

    (80) for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN . DO LBRACE statutes_aux RBRACE

    DO              shift and go to state 233


state 228

    (43) body -> LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE .

    FUNCT           reduce using rule 43 (body -> LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE .)
    RBRACE          reduce using rule 43 (body -> LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE .)
    MAIN            reduce using rule 43 (body -> LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE .)


state 229

    (68) condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .

    ASSIGN          reduce using rule 68 (condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .)
    CALL            reduce using rule 68 (condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .)
    READ            reduce using rule 68 (condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .)
    WRITE           reduce using rule 68 (condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .)
    IF              reduce using rule 68 (condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .)
    WHILE           reduce using rule 68 (condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .)
    FROM            reduce using rule 68 (condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .)
    RBRACE          reduce using rule 68 (condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .)
    RETURN          reduce using rule 68 (condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .)


state 230

    (70) condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF . condition_aux
    (68) condition_aux -> . LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3
    (69) condition_aux -> . condition_aux_2
    (70) condition_aux_2 -> . LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux

    LPAREN          shift and go to state 101

    condition_aux                  shift and go to state 234
    condition_aux_2                shift and go to state 102

state 231

    (71) condition_aux_3 -> ELSE . LBRACE statutes_aux RBRACE

    LBRACE          shift and go to state 235


state 232

    (72) condition_aux_3 -> empty .

    ASSIGN          reduce using rule 72 (condition_aux_3 -> empty .)
    CALL            reduce using rule 72 (condition_aux_3 -> empty .)
    READ            reduce using rule 72 (condition_aux_3 -> empty .)
    WRITE           reduce using rule 72 (condition_aux_3 -> empty .)
    IF              reduce using rule 72 (condition_aux_3 -> empty .)
    WHILE           reduce using rule 72 (condition_aux_3 -> empty .)
    FROM            reduce using rule 72 (condition_aux_3 -> empty .)
    RBRACE          reduce using rule 72 (condition_aux_3 -> empty .)
    RETURN          reduce using rule 72 (condition_aux_3 -> empty .)


state 233

    (80) for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO . LBRACE statutes_aux RBRACE

    LBRACE          shift and go to state 236


state 234

    (70) condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .

    ASSIGN          reduce using rule 70 (condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .)
    CALL            reduce using rule 70 (condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .)
    READ            reduce using rule 70 (condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .)
    WRITE           reduce using rule 70 (condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .)
    IF              reduce using rule 70 (condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .)
    WHILE           reduce using rule 70 (condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .)
    FROM            reduce using rule 70 (condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .)
    RBRACE          reduce using rule 70 (condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .)
    RETURN          reduce using rule 70 (condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .)


state 235

    (71) condition_aux_3 -> ELSE LBRACE . statutes_aux RBRACE
    (51) statutes_aux -> . statutes
    (52) statutes_aux -> . statutes statutes_aux
    (44) statutes -> . ASSIGN assignation SEMICOLON
    (45) statutes -> . CALL call SEMICOLON
    (46) statutes -> . read
    (47) statutes -> . write
    (48) statutes -> . condition
    (49) statutes -> . while
    (50) statutes -> . for
    (73) read -> . READ LPAREN var RPAREN SEMICOLON
    (74) write -> . WRITE LPAREN write_aux RPAREN SEMICOLON
    (67) condition -> . IF condition_aux
    (79) while -> . WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (80) for -> . FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    ASSIGN          shift and go to state 66
    CALL            shift and go to state 67
    READ            shift and go to state 73
    WRITE           shift and go to state 74
    IF              shift and go to state 75
    WHILE           shift and go to state 76
    FROM            shift and go to state 77

    statutes_aux                   shift and go to state 237
    statutes                       shift and go to state 65
    read                           shift and go to state 68
    write                          shift and go to state 69
    condition                      shift and go to state 70
    while                          shift and go to state 71
    for                            shift and go to state 72

state 236

    (80) for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE . statutes_aux RBRACE
    (51) statutes_aux -> . statutes
    (52) statutes_aux -> . statutes statutes_aux
    (44) statutes -> . ASSIGN assignation SEMICOLON
    (45) statutes -> . CALL call SEMICOLON
    (46) statutes -> . read
    (47) statutes -> . write
    (48) statutes -> . condition
    (49) statutes -> . while
    (50) statutes -> . for
    (73) read -> . READ LPAREN var RPAREN SEMICOLON
    (74) write -> . WRITE LPAREN write_aux RPAREN SEMICOLON
    (67) condition -> . IF condition_aux
    (79) while -> . WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (80) for -> . FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    ASSIGN          shift and go to state 66
    CALL            shift and go to state 67
    READ            shift and go to state 73
    WRITE           shift and go to state 74
    IF              shift and go to state 75
    WHILE           shift and go to state 76
    FROM            shift and go to state 77

    statutes_aux                   shift and go to state 238
    statutes                       shift and go to state 65
    read                           shift and go to state 68
    write                          shift and go to state 69
    condition                      shift and go to state 70
    while                          shift and go to state 71
    for                            shift and go to state 72

state 237

    (71) condition_aux_3 -> ELSE LBRACE statutes_aux . RBRACE

    RBRACE          shift and go to state 239


state 238

    (80) for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux . RBRACE

    RBRACE          shift and go to state 240


state 239

    (71) condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .

    ASSIGN          reduce using rule 71 (condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .)
    CALL            reduce using rule 71 (condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .)
    READ            reduce using rule 71 (condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .)
    WRITE           reduce using rule 71 (condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .)
    IF              reduce using rule 71 (condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .)
    WHILE           reduce using rule 71 (condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .)
    FROM            reduce using rule 71 (condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .)
    RBRACE          reduce using rule 71 (condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .)
    RETURN          reduce using rule 71 (condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .)


state 240

    (80) for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .

    ASSIGN          reduce using rule 80 (for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    CALL            reduce using rule 80 (for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    READ            reduce using rule 80 (for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    WRITE           reduce using rule 80 (for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    IF              reduce using rule 80 (for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    WHILE           reduce using rule 80 (for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    FROM            reduce using rule 80 (for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    RBRACE          reduce using rule 80 (for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    RETURN          reduce using rule 80 (for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 138 resolved using rule (var -> ID)
WARNING: rejected rule (cte -> ID) in state 138
