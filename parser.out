Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID TWOPOINTS program_classes MAIN_CLASS LBRACE program_body main RBRACE END
Rule 2     program_classes -> classes
Rule 3     program_classes -> empty
Rule 4     program_body -> program_body_vars program_body_funct
Rule 5     program_body_vars -> dec_vars
Rule 6     program_body_vars -> empty
Rule 7     program_body_funct -> functions
Rule 8     program_body_funct -> empty
Rule 9     dec_vars -> VAR dec_vars_aux
Rule 10    dec_vars_aux -> simple_type vars_simple_type SEMICOLON
Rule 11    dec_vars_aux -> simple_type vars_simple_type SEMICOLON dec_vars_aux
Rule 12    dec_vars_aux -> complex_type vars_complex_type SEMICOLON
Rule 13    dec_vars_aux -> complex_type vars_complex_type SEMICOLON dec_vars_aux
Rule 14    vars_complex_type -> ID
Rule 15    vars_complex_type -> ID COMMA vars_complex_type
Rule 16    vars_simple_type -> ID add_variable
Rule 17    vars_simple_type -> ID add_variable COMMA vars_simple_type
Rule 18    vars_simple_type -> ID vars_simple_type_aux
Rule 19    vars_simple_type -> ID vars_simple_type_aux COMMA vars_simple_type
Rule 20    vars_simple_type_aux -> LBRACKET CTEI RBRACKET add_array_variable
Rule 21    vars_simple_type_aux -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET add_matrix_variable
Rule 22    simple_type -> INT
Rule 23    simple_type -> FLOAT
Rule 24    simple_type -> CHAR
Rule 25    complex_type -> ID
Rule 26    classes -> CLASS ID classes_aux
Rule 27    classes -> CLASS ID classes_aux classes
Rule 28    classes_aux -> LBRACE dec_vars functions RBRACE
Rule 29    classes_aux -> LBRACE functions RBRACE
Rule 30    classes_aux -> INHERITS ID LBRACE dec_vars functions RBRACE
Rule 31    classes_aux -> INHERITS ID LBRACE functions RBRACE
Rule 32    functions -> FUNCT functions_aux
Rule 33    functions -> FUNCT functions_aux functions
Rule 34    functions_aux -> VOID ID add_function LPAREN params RPAREN body
Rule 35    functions_aux -> VOID ID add_function LPAREN RPAREN body
Rule 36    functions_aux -> simple_type ID add_function LPAREN RPAREN body
Rule 37    functions_aux -> simple_type ID add_function LPAREN params RPAREN body
Rule 38    params -> simple_type ID add_variable
Rule 39    params -> simple_type ID add_variable COMMA params
Rule 40    body -> LBRACE dec_vars statutes_aux RBRACE
Rule 41    body -> LBRACE statutes_aux RBRACE
Rule 42    body -> LBRACE statutes_aux RETURN ID SEMICOLON RBRACE
Rule 43    body -> LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE
Rule 44    statutes -> ASSIGN assignation SEMICOLON
Rule 45    statutes -> CALL call SEMICOLON
Rule 46    statutes -> read
Rule 47    statutes -> write
Rule 48    statutes -> condition
Rule 49    statutes -> while
Rule 50    statutes -> for
Rule 51    statutes_aux -> statutes
Rule 52    statutes_aux -> statutes statutes_aux
Rule 53    assignation -> var EQUAL exp
Rule 54    var -> ID
Rule 55    var -> ID var_aux
Rule 56    var_aux -> POINT ID
Rule 57    var_aux -> POINT ID var_aux_2
Rule 58    var_aux -> var_aux_2
Rule 59    var_aux_2 -> LBRACKET exp RBRACKET
Rule 60    var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET
Rule 61    call -> ID LPAREN RPAREN
Rule 62    call -> ID POINT ID LPAREN RPAREN
Rule 63    call -> ID LPAREN call_aux RPAREN
Rule 64    call -> ID POINT ID LPAREN call_aux RPAREN
Rule 65    call_aux -> exp
Rule 66    call_aux -> exp COMMA call_aux
Rule 67    condition -> IF condition_aux
Rule 68    condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3
Rule 69    condition_aux -> condition_aux_2
Rule 70    condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux
Rule 71    condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE
Rule 72    condition_aux_3 -> empty
Rule 73    read -> READ LPAREN var RPAREN SEMICOLON
Rule 74    write -> WRITE LPAREN write_aux RPAREN SEMICOLON
Rule 75    write_aux -> exp
Rule 76    write_aux -> exp COMMA write_aux
Rule 77    write_aux -> CTESTRING
Rule 78    write_aux -> CTESTRING COMMA write_aux
Rule 79    while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
Rule 80    for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
Rule 81    exp -> n_exp
Rule 82    exp -> n_exp OR exp
Rule 83    n_exp -> l_exp
Rule 84    n_exp -> l_exp AND n_exp
Rule 85    l_exp -> a_exp
Rule 86    l_exp -> a_exp RELOP a_exp
Rule 87    a_exp -> term
Rule 88    a_exp -> term PLUS a_exp
Rule 89    a_exp -> term MINUS a_exp
Rule 90    term -> factor
Rule 91    term -> factor TIMES term
Rule 92    term -> factor DIVIDE term
Rule 93    factor -> LPAREN exp RPAREN
Rule 94    factor -> var
Rule 95    factor -> call
Rule 96    factor -> factor_aux
Rule 97    factor_aux -> cte
Rule 98    factor_aux -> PLUS cte
Rule 99    factor_aux -> MINUS cte
Rule 100   cte -> ID
Rule 101   cte -> CTEI
Rule 102   cte -> CTEF
Rule 103   cte -> CTECHAR
Rule 104   main -> MAIN LBRACE statutes_aux RBRACE
Rule 105   main -> MAIN LBRACE dec_vars statutes_aux RBRACE
Rule 106   empty -> <empty>
Rule 107   add_variable -> <empty>
Rule 108   add_array_variable -> <empty>
Rule 109   add_matrix_variable -> <empty>
Rule 110   add_function -> <empty>

Terminals, with rules where they appear

AND                  : 84
ASSIGN               : 44
CALL                 : 45
CHAR                 : 24
CLASS                : 26 27
COMMA                : 15 17 19 39 66 76 78
CTECHAR              : 103
CTEF                 : 102
CTEI                 : 20 21 21 101
CTESTRING            : 77 78
DIVIDE               : 92
DO                   : 79 80
ELIF                 : 70
ELSE                 : 71
END                  : 1
EQUAL                : 53
FLOAT                : 23
FROM                 : 80
FUNCT                : 32 33
ID                   : 1 14 15 16 17 18 19 25 26 27 30 31 34 35 36 37 38 39 42 43 54 55 56 57 61 62 62 63 64 64 100
IF                   : 67
INHERITS             : 30 31
INT                  : 22
LBRACE               : 1 28 29 30 31 40 41 42 43 68 70 71 79 80 104 105
LBRACKET             : 20 21 21 59 60 60
LPAREN               : 34 35 36 37 61 62 63 64 68 70 73 74 79 80 80 93
MAIN                 : 104 105
MAIN_CLASS           : 1
MINUS                : 89 99
OR                   : 82
PLUS                 : 88 98
POINT                : 56 57 62 64
PROGRAM              : 1
RBRACE               : 1 28 29 30 31 40 41 42 43 68 70 71 79 80 104 105
RBRACKET             : 20 21 21 59 60 60
READ                 : 73
RELOP                : 86
RETURN               : 42 43
RPAREN               : 34 35 36 37 61 62 63 64 68 70 73 74 79 80 80 93
SEMICOLON            : 10 11 12 13 42 43 44 45 73 74
THEN                 : 68 70
TIMES                : 91
TWOPOINTS            : 1
UNTIL                : 80
VAR                  : 9
VOID                 : 34 35
WHILE                : 79
WRITE                : 74
error                : 

Nonterminals, with rules where they appear

a_exp                : 85 86 86 88 89
add_array_variable   : 20
add_function         : 34 35 36 37
add_matrix_variable  : 21
add_variable         : 16 17 38 39
assignation          : 44 80
body                 : 34 35 36 37
call                 : 45 95
call_aux             : 63 64 66
classes              : 2 27
classes_aux          : 26 27
complex_type         : 12 13
condition            : 48
condition_aux        : 67 70
condition_aux_2      : 69
condition_aux_3      : 68
cte                  : 97 98 99
dec_vars             : 5 28 30 40 43 105
dec_vars_aux         : 9 11 13
empty                : 3 6 8 72
exp                  : 53 59 60 60 65 66 68 70 75 76 79 80 82 93
factor               : 90 91 92
factor_aux           : 96
for                  : 50
functions            : 7 28 29 30 31 33
functions_aux        : 32 33
l_exp                : 83 84
main                 : 1
n_exp                : 81 82 84
params               : 34 37 39
program              : 0
program_body         : 1
program_body_funct   : 4
program_body_vars    : 4
program_classes      : 1
read                 : 46
simple_type          : 10 11 36 37 38 39
statutes             : 51 52
statutes_aux         : 40 41 42 43 52 68 70 71 79 80 104 105
term                 : 87 88 89 91 92
var                  : 53 73 94
var_aux              : 55
var_aux_2            : 57 58
vars_complex_type    : 12 13 15
vars_simple_type     : 10 11 17 19
vars_simple_type_aux : 18 19
while                : 49
write                : 47
write_aux            : 74 76 78

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID TWOPOINTS program_classes MAIN_CLASS LBRACE program_body main RBRACE END

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID TWOPOINTS program_classes MAIN_CLASS LBRACE program_body main RBRACE END

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . TWOPOINTS program_classes MAIN_CLASS LBRACE program_body main RBRACE END

    TWOPOINTS       shift and go to state 4


state 4

    (1) program -> PROGRAM ID TWOPOINTS . program_classes MAIN_CLASS LBRACE program_body main RBRACE END
    (2) program_classes -> . classes
    (3) program_classes -> . empty
    (26) classes -> . CLASS ID classes_aux
    (27) classes -> . CLASS ID classes_aux classes
    (106) empty -> .

    CLASS           shift and go to state 8
    MAIN_CLASS      reduce using rule 106 (empty -> .)

    program_classes                shift and go to state 5
    classes                        shift and go to state 6
    empty                          shift and go to state 7

state 5

    (1) program -> PROGRAM ID TWOPOINTS program_classes . MAIN_CLASS LBRACE program_body main RBRACE END

    MAIN_CLASS      shift and go to state 9


state 6

    (2) program_classes -> classes .

    MAIN_CLASS      reduce using rule 2 (program_classes -> classes .)


state 7

    (3) program_classes -> empty .

    MAIN_CLASS      reduce using rule 3 (program_classes -> empty .)


state 8

    (26) classes -> CLASS . ID classes_aux
    (27) classes -> CLASS . ID classes_aux classes

    ID              shift and go to state 10


state 9

    (1) program -> PROGRAM ID TWOPOINTS program_classes MAIN_CLASS . LBRACE program_body main RBRACE END

    LBRACE          shift and go to state 11


state 10

    (26) classes -> CLASS ID . classes_aux
    (27) classes -> CLASS ID . classes_aux classes
    (28) classes_aux -> . LBRACE dec_vars functions RBRACE
    (29) classes_aux -> . LBRACE functions RBRACE
    (30) classes_aux -> . INHERITS ID LBRACE dec_vars functions RBRACE
    (31) classes_aux -> . INHERITS ID LBRACE functions RBRACE

    LBRACE          shift and go to state 13
    INHERITS        shift and go to state 14

    classes_aux                    shift and go to state 12

state 11

    (1) program -> PROGRAM ID TWOPOINTS program_classes MAIN_CLASS LBRACE . program_body main RBRACE END
    (4) program_body -> . program_body_vars program_body_funct
    (5) program_body_vars -> . dec_vars
    (6) program_body_vars -> . empty
    (9) dec_vars -> . VAR dec_vars_aux
    (106) empty -> .

    VAR             shift and go to state 19
    FUNCT           reduce using rule 106 (empty -> .)
    MAIN            reduce using rule 106 (empty -> .)

    program_body                   shift and go to state 15
    program_body_vars              shift and go to state 16
    dec_vars                       shift and go to state 17
    empty                          shift and go to state 18

state 12

    (26) classes -> CLASS ID classes_aux .
    (27) classes -> CLASS ID classes_aux . classes
    (26) classes -> . CLASS ID classes_aux
    (27) classes -> . CLASS ID classes_aux classes

    MAIN_CLASS      reduce using rule 26 (classes -> CLASS ID classes_aux .)
    CLASS           shift and go to state 8

    classes                        shift and go to state 20

state 13

    (28) classes_aux -> LBRACE . dec_vars functions RBRACE
    (29) classes_aux -> LBRACE . functions RBRACE
    (9) dec_vars -> . VAR dec_vars_aux
    (32) functions -> . FUNCT functions_aux
    (33) functions -> . FUNCT functions_aux functions

    VAR             shift and go to state 19
    FUNCT           shift and go to state 23

    dec_vars                       shift and go to state 21
    functions                      shift and go to state 22

state 14

    (30) classes_aux -> INHERITS . ID LBRACE dec_vars functions RBRACE
    (31) classes_aux -> INHERITS . ID LBRACE functions RBRACE

    ID              shift and go to state 24


state 15

    (1) program -> PROGRAM ID TWOPOINTS program_classes MAIN_CLASS LBRACE program_body . main RBRACE END
    (104) main -> . MAIN LBRACE statutes_aux RBRACE
    (105) main -> . MAIN LBRACE dec_vars statutes_aux RBRACE

    MAIN            shift and go to state 26

    main                           shift and go to state 25

state 16

    (4) program_body -> program_body_vars . program_body_funct
    (7) program_body_funct -> . functions
    (8) program_body_funct -> . empty
    (32) functions -> . FUNCT functions_aux
    (33) functions -> . FUNCT functions_aux functions
    (106) empty -> .

    FUNCT           shift and go to state 23
    MAIN            reduce using rule 106 (empty -> .)

    program_body_funct             shift and go to state 27
    functions                      shift and go to state 28
    empty                          shift and go to state 29

state 17

    (5) program_body_vars -> dec_vars .

    FUNCT           reduce using rule 5 (program_body_vars -> dec_vars .)
    MAIN            reduce using rule 5 (program_body_vars -> dec_vars .)


state 18

    (6) program_body_vars -> empty .

    FUNCT           reduce using rule 6 (program_body_vars -> empty .)
    MAIN            reduce using rule 6 (program_body_vars -> empty .)


state 19

    (9) dec_vars -> VAR . dec_vars_aux
    (10) dec_vars_aux -> . simple_type vars_simple_type SEMICOLON
    (11) dec_vars_aux -> . simple_type vars_simple_type SEMICOLON dec_vars_aux
    (12) dec_vars_aux -> . complex_type vars_complex_type SEMICOLON
    (13) dec_vars_aux -> . complex_type vars_complex_type SEMICOLON dec_vars_aux
    (22) simple_type -> . INT
    (23) simple_type -> . FLOAT
    (24) simple_type -> . CHAR
    (25) complex_type -> . ID

    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    ID              shift and go to state 36

    dec_vars_aux                   shift and go to state 30
    simple_type                    shift and go to state 31
    complex_type                   shift and go to state 32

state 20

    (27) classes -> CLASS ID classes_aux classes .

    MAIN_CLASS      reduce using rule 27 (classes -> CLASS ID classes_aux classes .)


state 21

    (28) classes_aux -> LBRACE dec_vars . functions RBRACE
    (32) functions -> . FUNCT functions_aux
    (33) functions -> . FUNCT functions_aux functions

    FUNCT           shift and go to state 23

    functions                      shift and go to state 37

state 22

    (29) classes_aux -> LBRACE functions . RBRACE

    RBRACE          shift and go to state 38


state 23

    (32) functions -> FUNCT . functions_aux
    (33) functions -> FUNCT . functions_aux functions
    (34) functions_aux -> . VOID ID add_function LPAREN params RPAREN body
    (35) functions_aux -> . VOID ID add_function LPAREN RPAREN body
    (36) functions_aux -> . simple_type ID add_function LPAREN RPAREN body
    (37) functions_aux -> . simple_type ID add_function LPAREN params RPAREN body
    (22) simple_type -> . INT
    (23) simple_type -> . FLOAT
    (24) simple_type -> . CHAR

    VOID            shift and go to state 40
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35

    functions_aux                  shift and go to state 39
    simple_type                    shift and go to state 41

state 24

    (30) classes_aux -> INHERITS ID . LBRACE dec_vars functions RBRACE
    (31) classes_aux -> INHERITS ID . LBRACE functions RBRACE

    LBRACE          shift and go to state 42


state 25

    (1) program -> PROGRAM ID TWOPOINTS program_classes MAIN_CLASS LBRACE program_body main . RBRACE END

    RBRACE          shift and go to state 43


state 26

    (104) main -> MAIN . LBRACE statutes_aux RBRACE
    (105) main -> MAIN . LBRACE dec_vars statutes_aux RBRACE

    LBRACE          shift and go to state 44


state 27

    (4) program_body -> program_body_vars program_body_funct .

    MAIN            reduce using rule 4 (program_body -> program_body_vars program_body_funct .)


state 28

    (7) program_body_funct -> functions .

    MAIN            reduce using rule 7 (program_body_funct -> functions .)


state 29

    (8) program_body_funct -> empty .

    MAIN            reduce using rule 8 (program_body_funct -> empty .)


state 30

    (9) dec_vars -> VAR dec_vars_aux .

    FUNCT           reduce using rule 9 (dec_vars -> VAR dec_vars_aux .)
    MAIN            reduce using rule 9 (dec_vars -> VAR dec_vars_aux .)
    ASSIGN          reduce using rule 9 (dec_vars -> VAR dec_vars_aux .)
    CALL            reduce using rule 9 (dec_vars -> VAR dec_vars_aux .)
    READ            reduce using rule 9 (dec_vars -> VAR dec_vars_aux .)
    WRITE           reduce using rule 9 (dec_vars -> VAR dec_vars_aux .)
    IF              reduce using rule 9 (dec_vars -> VAR dec_vars_aux .)
    WHILE           reduce using rule 9 (dec_vars -> VAR dec_vars_aux .)
    FROM            reduce using rule 9 (dec_vars -> VAR dec_vars_aux .)


state 31

    (10) dec_vars_aux -> simple_type . vars_simple_type SEMICOLON
    (11) dec_vars_aux -> simple_type . vars_simple_type SEMICOLON dec_vars_aux
    (16) vars_simple_type -> . ID add_variable
    (17) vars_simple_type -> . ID add_variable COMMA vars_simple_type
    (18) vars_simple_type -> . ID vars_simple_type_aux
    (19) vars_simple_type -> . ID vars_simple_type_aux COMMA vars_simple_type

    ID              shift and go to state 46

    vars_simple_type               shift and go to state 45

state 32

    (12) dec_vars_aux -> complex_type . vars_complex_type SEMICOLON
    (13) dec_vars_aux -> complex_type . vars_complex_type SEMICOLON dec_vars_aux
    (14) vars_complex_type -> . ID
    (15) vars_complex_type -> . ID COMMA vars_complex_type

    ID              shift and go to state 48

    vars_complex_type              shift and go to state 47

state 33

    (22) simple_type -> INT .

    ID              reduce using rule 22 (simple_type -> INT .)


state 34

    (23) simple_type -> FLOAT .

    ID              reduce using rule 23 (simple_type -> FLOAT .)


state 35

    (24) simple_type -> CHAR .

    ID              reduce using rule 24 (simple_type -> CHAR .)


state 36

    (25) complex_type -> ID .

    ID              reduce using rule 25 (complex_type -> ID .)


state 37

    (28) classes_aux -> LBRACE dec_vars functions . RBRACE

    RBRACE          shift and go to state 49


state 38

    (29) classes_aux -> LBRACE functions RBRACE .

    CLASS           reduce using rule 29 (classes_aux -> LBRACE functions RBRACE .)
    MAIN_CLASS      reduce using rule 29 (classes_aux -> LBRACE functions RBRACE .)


state 39

    (32) functions -> FUNCT functions_aux .
    (33) functions -> FUNCT functions_aux . functions
    (32) functions -> . FUNCT functions_aux
    (33) functions -> . FUNCT functions_aux functions

    RBRACE          reduce using rule 32 (functions -> FUNCT functions_aux .)
    MAIN            reduce using rule 32 (functions -> FUNCT functions_aux .)
    FUNCT           shift and go to state 23

    functions                      shift and go to state 50

state 40

    (34) functions_aux -> VOID . ID add_function LPAREN params RPAREN body
    (35) functions_aux -> VOID . ID add_function LPAREN RPAREN body

    ID              shift and go to state 51


state 41

    (36) functions_aux -> simple_type . ID add_function LPAREN RPAREN body
    (37) functions_aux -> simple_type . ID add_function LPAREN params RPAREN body

    ID              shift and go to state 52


state 42

    (30) classes_aux -> INHERITS ID LBRACE . dec_vars functions RBRACE
    (31) classes_aux -> INHERITS ID LBRACE . functions RBRACE
    (9) dec_vars -> . VAR dec_vars_aux
    (32) functions -> . FUNCT functions_aux
    (33) functions -> . FUNCT functions_aux functions

    VAR             shift and go to state 19
    FUNCT           shift and go to state 23

    dec_vars                       shift and go to state 53
    functions                      shift and go to state 54

state 43

    (1) program -> PROGRAM ID TWOPOINTS program_classes MAIN_CLASS LBRACE program_body main RBRACE . END

    END             shift and go to state 55


state 44

    (104) main -> MAIN LBRACE . statutes_aux RBRACE
    (105) main -> MAIN LBRACE . dec_vars statutes_aux RBRACE
    (51) statutes_aux -> . statutes
    (52) statutes_aux -> . statutes statutes_aux
    (9) dec_vars -> . VAR dec_vars_aux
    (44) statutes -> . ASSIGN assignation SEMICOLON
    (45) statutes -> . CALL call SEMICOLON
    (46) statutes -> . read
    (47) statutes -> . write
    (48) statutes -> . condition
    (49) statutes -> . while
    (50) statutes -> . for
    (73) read -> . READ LPAREN var RPAREN SEMICOLON
    (74) write -> . WRITE LPAREN write_aux RPAREN SEMICOLON
    (67) condition -> . IF condition_aux
    (79) while -> . WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (80) for -> . FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    VAR             shift and go to state 19
    ASSIGN          shift and go to state 59
    CALL            shift and go to state 60
    READ            shift and go to state 66
    WRITE           shift and go to state 67
    IF              shift and go to state 68
    WHILE           shift and go to state 69
    FROM            shift and go to state 70

    statutes_aux                   shift and go to state 56
    dec_vars                       shift and go to state 57
    statutes                       shift and go to state 58
    read                           shift and go to state 61
    write                          shift and go to state 62
    condition                      shift and go to state 63
    while                          shift and go to state 64
    for                            shift and go to state 65

state 45

    (10) dec_vars_aux -> simple_type vars_simple_type . SEMICOLON
    (11) dec_vars_aux -> simple_type vars_simple_type . SEMICOLON dec_vars_aux

    SEMICOLON       shift and go to state 71


state 46

    (16) vars_simple_type -> ID . add_variable
    (17) vars_simple_type -> ID . add_variable COMMA vars_simple_type
    (18) vars_simple_type -> ID . vars_simple_type_aux
    (19) vars_simple_type -> ID . vars_simple_type_aux COMMA vars_simple_type
    (107) add_variable -> .
    (20) vars_simple_type_aux -> . LBRACKET CTEI RBRACKET add_array_variable
    (21) vars_simple_type_aux -> . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET add_matrix_variable

    COMMA           reduce using rule 107 (add_variable -> .)
    SEMICOLON       reduce using rule 107 (add_variable -> .)
    LBRACKET        shift and go to state 74

    add_variable                   shift and go to state 72
    vars_simple_type_aux           shift and go to state 73

state 47

    (12) dec_vars_aux -> complex_type vars_complex_type . SEMICOLON
    (13) dec_vars_aux -> complex_type vars_complex_type . SEMICOLON dec_vars_aux

    SEMICOLON       shift and go to state 75


state 48

    (14) vars_complex_type -> ID .
    (15) vars_complex_type -> ID . COMMA vars_complex_type

    SEMICOLON       reduce using rule 14 (vars_complex_type -> ID .)
    COMMA           shift and go to state 76


state 49

    (28) classes_aux -> LBRACE dec_vars functions RBRACE .

    CLASS           reduce using rule 28 (classes_aux -> LBRACE dec_vars functions RBRACE .)
    MAIN_CLASS      reduce using rule 28 (classes_aux -> LBRACE dec_vars functions RBRACE .)


state 50

    (33) functions -> FUNCT functions_aux functions .

    RBRACE          reduce using rule 33 (functions -> FUNCT functions_aux functions .)
    MAIN            reduce using rule 33 (functions -> FUNCT functions_aux functions .)


state 51

    (34) functions_aux -> VOID ID . add_function LPAREN params RPAREN body
    (35) functions_aux -> VOID ID . add_function LPAREN RPAREN body
    (110) add_function -> .

    LPAREN          reduce using rule 110 (add_function -> .)

    add_function                   shift and go to state 77

state 52

    (36) functions_aux -> simple_type ID . add_function LPAREN RPAREN body
    (37) functions_aux -> simple_type ID . add_function LPAREN params RPAREN body
    (110) add_function -> .

    LPAREN          reduce using rule 110 (add_function -> .)

    add_function                   shift and go to state 78

state 53

    (30) classes_aux -> INHERITS ID LBRACE dec_vars . functions RBRACE
    (32) functions -> . FUNCT functions_aux
    (33) functions -> . FUNCT functions_aux functions

    FUNCT           shift and go to state 23

    functions                      shift and go to state 79

state 54

    (31) classes_aux -> INHERITS ID LBRACE functions . RBRACE

    RBRACE          shift and go to state 80


state 55

    (1) program -> PROGRAM ID TWOPOINTS program_classes MAIN_CLASS LBRACE program_body main RBRACE END .

    $end            reduce using rule 1 (program -> PROGRAM ID TWOPOINTS program_classes MAIN_CLASS LBRACE program_body main RBRACE END .)


state 56

    (104) main -> MAIN LBRACE statutes_aux . RBRACE

    RBRACE          shift and go to state 81


state 57

    (105) main -> MAIN LBRACE dec_vars . statutes_aux RBRACE
    (51) statutes_aux -> . statutes
    (52) statutes_aux -> . statutes statutes_aux
    (44) statutes -> . ASSIGN assignation SEMICOLON
    (45) statutes -> . CALL call SEMICOLON
    (46) statutes -> . read
    (47) statutes -> . write
    (48) statutes -> . condition
    (49) statutes -> . while
    (50) statutes -> . for
    (73) read -> . READ LPAREN var RPAREN SEMICOLON
    (74) write -> . WRITE LPAREN write_aux RPAREN SEMICOLON
    (67) condition -> . IF condition_aux
    (79) while -> . WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (80) for -> . FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    ASSIGN          shift and go to state 59
    CALL            shift and go to state 60
    READ            shift and go to state 66
    WRITE           shift and go to state 67
    IF              shift and go to state 68
    WHILE           shift and go to state 69
    FROM            shift and go to state 70

    statutes_aux                   shift and go to state 82
    statutes                       shift and go to state 58
    read                           shift and go to state 61
    write                          shift and go to state 62
    condition                      shift and go to state 63
    while                          shift and go to state 64
    for                            shift and go to state 65

state 58

    (51) statutes_aux -> statutes .
    (52) statutes_aux -> statutes . statutes_aux
    (51) statutes_aux -> . statutes
    (52) statutes_aux -> . statutes statutes_aux
    (44) statutes -> . ASSIGN assignation SEMICOLON
    (45) statutes -> . CALL call SEMICOLON
    (46) statutes -> . read
    (47) statutes -> . write
    (48) statutes -> . condition
    (49) statutes -> . while
    (50) statutes -> . for
    (73) read -> . READ LPAREN var RPAREN SEMICOLON
    (74) write -> . WRITE LPAREN write_aux RPAREN SEMICOLON
    (67) condition -> . IF condition_aux
    (79) while -> . WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (80) for -> . FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    RBRACE          reduce using rule 51 (statutes_aux -> statutes .)
    RETURN          reduce using rule 51 (statutes_aux -> statutes .)
    ASSIGN          shift and go to state 59
    CALL            shift and go to state 60
    READ            shift and go to state 66
    WRITE           shift and go to state 67
    IF              shift and go to state 68
    WHILE           shift and go to state 69
    FROM            shift and go to state 70

    statutes                       shift and go to state 58
    statutes_aux                   shift and go to state 83
    read                           shift and go to state 61
    write                          shift and go to state 62
    condition                      shift and go to state 63
    while                          shift and go to state 64
    for                            shift and go to state 65

state 59

    (44) statutes -> ASSIGN . assignation SEMICOLON
    (53) assignation -> . var EQUAL exp
    (54) var -> . ID
    (55) var -> . ID var_aux

    ID              shift and go to state 86

    assignation                    shift and go to state 84
    var                            shift and go to state 85

state 60

    (45) statutes -> CALL . call SEMICOLON
    (61) call -> . ID LPAREN RPAREN
    (62) call -> . ID POINT ID LPAREN RPAREN
    (63) call -> . ID LPAREN call_aux RPAREN
    (64) call -> . ID POINT ID LPAREN call_aux RPAREN

    ID              shift and go to state 88

    call                           shift and go to state 87

state 61

    (46) statutes -> read .

    ASSIGN          reduce using rule 46 (statutes -> read .)
    CALL            reduce using rule 46 (statutes -> read .)
    READ            reduce using rule 46 (statutes -> read .)
    WRITE           reduce using rule 46 (statutes -> read .)
    IF              reduce using rule 46 (statutes -> read .)
    WHILE           reduce using rule 46 (statutes -> read .)
    FROM            reduce using rule 46 (statutes -> read .)
    RBRACE          reduce using rule 46 (statutes -> read .)
    RETURN          reduce using rule 46 (statutes -> read .)


state 62

    (47) statutes -> write .

    ASSIGN          reduce using rule 47 (statutes -> write .)
    CALL            reduce using rule 47 (statutes -> write .)
    READ            reduce using rule 47 (statutes -> write .)
    WRITE           reduce using rule 47 (statutes -> write .)
    IF              reduce using rule 47 (statutes -> write .)
    WHILE           reduce using rule 47 (statutes -> write .)
    FROM            reduce using rule 47 (statutes -> write .)
    RBRACE          reduce using rule 47 (statutes -> write .)
    RETURN          reduce using rule 47 (statutes -> write .)


state 63

    (48) statutes -> condition .

    ASSIGN          reduce using rule 48 (statutes -> condition .)
    CALL            reduce using rule 48 (statutes -> condition .)
    READ            reduce using rule 48 (statutes -> condition .)
    WRITE           reduce using rule 48 (statutes -> condition .)
    IF              reduce using rule 48 (statutes -> condition .)
    WHILE           reduce using rule 48 (statutes -> condition .)
    FROM            reduce using rule 48 (statutes -> condition .)
    RBRACE          reduce using rule 48 (statutes -> condition .)
    RETURN          reduce using rule 48 (statutes -> condition .)


state 64

    (49) statutes -> while .

    ASSIGN          reduce using rule 49 (statutes -> while .)
    CALL            reduce using rule 49 (statutes -> while .)
    READ            reduce using rule 49 (statutes -> while .)
    WRITE           reduce using rule 49 (statutes -> while .)
    IF              reduce using rule 49 (statutes -> while .)
    WHILE           reduce using rule 49 (statutes -> while .)
    FROM            reduce using rule 49 (statutes -> while .)
    RBRACE          reduce using rule 49 (statutes -> while .)
    RETURN          reduce using rule 49 (statutes -> while .)


state 65

    (50) statutes -> for .

    ASSIGN          reduce using rule 50 (statutes -> for .)
    CALL            reduce using rule 50 (statutes -> for .)
    READ            reduce using rule 50 (statutes -> for .)
    WRITE           reduce using rule 50 (statutes -> for .)
    IF              reduce using rule 50 (statutes -> for .)
    WHILE           reduce using rule 50 (statutes -> for .)
    FROM            reduce using rule 50 (statutes -> for .)
    RBRACE          reduce using rule 50 (statutes -> for .)
    RETURN          reduce using rule 50 (statutes -> for .)


state 66

    (73) read -> READ . LPAREN var RPAREN SEMICOLON

    LPAREN          shift and go to state 89


state 67

    (74) write -> WRITE . LPAREN write_aux RPAREN SEMICOLON

    LPAREN          shift and go to state 90


state 68

    (67) condition -> IF . condition_aux
    (68) condition_aux -> . LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3
    (69) condition_aux -> . condition_aux_2
    (70) condition_aux_2 -> . LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux

    LPAREN          shift and go to state 92

    condition_aux                  shift and go to state 91
    condition_aux_2                shift and go to state 93

state 69

    (79) while -> WHILE . LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    LPAREN          shift and go to state 94


state 70

    (80) for -> FROM . LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    LPAREN          shift and go to state 95


state 71

    (10) dec_vars_aux -> simple_type vars_simple_type SEMICOLON .
    (11) dec_vars_aux -> simple_type vars_simple_type SEMICOLON . dec_vars_aux
    (10) dec_vars_aux -> . simple_type vars_simple_type SEMICOLON
    (11) dec_vars_aux -> . simple_type vars_simple_type SEMICOLON dec_vars_aux
    (12) dec_vars_aux -> . complex_type vars_complex_type SEMICOLON
    (13) dec_vars_aux -> . complex_type vars_complex_type SEMICOLON dec_vars_aux
    (22) simple_type -> . INT
    (23) simple_type -> . FLOAT
    (24) simple_type -> . CHAR
    (25) complex_type -> . ID

    FUNCT           reduce using rule 10 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON .)
    MAIN            reduce using rule 10 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON .)
    ASSIGN          reduce using rule 10 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON .)
    CALL            reduce using rule 10 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON .)
    READ            reduce using rule 10 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON .)
    WRITE           reduce using rule 10 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON .)
    IF              reduce using rule 10 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON .)
    WHILE           reduce using rule 10 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON .)
    FROM            reduce using rule 10 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON .)
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    ID              shift and go to state 36

    simple_type                    shift and go to state 31
    dec_vars_aux                   shift and go to state 96
    complex_type                   shift and go to state 32

state 72

    (16) vars_simple_type -> ID add_variable .
    (17) vars_simple_type -> ID add_variable . COMMA vars_simple_type

    SEMICOLON       reduce using rule 16 (vars_simple_type -> ID add_variable .)
    COMMA           shift and go to state 97


state 73

    (18) vars_simple_type -> ID vars_simple_type_aux .
    (19) vars_simple_type -> ID vars_simple_type_aux . COMMA vars_simple_type

    SEMICOLON       reduce using rule 18 (vars_simple_type -> ID vars_simple_type_aux .)
    COMMA           shift and go to state 98


state 74

    (20) vars_simple_type_aux -> LBRACKET . CTEI RBRACKET add_array_variable
    (21) vars_simple_type_aux -> LBRACKET . CTEI RBRACKET LBRACKET CTEI RBRACKET add_matrix_variable

    CTEI            shift and go to state 99


state 75

    (12) dec_vars_aux -> complex_type vars_complex_type SEMICOLON .
    (13) dec_vars_aux -> complex_type vars_complex_type SEMICOLON . dec_vars_aux
    (10) dec_vars_aux -> . simple_type vars_simple_type SEMICOLON
    (11) dec_vars_aux -> . simple_type vars_simple_type SEMICOLON dec_vars_aux
    (12) dec_vars_aux -> . complex_type vars_complex_type SEMICOLON
    (13) dec_vars_aux -> . complex_type vars_complex_type SEMICOLON dec_vars_aux
    (22) simple_type -> . INT
    (23) simple_type -> . FLOAT
    (24) simple_type -> . CHAR
    (25) complex_type -> . ID

    FUNCT           reduce using rule 12 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON .)
    MAIN            reduce using rule 12 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON .)
    ASSIGN          reduce using rule 12 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON .)
    CALL            reduce using rule 12 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON .)
    READ            reduce using rule 12 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON .)
    WRITE           reduce using rule 12 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON .)
    IF              reduce using rule 12 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON .)
    WHILE           reduce using rule 12 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON .)
    FROM            reduce using rule 12 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON .)
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    ID              shift and go to state 36

    complex_type                   shift and go to state 32
    dec_vars_aux                   shift and go to state 100
    simple_type                    shift and go to state 31

state 76

    (15) vars_complex_type -> ID COMMA . vars_complex_type
    (14) vars_complex_type -> . ID
    (15) vars_complex_type -> . ID COMMA vars_complex_type

    ID              shift and go to state 48

    vars_complex_type              shift and go to state 101

state 77

    (34) functions_aux -> VOID ID add_function . LPAREN params RPAREN body
    (35) functions_aux -> VOID ID add_function . LPAREN RPAREN body

    LPAREN          shift and go to state 102


state 78

    (36) functions_aux -> simple_type ID add_function . LPAREN RPAREN body
    (37) functions_aux -> simple_type ID add_function . LPAREN params RPAREN body

    LPAREN          shift and go to state 103


state 79

    (30) classes_aux -> INHERITS ID LBRACE dec_vars functions . RBRACE

    RBRACE          shift and go to state 104


state 80

    (31) classes_aux -> INHERITS ID LBRACE functions RBRACE .

    CLASS           reduce using rule 31 (classes_aux -> INHERITS ID LBRACE functions RBRACE .)
    MAIN_CLASS      reduce using rule 31 (classes_aux -> INHERITS ID LBRACE functions RBRACE .)


state 81

    (104) main -> MAIN LBRACE statutes_aux RBRACE .

    RBRACE          reduce using rule 104 (main -> MAIN LBRACE statutes_aux RBRACE .)


state 82

    (105) main -> MAIN LBRACE dec_vars statutes_aux . RBRACE

    RBRACE          shift and go to state 105


state 83

    (52) statutes_aux -> statutes statutes_aux .

    RBRACE          reduce using rule 52 (statutes_aux -> statutes statutes_aux .)
    RETURN          reduce using rule 52 (statutes_aux -> statutes statutes_aux .)


state 84

    (44) statutes -> ASSIGN assignation . SEMICOLON

    SEMICOLON       shift and go to state 106


state 85

    (53) assignation -> var . EQUAL exp

    EQUAL           shift and go to state 107


state 86

    (54) var -> ID .
    (55) var -> ID . var_aux
    (56) var_aux -> . POINT ID
    (57) var_aux -> . POINT ID var_aux_2
    (58) var_aux -> . var_aux_2
    (59) var_aux_2 -> . LBRACKET exp RBRACKET
    (60) var_aux_2 -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET

    EQUAL           reduce using rule 54 (var -> ID .)
    RPAREN          reduce using rule 54 (var -> ID .)
    POINT           shift and go to state 109
    LBRACKET        shift and go to state 111

    var_aux                        shift and go to state 108
    var_aux_2                      shift and go to state 110

state 87

    (45) statutes -> CALL call . SEMICOLON

    SEMICOLON       shift and go to state 112


state 88

    (61) call -> ID . LPAREN RPAREN
    (62) call -> ID . POINT ID LPAREN RPAREN
    (63) call -> ID . LPAREN call_aux RPAREN
    (64) call -> ID . POINT ID LPAREN call_aux RPAREN

    LPAREN          shift and go to state 113
    POINT           shift and go to state 114


state 89

    (73) read -> READ LPAREN . var RPAREN SEMICOLON
    (54) var -> . ID
    (55) var -> . ID var_aux

    ID              shift and go to state 86

    var                            shift and go to state 115

state 90

    (74) write -> WRITE LPAREN . write_aux RPAREN SEMICOLON
    (75) write_aux -> . exp
    (76) write_aux -> . exp COMMA write_aux
    (77) write_aux -> . CTESTRING
    (78) write_aux -> . CTESTRING COMMA write_aux
    (81) exp -> . n_exp
    (82) exp -> . n_exp OR exp
    (83) n_exp -> . l_exp
    (84) n_exp -> . l_exp AND n_exp
    (85) l_exp -> . a_exp
    (86) l_exp -> . a_exp RELOP a_exp
    (87) a_exp -> . term
    (88) a_exp -> . term PLUS a_exp
    (89) a_exp -> . term MINUS a_exp
    (90) term -> . factor
    (91) term -> . factor TIMES term
    (92) term -> . factor DIVIDE term
    (93) factor -> . LPAREN exp RPAREN
    (94) factor -> . var
    (95) factor -> . call
    (96) factor -> . factor_aux
    (54) var -> . ID
    (55) var -> . ID var_aux
    (61) call -> . ID LPAREN RPAREN
    (62) call -> . ID POINT ID LPAREN RPAREN
    (63) call -> . ID LPAREN call_aux RPAREN
    (64) call -> . ID POINT ID LPAREN call_aux RPAREN
    (97) factor_aux -> . cte
    (98) factor_aux -> . PLUS cte
    (99) factor_aux -> . MINUS cte
    (100) cte -> . ID
    (101) cte -> . CTEI
    (102) cte -> . CTEF
    (103) cte -> . CTECHAR

    CTESTRING       shift and go to state 119
    LPAREN          shift and go to state 116
    ID              shift and go to state 130
    PLUS            shift and go to state 124
    MINUS           shift and go to state 125
    CTEI            shift and go to state 132
    CTEF            shift and go to state 133
    CTECHAR         shift and go to state 134

    write_aux                      shift and go to state 117
    exp                            shift and go to state 118
    n_exp                          shift and go to state 120
    l_exp                          shift and go to state 121
    a_exp                          shift and go to state 122
    term                           shift and go to state 123
    factor                         shift and go to state 126
    var                            shift and go to state 127
    call                           shift and go to state 128
    factor_aux                     shift and go to state 129
    cte                            shift and go to state 131

state 91

    (67) condition -> IF condition_aux .

    ASSIGN          reduce using rule 67 (condition -> IF condition_aux .)
    CALL            reduce using rule 67 (condition -> IF condition_aux .)
    READ            reduce using rule 67 (condition -> IF condition_aux .)
    WRITE           reduce using rule 67 (condition -> IF condition_aux .)
    IF              reduce using rule 67 (condition -> IF condition_aux .)
    WHILE           reduce using rule 67 (condition -> IF condition_aux .)
    FROM            reduce using rule 67 (condition -> IF condition_aux .)
    RBRACE          reduce using rule 67 (condition -> IF condition_aux .)
    RETURN          reduce using rule 67 (condition -> IF condition_aux .)


state 92

    (68) condition_aux -> LPAREN . exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3
    (70) condition_aux_2 -> LPAREN . exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux
    (81) exp -> . n_exp
    (82) exp -> . n_exp OR exp
    (83) n_exp -> . l_exp
    (84) n_exp -> . l_exp AND n_exp
    (85) l_exp -> . a_exp
    (86) l_exp -> . a_exp RELOP a_exp
    (87) a_exp -> . term
    (88) a_exp -> . term PLUS a_exp
    (89) a_exp -> . term MINUS a_exp
    (90) term -> . factor
    (91) term -> . factor TIMES term
    (92) term -> . factor DIVIDE term
    (93) factor -> . LPAREN exp RPAREN
    (94) factor -> . var
    (95) factor -> . call
    (96) factor -> . factor_aux
    (54) var -> . ID
    (55) var -> . ID var_aux
    (61) call -> . ID LPAREN RPAREN
    (62) call -> . ID POINT ID LPAREN RPAREN
    (63) call -> . ID LPAREN call_aux RPAREN
    (64) call -> . ID POINT ID LPAREN call_aux RPAREN
    (97) factor_aux -> . cte
    (98) factor_aux -> . PLUS cte
    (99) factor_aux -> . MINUS cte
    (100) cte -> . ID
    (101) cte -> . CTEI
    (102) cte -> . CTEF
    (103) cte -> . CTECHAR

    LPAREN          shift and go to state 116
    ID              shift and go to state 130
    PLUS            shift and go to state 124
    MINUS           shift and go to state 125
    CTEI            shift and go to state 132
    CTEF            shift and go to state 133
    CTECHAR         shift and go to state 134

    exp                            shift and go to state 135
    n_exp                          shift and go to state 120
    l_exp                          shift and go to state 121
    a_exp                          shift and go to state 122
    term                           shift and go to state 123
    factor                         shift and go to state 126
    var                            shift and go to state 127
    call                           shift and go to state 128
    factor_aux                     shift and go to state 129
    cte                            shift and go to state 131

state 93

    (69) condition_aux -> condition_aux_2 .

    ASSIGN          reduce using rule 69 (condition_aux -> condition_aux_2 .)
    CALL            reduce using rule 69 (condition_aux -> condition_aux_2 .)
    READ            reduce using rule 69 (condition_aux -> condition_aux_2 .)
    WRITE           reduce using rule 69 (condition_aux -> condition_aux_2 .)
    IF              reduce using rule 69 (condition_aux -> condition_aux_2 .)
    WHILE           reduce using rule 69 (condition_aux -> condition_aux_2 .)
    FROM            reduce using rule 69 (condition_aux -> condition_aux_2 .)
    RBRACE          reduce using rule 69 (condition_aux -> condition_aux_2 .)
    RETURN          reduce using rule 69 (condition_aux -> condition_aux_2 .)


state 94

    (79) while -> WHILE LPAREN . exp RPAREN DO LBRACE statutes_aux RBRACE
    (81) exp -> . n_exp
    (82) exp -> . n_exp OR exp
    (83) n_exp -> . l_exp
    (84) n_exp -> . l_exp AND n_exp
    (85) l_exp -> . a_exp
    (86) l_exp -> . a_exp RELOP a_exp
    (87) a_exp -> . term
    (88) a_exp -> . term PLUS a_exp
    (89) a_exp -> . term MINUS a_exp
    (90) term -> . factor
    (91) term -> . factor TIMES term
    (92) term -> . factor DIVIDE term
    (93) factor -> . LPAREN exp RPAREN
    (94) factor -> . var
    (95) factor -> . call
    (96) factor -> . factor_aux
    (54) var -> . ID
    (55) var -> . ID var_aux
    (61) call -> . ID LPAREN RPAREN
    (62) call -> . ID POINT ID LPAREN RPAREN
    (63) call -> . ID LPAREN call_aux RPAREN
    (64) call -> . ID POINT ID LPAREN call_aux RPAREN
    (97) factor_aux -> . cte
    (98) factor_aux -> . PLUS cte
    (99) factor_aux -> . MINUS cte
    (100) cte -> . ID
    (101) cte -> . CTEI
    (102) cte -> . CTEF
    (103) cte -> . CTECHAR

    LPAREN          shift and go to state 116
    ID              shift and go to state 130
    PLUS            shift and go to state 124
    MINUS           shift and go to state 125
    CTEI            shift and go to state 132
    CTEF            shift and go to state 133
    CTECHAR         shift and go to state 134

    exp                            shift and go to state 136
    n_exp                          shift and go to state 120
    l_exp                          shift and go to state 121
    a_exp                          shift and go to state 122
    term                           shift and go to state 123
    factor                         shift and go to state 126
    var                            shift and go to state 127
    call                           shift and go to state 128
    factor_aux                     shift and go to state 129
    cte                            shift and go to state 131

state 95

    (80) for -> FROM LPAREN . assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (53) assignation -> . var EQUAL exp
    (54) var -> . ID
    (55) var -> . ID var_aux

    ID              shift and go to state 86

    assignation                    shift and go to state 137
    var                            shift and go to state 85

state 96

    (11) dec_vars_aux -> simple_type vars_simple_type SEMICOLON dec_vars_aux .

    FUNCT           reduce using rule 11 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON dec_vars_aux .)
    MAIN            reduce using rule 11 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON dec_vars_aux .)
    ASSIGN          reduce using rule 11 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON dec_vars_aux .)
    CALL            reduce using rule 11 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON dec_vars_aux .)
    READ            reduce using rule 11 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON dec_vars_aux .)
    WRITE           reduce using rule 11 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON dec_vars_aux .)
    IF              reduce using rule 11 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON dec_vars_aux .)
    WHILE           reduce using rule 11 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON dec_vars_aux .)
    FROM            reduce using rule 11 (dec_vars_aux -> simple_type vars_simple_type SEMICOLON dec_vars_aux .)


state 97

    (17) vars_simple_type -> ID add_variable COMMA . vars_simple_type
    (16) vars_simple_type -> . ID add_variable
    (17) vars_simple_type -> . ID add_variable COMMA vars_simple_type
    (18) vars_simple_type -> . ID vars_simple_type_aux
    (19) vars_simple_type -> . ID vars_simple_type_aux COMMA vars_simple_type

    ID              shift and go to state 46

    vars_simple_type               shift and go to state 138

state 98

    (19) vars_simple_type -> ID vars_simple_type_aux COMMA . vars_simple_type
    (16) vars_simple_type -> . ID add_variable
    (17) vars_simple_type -> . ID add_variable COMMA vars_simple_type
    (18) vars_simple_type -> . ID vars_simple_type_aux
    (19) vars_simple_type -> . ID vars_simple_type_aux COMMA vars_simple_type

    ID              shift and go to state 46

    vars_simple_type               shift and go to state 139

state 99

    (20) vars_simple_type_aux -> LBRACKET CTEI . RBRACKET add_array_variable
    (21) vars_simple_type_aux -> LBRACKET CTEI . RBRACKET LBRACKET CTEI RBRACKET add_matrix_variable

    RBRACKET        shift and go to state 140


state 100

    (13) dec_vars_aux -> complex_type vars_complex_type SEMICOLON dec_vars_aux .

    FUNCT           reduce using rule 13 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON dec_vars_aux .)
    MAIN            reduce using rule 13 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON dec_vars_aux .)
    ASSIGN          reduce using rule 13 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON dec_vars_aux .)
    CALL            reduce using rule 13 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON dec_vars_aux .)
    READ            reduce using rule 13 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON dec_vars_aux .)
    WRITE           reduce using rule 13 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON dec_vars_aux .)
    IF              reduce using rule 13 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON dec_vars_aux .)
    WHILE           reduce using rule 13 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON dec_vars_aux .)
    FROM            reduce using rule 13 (dec_vars_aux -> complex_type vars_complex_type SEMICOLON dec_vars_aux .)


state 101

    (15) vars_complex_type -> ID COMMA vars_complex_type .

    SEMICOLON       reduce using rule 15 (vars_complex_type -> ID COMMA vars_complex_type .)


state 102

    (34) functions_aux -> VOID ID add_function LPAREN . params RPAREN body
    (35) functions_aux -> VOID ID add_function LPAREN . RPAREN body
    (38) params -> . simple_type ID add_variable
    (39) params -> . simple_type ID add_variable COMMA params
    (22) simple_type -> . INT
    (23) simple_type -> . FLOAT
    (24) simple_type -> . CHAR

    RPAREN          shift and go to state 142
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35

    params                         shift and go to state 141
    simple_type                    shift and go to state 143

state 103

    (36) functions_aux -> simple_type ID add_function LPAREN . RPAREN body
    (37) functions_aux -> simple_type ID add_function LPAREN . params RPAREN body
    (38) params -> . simple_type ID add_variable
    (39) params -> . simple_type ID add_variable COMMA params
    (22) simple_type -> . INT
    (23) simple_type -> . FLOAT
    (24) simple_type -> . CHAR

    RPAREN          shift and go to state 144
    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35

    simple_type                    shift and go to state 143
    params                         shift and go to state 145

state 104

    (30) classes_aux -> INHERITS ID LBRACE dec_vars functions RBRACE .

    CLASS           reduce using rule 30 (classes_aux -> INHERITS ID LBRACE dec_vars functions RBRACE .)
    MAIN_CLASS      reduce using rule 30 (classes_aux -> INHERITS ID LBRACE dec_vars functions RBRACE .)


state 105

    (105) main -> MAIN LBRACE dec_vars statutes_aux RBRACE .

    RBRACE          reduce using rule 105 (main -> MAIN LBRACE dec_vars statutes_aux RBRACE .)


state 106

    (44) statutes -> ASSIGN assignation SEMICOLON .

    ASSIGN          reduce using rule 44 (statutes -> ASSIGN assignation SEMICOLON .)
    CALL            reduce using rule 44 (statutes -> ASSIGN assignation SEMICOLON .)
    READ            reduce using rule 44 (statutes -> ASSIGN assignation SEMICOLON .)
    WRITE           reduce using rule 44 (statutes -> ASSIGN assignation SEMICOLON .)
    IF              reduce using rule 44 (statutes -> ASSIGN assignation SEMICOLON .)
    WHILE           reduce using rule 44 (statutes -> ASSIGN assignation SEMICOLON .)
    FROM            reduce using rule 44 (statutes -> ASSIGN assignation SEMICOLON .)
    RBRACE          reduce using rule 44 (statutes -> ASSIGN assignation SEMICOLON .)
    RETURN          reduce using rule 44 (statutes -> ASSIGN assignation SEMICOLON .)


state 107

    (53) assignation -> var EQUAL . exp
    (81) exp -> . n_exp
    (82) exp -> . n_exp OR exp
    (83) n_exp -> . l_exp
    (84) n_exp -> . l_exp AND n_exp
    (85) l_exp -> . a_exp
    (86) l_exp -> . a_exp RELOP a_exp
    (87) a_exp -> . term
    (88) a_exp -> . term PLUS a_exp
    (89) a_exp -> . term MINUS a_exp
    (90) term -> . factor
    (91) term -> . factor TIMES term
    (92) term -> . factor DIVIDE term
    (93) factor -> . LPAREN exp RPAREN
    (94) factor -> . var
    (95) factor -> . call
    (96) factor -> . factor_aux
    (54) var -> . ID
    (55) var -> . ID var_aux
    (61) call -> . ID LPAREN RPAREN
    (62) call -> . ID POINT ID LPAREN RPAREN
    (63) call -> . ID LPAREN call_aux RPAREN
    (64) call -> . ID POINT ID LPAREN call_aux RPAREN
    (97) factor_aux -> . cte
    (98) factor_aux -> . PLUS cte
    (99) factor_aux -> . MINUS cte
    (100) cte -> . ID
    (101) cte -> . CTEI
    (102) cte -> . CTEF
    (103) cte -> . CTECHAR

    LPAREN          shift and go to state 116
    ID              shift and go to state 130
    PLUS            shift and go to state 124
    MINUS           shift and go to state 125
    CTEI            shift and go to state 132
    CTEF            shift and go to state 133
    CTECHAR         shift and go to state 134

    var                            shift and go to state 127
    exp                            shift and go to state 146
    n_exp                          shift and go to state 120
    l_exp                          shift and go to state 121
    a_exp                          shift and go to state 122
    term                           shift and go to state 123
    factor                         shift and go to state 126
    call                           shift and go to state 128
    factor_aux                     shift and go to state 129
    cte                            shift and go to state 131

state 108

    (55) var -> ID var_aux .

    EQUAL           reduce using rule 55 (var -> ID var_aux .)
    RPAREN          reduce using rule 55 (var -> ID var_aux .)
    TIMES           reduce using rule 55 (var -> ID var_aux .)
    DIVIDE          reduce using rule 55 (var -> ID var_aux .)
    PLUS            reduce using rule 55 (var -> ID var_aux .)
    MINUS           reduce using rule 55 (var -> ID var_aux .)
    RELOP           reduce using rule 55 (var -> ID var_aux .)
    AND             reduce using rule 55 (var -> ID var_aux .)
    OR              reduce using rule 55 (var -> ID var_aux .)
    COMMA           reduce using rule 55 (var -> ID var_aux .)
    SEMICOLON       reduce using rule 55 (var -> ID var_aux .)
    RBRACKET        reduce using rule 55 (var -> ID var_aux .)


state 109

    (56) var_aux -> POINT . ID
    (57) var_aux -> POINT . ID var_aux_2

    ID              shift and go to state 147


state 110

    (58) var_aux -> var_aux_2 .

    EQUAL           reduce using rule 58 (var_aux -> var_aux_2 .)
    RPAREN          reduce using rule 58 (var_aux -> var_aux_2 .)
    TIMES           reduce using rule 58 (var_aux -> var_aux_2 .)
    DIVIDE          reduce using rule 58 (var_aux -> var_aux_2 .)
    PLUS            reduce using rule 58 (var_aux -> var_aux_2 .)
    MINUS           reduce using rule 58 (var_aux -> var_aux_2 .)
    RELOP           reduce using rule 58 (var_aux -> var_aux_2 .)
    AND             reduce using rule 58 (var_aux -> var_aux_2 .)
    OR              reduce using rule 58 (var_aux -> var_aux_2 .)
    COMMA           reduce using rule 58 (var_aux -> var_aux_2 .)
    SEMICOLON       reduce using rule 58 (var_aux -> var_aux_2 .)
    RBRACKET        reduce using rule 58 (var_aux -> var_aux_2 .)


state 111

    (59) var_aux_2 -> LBRACKET . exp RBRACKET
    (60) var_aux_2 -> LBRACKET . exp RBRACKET LBRACKET exp RBRACKET
    (81) exp -> . n_exp
    (82) exp -> . n_exp OR exp
    (83) n_exp -> . l_exp
    (84) n_exp -> . l_exp AND n_exp
    (85) l_exp -> . a_exp
    (86) l_exp -> . a_exp RELOP a_exp
    (87) a_exp -> . term
    (88) a_exp -> . term PLUS a_exp
    (89) a_exp -> . term MINUS a_exp
    (90) term -> . factor
    (91) term -> . factor TIMES term
    (92) term -> . factor DIVIDE term
    (93) factor -> . LPAREN exp RPAREN
    (94) factor -> . var
    (95) factor -> . call
    (96) factor -> . factor_aux
    (54) var -> . ID
    (55) var -> . ID var_aux
    (61) call -> . ID LPAREN RPAREN
    (62) call -> . ID POINT ID LPAREN RPAREN
    (63) call -> . ID LPAREN call_aux RPAREN
    (64) call -> . ID POINT ID LPAREN call_aux RPAREN
    (97) factor_aux -> . cte
    (98) factor_aux -> . PLUS cte
    (99) factor_aux -> . MINUS cte
    (100) cte -> . ID
    (101) cte -> . CTEI
    (102) cte -> . CTEF
    (103) cte -> . CTECHAR

    LPAREN          shift and go to state 116
    ID              shift and go to state 130
    PLUS            shift and go to state 124
    MINUS           shift and go to state 125
    CTEI            shift and go to state 132
    CTEF            shift and go to state 133
    CTECHAR         shift and go to state 134

    exp                            shift and go to state 148
    n_exp                          shift and go to state 120
    l_exp                          shift and go to state 121
    a_exp                          shift and go to state 122
    term                           shift and go to state 123
    factor                         shift and go to state 126
    var                            shift and go to state 127
    call                           shift and go to state 128
    factor_aux                     shift and go to state 129
    cte                            shift and go to state 131

state 112

    (45) statutes -> CALL call SEMICOLON .

    ASSIGN          reduce using rule 45 (statutes -> CALL call SEMICOLON .)
    CALL            reduce using rule 45 (statutes -> CALL call SEMICOLON .)
    READ            reduce using rule 45 (statutes -> CALL call SEMICOLON .)
    WRITE           reduce using rule 45 (statutes -> CALL call SEMICOLON .)
    IF              reduce using rule 45 (statutes -> CALL call SEMICOLON .)
    WHILE           reduce using rule 45 (statutes -> CALL call SEMICOLON .)
    FROM            reduce using rule 45 (statutes -> CALL call SEMICOLON .)
    RBRACE          reduce using rule 45 (statutes -> CALL call SEMICOLON .)
    RETURN          reduce using rule 45 (statutes -> CALL call SEMICOLON .)


state 113

    (61) call -> ID LPAREN . RPAREN
    (63) call -> ID LPAREN . call_aux RPAREN
    (65) call_aux -> . exp
    (66) call_aux -> . exp COMMA call_aux
    (81) exp -> . n_exp
    (82) exp -> . n_exp OR exp
    (83) n_exp -> . l_exp
    (84) n_exp -> . l_exp AND n_exp
    (85) l_exp -> . a_exp
    (86) l_exp -> . a_exp RELOP a_exp
    (87) a_exp -> . term
    (88) a_exp -> . term PLUS a_exp
    (89) a_exp -> . term MINUS a_exp
    (90) term -> . factor
    (91) term -> . factor TIMES term
    (92) term -> . factor DIVIDE term
    (93) factor -> . LPAREN exp RPAREN
    (94) factor -> . var
    (95) factor -> . call
    (96) factor -> . factor_aux
    (54) var -> . ID
    (55) var -> . ID var_aux
    (61) call -> . ID LPAREN RPAREN
    (62) call -> . ID POINT ID LPAREN RPAREN
    (63) call -> . ID LPAREN call_aux RPAREN
    (64) call -> . ID POINT ID LPAREN call_aux RPAREN
    (97) factor_aux -> . cte
    (98) factor_aux -> . PLUS cte
    (99) factor_aux -> . MINUS cte
    (100) cte -> . ID
    (101) cte -> . CTEI
    (102) cte -> . CTEF
    (103) cte -> . CTECHAR

    RPAREN          shift and go to state 149
    LPAREN          shift and go to state 116
    ID              shift and go to state 130
    PLUS            shift and go to state 124
    MINUS           shift and go to state 125
    CTEI            shift and go to state 132
    CTEF            shift and go to state 133
    CTECHAR         shift and go to state 134

    call_aux                       shift and go to state 150
    exp                            shift and go to state 151
    n_exp                          shift and go to state 120
    l_exp                          shift and go to state 121
    a_exp                          shift and go to state 122
    term                           shift and go to state 123
    factor                         shift and go to state 126
    var                            shift and go to state 127
    call                           shift and go to state 128
    factor_aux                     shift and go to state 129
    cte                            shift and go to state 131

state 114

    (62) call -> ID POINT . ID LPAREN RPAREN
    (64) call -> ID POINT . ID LPAREN call_aux RPAREN

    ID              shift and go to state 152


state 115

    (73) read -> READ LPAREN var . RPAREN SEMICOLON

    RPAREN          shift and go to state 153


state 116

    (93) factor -> LPAREN . exp RPAREN
    (81) exp -> . n_exp
    (82) exp -> . n_exp OR exp
    (83) n_exp -> . l_exp
    (84) n_exp -> . l_exp AND n_exp
    (85) l_exp -> . a_exp
    (86) l_exp -> . a_exp RELOP a_exp
    (87) a_exp -> . term
    (88) a_exp -> . term PLUS a_exp
    (89) a_exp -> . term MINUS a_exp
    (90) term -> . factor
    (91) term -> . factor TIMES term
    (92) term -> . factor DIVIDE term
    (93) factor -> . LPAREN exp RPAREN
    (94) factor -> . var
    (95) factor -> . call
    (96) factor -> . factor_aux
    (54) var -> . ID
    (55) var -> . ID var_aux
    (61) call -> . ID LPAREN RPAREN
    (62) call -> . ID POINT ID LPAREN RPAREN
    (63) call -> . ID LPAREN call_aux RPAREN
    (64) call -> . ID POINT ID LPAREN call_aux RPAREN
    (97) factor_aux -> . cte
    (98) factor_aux -> . PLUS cte
    (99) factor_aux -> . MINUS cte
    (100) cte -> . ID
    (101) cte -> . CTEI
    (102) cte -> . CTEF
    (103) cte -> . CTECHAR

    LPAREN          shift and go to state 116
    ID              shift and go to state 130
    PLUS            shift and go to state 124
    MINUS           shift and go to state 125
    CTEI            shift and go to state 132
    CTEF            shift and go to state 133
    CTECHAR         shift and go to state 134

    exp                            shift and go to state 154
    n_exp                          shift and go to state 120
    l_exp                          shift and go to state 121
    a_exp                          shift and go to state 122
    term                           shift and go to state 123
    factor                         shift and go to state 126
    var                            shift and go to state 127
    call                           shift and go to state 128
    factor_aux                     shift and go to state 129
    cte                            shift and go to state 131

state 117

    (74) write -> WRITE LPAREN write_aux . RPAREN SEMICOLON

    RPAREN          shift and go to state 155


state 118

    (75) write_aux -> exp .
    (76) write_aux -> exp . COMMA write_aux

    RPAREN          reduce using rule 75 (write_aux -> exp .)
    COMMA           shift and go to state 156


state 119

    (77) write_aux -> CTESTRING .
    (78) write_aux -> CTESTRING . COMMA write_aux

    RPAREN          reduce using rule 77 (write_aux -> CTESTRING .)
    COMMA           shift and go to state 157


state 120

    (81) exp -> n_exp .
    (82) exp -> n_exp . OR exp

    COMMA           reduce using rule 81 (exp -> n_exp .)
    RPAREN          reduce using rule 81 (exp -> n_exp .)
    SEMICOLON       reduce using rule 81 (exp -> n_exp .)
    RBRACKET        reduce using rule 81 (exp -> n_exp .)
    OR              shift and go to state 158


state 121

    (83) n_exp -> l_exp .
    (84) n_exp -> l_exp . AND n_exp

    OR              reduce using rule 83 (n_exp -> l_exp .)
    COMMA           reduce using rule 83 (n_exp -> l_exp .)
    RPAREN          reduce using rule 83 (n_exp -> l_exp .)
    SEMICOLON       reduce using rule 83 (n_exp -> l_exp .)
    RBRACKET        reduce using rule 83 (n_exp -> l_exp .)
    AND             shift and go to state 159


state 122

    (85) l_exp -> a_exp .
    (86) l_exp -> a_exp . RELOP a_exp

    AND             reduce using rule 85 (l_exp -> a_exp .)
    OR              reduce using rule 85 (l_exp -> a_exp .)
    COMMA           reduce using rule 85 (l_exp -> a_exp .)
    RPAREN          reduce using rule 85 (l_exp -> a_exp .)
    SEMICOLON       reduce using rule 85 (l_exp -> a_exp .)
    RBRACKET        reduce using rule 85 (l_exp -> a_exp .)
    RELOP           shift and go to state 160


state 123

    (87) a_exp -> term .
    (88) a_exp -> term . PLUS a_exp
    (89) a_exp -> term . MINUS a_exp

    RELOP           reduce using rule 87 (a_exp -> term .)
    AND             reduce using rule 87 (a_exp -> term .)
    OR              reduce using rule 87 (a_exp -> term .)
    COMMA           reduce using rule 87 (a_exp -> term .)
    RPAREN          reduce using rule 87 (a_exp -> term .)
    SEMICOLON       reduce using rule 87 (a_exp -> term .)
    RBRACKET        reduce using rule 87 (a_exp -> term .)
    PLUS            shift and go to state 161
    MINUS           shift and go to state 162


state 124

    (98) factor_aux -> PLUS . cte
    (100) cte -> . ID
    (101) cte -> . CTEI
    (102) cte -> . CTEF
    (103) cte -> . CTECHAR

    ID              shift and go to state 164
    CTEI            shift and go to state 132
    CTEF            shift and go to state 133
    CTECHAR         shift and go to state 134

    cte                            shift and go to state 163

state 125

    (99) factor_aux -> MINUS . cte
    (100) cte -> . ID
    (101) cte -> . CTEI
    (102) cte -> . CTEF
    (103) cte -> . CTECHAR

    ID              shift and go to state 164
    CTEI            shift and go to state 132
    CTEF            shift and go to state 133
    CTECHAR         shift and go to state 134

    cte                            shift and go to state 165

state 126

    (90) term -> factor .
    (91) term -> factor . TIMES term
    (92) term -> factor . DIVIDE term

    PLUS            reduce using rule 90 (term -> factor .)
    MINUS           reduce using rule 90 (term -> factor .)
    RELOP           reduce using rule 90 (term -> factor .)
    AND             reduce using rule 90 (term -> factor .)
    OR              reduce using rule 90 (term -> factor .)
    COMMA           reduce using rule 90 (term -> factor .)
    RPAREN          reduce using rule 90 (term -> factor .)
    SEMICOLON       reduce using rule 90 (term -> factor .)
    RBRACKET        reduce using rule 90 (term -> factor .)
    TIMES           shift and go to state 166
    DIVIDE          shift and go to state 167


state 127

    (94) factor -> var .

    TIMES           reduce using rule 94 (factor -> var .)
    DIVIDE          reduce using rule 94 (factor -> var .)
    PLUS            reduce using rule 94 (factor -> var .)
    MINUS           reduce using rule 94 (factor -> var .)
    RELOP           reduce using rule 94 (factor -> var .)
    AND             reduce using rule 94 (factor -> var .)
    OR              reduce using rule 94 (factor -> var .)
    COMMA           reduce using rule 94 (factor -> var .)
    RPAREN          reduce using rule 94 (factor -> var .)
    SEMICOLON       reduce using rule 94 (factor -> var .)
    RBRACKET        reduce using rule 94 (factor -> var .)


state 128

    (95) factor -> call .

    TIMES           reduce using rule 95 (factor -> call .)
    DIVIDE          reduce using rule 95 (factor -> call .)
    PLUS            reduce using rule 95 (factor -> call .)
    MINUS           reduce using rule 95 (factor -> call .)
    RELOP           reduce using rule 95 (factor -> call .)
    AND             reduce using rule 95 (factor -> call .)
    OR              reduce using rule 95 (factor -> call .)
    COMMA           reduce using rule 95 (factor -> call .)
    RPAREN          reduce using rule 95 (factor -> call .)
    SEMICOLON       reduce using rule 95 (factor -> call .)
    RBRACKET        reduce using rule 95 (factor -> call .)


state 129

    (96) factor -> factor_aux .

    TIMES           reduce using rule 96 (factor -> factor_aux .)
    DIVIDE          reduce using rule 96 (factor -> factor_aux .)
    PLUS            reduce using rule 96 (factor -> factor_aux .)
    MINUS           reduce using rule 96 (factor -> factor_aux .)
    RELOP           reduce using rule 96 (factor -> factor_aux .)
    AND             reduce using rule 96 (factor -> factor_aux .)
    OR              reduce using rule 96 (factor -> factor_aux .)
    COMMA           reduce using rule 96 (factor -> factor_aux .)
    RPAREN          reduce using rule 96 (factor -> factor_aux .)
    SEMICOLON       reduce using rule 96 (factor -> factor_aux .)
    RBRACKET        reduce using rule 96 (factor -> factor_aux .)


state 130

    (54) var -> ID .
    (55) var -> ID . var_aux
    (61) call -> ID . LPAREN RPAREN
    (62) call -> ID . POINT ID LPAREN RPAREN
    (63) call -> ID . LPAREN call_aux RPAREN
    (64) call -> ID . POINT ID LPAREN call_aux RPAREN
    (100) cte -> ID .
    (56) var_aux -> . POINT ID
    (57) var_aux -> . POINT ID var_aux_2
    (58) var_aux -> . var_aux_2
    (59) var_aux_2 -> . LBRACKET exp RBRACKET
    (60) var_aux_2 -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET

  ! reduce/reduce conflict for TIMES resolved using rule 54 (var -> ID .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 54 (var -> ID .)
  ! reduce/reduce conflict for PLUS resolved using rule 54 (var -> ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 54 (var -> ID .)
  ! reduce/reduce conflict for RELOP resolved using rule 54 (var -> ID .)
  ! reduce/reduce conflict for AND resolved using rule 54 (var -> ID .)
  ! reduce/reduce conflict for OR resolved using rule 54 (var -> ID .)
  ! reduce/reduce conflict for COMMA resolved using rule 54 (var -> ID .)
  ! reduce/reduce conflict for RPAREN resolved using rule 54 (var -> ID .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 54 (var -> ID .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 54 (var -> ID .)
    TIMES           reduce using rule 54 (var -> ID .)
    DIVIDE          reduce using rule 54 (var -> ID .)
    PLUS            reduce using rule 54 (var -> ID .)
    MINUS           reduce using rule 54 (var -> ID .)
    RELOP           reduce using rule 54 (var -> ID .)
    AND             reduce using rule 54 (var -> ID .)
    OR              reduce using rule 54 (var -> ID .)
    COMMA           reduce using rule 54 (var -> ID .)
    RPAREN          reduce using rule 54 (var -> ID .)
    SEMICOLON       reduce using rule 54 (var -> ID .)
    RBRACKET        reduce using rule 54 (var -> ID .)
    LPAREN          shift and go to state 113
    POINT           shift and go to state 168
    LBRACKET        shift and go to state 111

  ! TIMES           [ reduce using rule 100 (cte -> ID .) ]
  ! DIVIDE          [ reduce using rule 100 (cte -> ID .) ]
  ! PLUS            [ reduce using rule 100 (cte -> ID .) ]
  ! MINUS           [ reduce using rule 100 (cte -> ID .) ]
  ! RELOP           [ reduce using rule 100 (cte -> ID .) ]
  ! AND             [ reduce using rule 100 (cte -> ID .) ]
  ! OR              [ reduce using rule 100 (cte -> ID .) ]
  ! COMMA           [ reduce using rule 100 (cte -> ID .) ]
  ! RPAREN          [ reduce using rule 100 (cte -> ID .) ]
  ! SEMICOLON       [ reduce using rule 100 (cte -> ID .) ]
  ! RBRACKET        [ reduce using rule 100 (cte -> ID .) ]

    var_aux                        shift and go to state 108
    var_aux_2                      shift and go to state 110

state 131

    (97) factor_aux -> cte .

    TIMES           reduce using rule 97 (factor_aux -> cte .)
    DIVIDE          reduce using rule 97 (factor_aux -> cte .)
    PLUS            reduce using rule 97 (factor_aux -> cte .)
    MINUS           reduce using rule 97 (factor_aux -> cte .)
    RELOP           reduce using rule 97 (factor_aux -> cte .)
    AND             reduce using rule 97 (factor_aux -> cte .)
    OR              reduce using rule 97 (factor_aux -> cte .)
    COMMA           reduce using rule 97 (factor_aux -> cte .)
    RPAREN          reduce using rule 97 (factor_aux -> cte .)
    SEMICOLON       reduce using rule 97 (factor_aux -> cte .)
    RBRACKET        reduce using rule 97 (factor_aux -> cte .)


state 132

    (101) cte -> CTEI .

    TIMES           reduce using rule 101 (cte -> CTEI .)
    DIVIDE          reduce using rule 101 (cte -> CTEI .)
    PLUS            reduce using rule 101 (cte -> CTEI .)
    MINUS           reduce using rule 101 (cte -> CTEI .)
    RELOP           reduce using rule 101 (cte -> CTEI .)
    AND             reduce using rule 101 (cte -> CTEI .)
    OR              reduce using rule 101 (cte -> CTEI .)
    COMMA           reduce using rule 101 (cte -> CTEI .)
    RPAREN          reduce using rule 101 (cte -> CTEI .)
    SEMICOLON       reduce using rule 101 (cte -> CTEI .)
    RBRACKET        reduce using rule 101 (cte -> CTEI .)


state 133

    (102) cte -> CTEF .

    TIMES           reduce using rule 102 (cte -> CTEF .)
    DIVIDE          reduce using rule 102 (cte -> CTEF .)
    PLUS            reduce using rule 102 (cte -> CTEF .)
    MINUS           reduce using rule 102 (cte -> CTEF .)
    RELOP           reduce using rule 102 (cte -> CTEF .)
    AND             reduce using rule 102 (cte -> CTEF .)
    OR              reduce using rule 102 (cte -> CTEF .)
    COMMA           reduce using rule 102 (cte -> CTEF .)
    RPAREN          reduce using rule 102 (cte -> CTEF .)
    SEMICOLON       reduce using rule 102 (cte -> CTEF .)
    RBRACKET        reduce using rule 102 (cte -> CTEF .)


state 134

    (103) cte -> CTECHAR .

    TIMES           reduce using rule 103 (cte -> CTECHAR .)
    DIVIDE          reduce using rule 103 (cte -> CTECHAR .)
    PLUS            reduce using rule 103 (cte -> CTECHAR .)
    MINUS           reduce using rule 103 (cte -> CTECHAR .)
    RELOP           reduce using rule 103 (cte -> CTECHAR .)
    AND             reduce using rule 103 (cte -> CTECHAR .)
    OR              reduce using rule 103 (cte -> CTECHAR .)
    COMMA           reduce using rule 103 (cte -> CTECHAR .)
    RPAREN          reduce using rule 103 (cte -> CTECHAR .)
    SEMICOLON       reduce using rule 103 (cte -> CTECHAR .)
    RBRACKET        reduce using rule 103 (cte -> CTECHAR .)


state 135

    (68) condition_aux -> LPAREN exp . RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3
    (70) condition_aux_2 -> LPAREN exp . RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux

    RPAREN          shift and go to state 169


state 136

    (79) while -> WHILE LPAREN exp . RPAREN DO LBRACE statutes_aux RBRACE

    RPAREN          shift and go to state 170


state 137

    (80) for -> FROM LPAREN assignation . RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    RPAREN          shift and go to state 171


state 138

    (17) vars_simple_type -> ID add_variable COMMA vars_simple_type .

    SEMICOLON       reduce using rule 17 (vars_simple_type -> ID add_variable COMMA vars_simple_type .)


state 139

    (19) vars_simple_type -> ID vars_simple_type_aux COMMA vars_simple_type .

    SEMICOLON       reduce using rule 19 (vars_simple_type -> ID vars_simple_type_aux COMMA vars_simple_type .)


state 140

    (20) vars_simple_type_aux -> LBRACKET CTEI RBRACKET . add_array_variable
    (21) vars_simple_type_aux -> LBRACKET CTEI RBRACKET . LBRACKET CTEI RBRACKET add_matrix_variable
    (108) add_array_variable -> .

    LBRACKET        shift and go to state 172
    COMMA           reduce using rule 108 (add_array_variable -> .)
    SEMICOLON       reduce using rule 108 (add_array_variable -> .)

    add_array_variable             shift and go to state 173

state 141

    (34) functions_aux -> VOID ID add_function LPAREN params . RPAREN body

    RPAREN          shift and go to state 174


state 142

    (35) functions_aux -> VOID ID add_function LPAREN RPAREN . body
    (40) body -> . LBRACE dec_vars statutes_aux RBRACE
    (41) body -> . LBRACE statutes_aux RBRACE
    (42) body -> . LBRACE statutes_aux RETURN ID SEMICOLON RBRACE
    (43) body -> . LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE

    LBRACE          shift and go to state 176

    body                           shift and go to state 175

state 143

    (38) params -> simple_type . ID add_variable
    (39) params -> simple_type . ID add_variable COMMA params

    ID              shift and go to state 177


state 144

    (36) functions_aux -> simple_type ID add_function LPAREN RPAREN . body
    (40) body -> . LBRACE dec_vars statutes_aux RBRACE
    (41) body -> . LBRACE statutes_aux RBRACE
    (42) body -> . LBRACE statutes_aux RETURN ID SEMICOLON RBRACE
    (43) body -> . LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE

    LBRACE          shift and go to state 176

    body                           shift and go to state 178

state 145

    (37) functions_aux -> simple_type ID add_function LPAREN params . RPAREN body

    RPAREN          shift and go to state 179


state 146

    (53) assignation -> var EQUAL exp .

    SEMICOLON       reduce using rule 53 (assignation -> var EQUAL exp .)
    RPAREN          reduce using rule 53 (assignation -> var EQUAL exp .)


state 147

    (56) var_aux -> POINT ID .
    (57) var_aux -> POINT ID . var_aux_2
    (59) var_aux_2 -> . LBRACKET exp RBRACKET
    (60) var_aux_2 -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET

    EQUAL           reduce using rule 56 (var_aux -> POINT ID .)
    RPAREN          reduce using rule 56 (var_aux -> POINT ID .)
    LBRACKET        shift and go to state 111

    var_aux_2                      shift and go to state 180

state 148

    (59) var_aux_2 -> LBRACKET exp . RBRACKET
    (60) var_aux_2 -> LBRACKET exp . RBRACKET LBRACKET exp RBRACKET

    RBRACKET        shift and go to state 181


state 149

    (61) call -> ID LPAREN RPAREN .

    SEMICOLON       reduce using rule 61 (call -> ID LPAREN RPAREN .)
    TIMES           reduce using rule 61 (call -> ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 61 (call -> ID LPAREN RPAREN .)
    PLUS            reduce using rule 61 (call -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 61 (call -> ID LPAREN RPAREN .)
    RELOP           reduce using rule 61 (call -> ID LPAREN RPAREN .)
    AND             reduce using rule 61 (call -> ID LPAREN RPAREN .)
    OR              reduce using rule 61 (call -> ID LPAREN RPAREN .)
    COMMA           reduce using rule 61 (call -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 61 (call -> ID LPAREN RPAREN .)
    RBRACKET        reduce using rule 61 (call -> ID LPAREN RPAREN .)


state 150

    (63) call -> ID LPAREN call_aux . RPAREN

    RPAREN          shift and go to state 182


state 151

    (65) call_aux -> exp .
    (66) call_aux -> exp . COMMA call_aux

    RPAREN          reduce using rule 65 (call_aux -> exp .)
    COMMA           shift and go to state 183


state 152

    (62) call -> ID POINT ID . LPAREN RPAREN
    (64) call -> ID POINT ID . LPAREN call_aux RPAREN

    LPAREN          shift and go to state 184


state 153

    (73) read -> READ LPAREN var RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 185


state 154

    (93) factor -> LPAREN exp . RPAREN

    RPAREN          shift and go to state 186


state 155

    (74) write -> WRITE LPAREN write_aux RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 187


state 156

    (76) write_aux -> exp COMMA . write_aux
    (75) write_aux -> . exp
    (76) write_aux -> . exp COMMA write_aux
    (77) write_aux -> . CTESTRING
    (78) write_aux -> . CTESTRING COMMA write_aux
    (81) exp -> . n_exp
    (82) exp -> . n_exp OR exp
    (83) n_exp -> . l_exp
    (84) n_exp -> . l_exp AND n_exp
    (85) l_exp -> . a_exp
    (86) l_exp -> . a_exp RELOP a_exp
    (87) a_exp -> . term
    (88) a_exp -> . term PLUS a_exp
    (89) a_exp -> . term MINUS a_exp
    (90) term -> . factor
    (91) term -> . factor TIMES term
    (92) term -> . factor DIVIDE term
    (93) factor -> . LPAREN exp RPAREN
    (94) factor -> . var
    (95) factor -> . call
    (96) factor -> . factor_aux
    (54) var -> . ID
    (55) var -> . ID var_aux
    (61) call -> . ID LPAREN RPAREN
    (62) call -> . ID POINT ID LPAREN RPAREN
    (63) call -> . ID LPAREN call_aux RPAREN
    (64) call -> . ID POINT ID LPAREN call_aux RPAREN
    (97) factor_aux -> . cte
    (98) factor_aux -> . PLUS cte
    (99) factor_aux -> . MINUS cte
    (100) cte -> . ID
    (101) cte -> . CTEI
    (102) cte -> . CTEF
    (103) cte -> . CTECHAR

    CTESTRING       shift and go to state 119
    LPAREN          shift and go to state 116
    ID              shift and go to state 130
    PLUS            shift and go to state 124
    MINUS           shift and go to state 125
    CTEI            shift and go to state 132
    CTEF            shift and go to state 133
    CTECHAR         shift and go to state 134

    exp                            shift and go to state 118
    write_aux                      shift and go to state 188
    n_exp                          shift and go to state 120
    l_exp                          shift and go to state 121
    a_exp                          shift and go to state 122
    term                           shift and go to state 123
    factor                         shift and go to state 126
    var                            shift and go to state 127
    call                           shift and go to state 128
    factor_aux                     shift and go to state 129
    cte                            shift and go to state 131

state 157

    (78) write_aux -> CTESTRING COMMA . write_aux
    (75) write_aux -> . exp
    (76) write_aux -> . exp COMMA write_aux
    (77) write_aux -> . CTESTRING
    (78) write_aux -> . CTESTRING COMMA write_aux
    (81) exp -> . n_exp
    (82) exp -> . n_exp OR exp
    (83) n_exp -> . l_exp
    (84) n_exp -> . l_exp AND n_exp
    (85) l_exp -> . a_exp
    (86) l_exp -> . a_exp RELOP a_exp
    (87) a_exp -> . term
    (88) a_exp -> . term PLUS a_exp
    (89) a_exp -> . term MINUS a_exp
    (90) term -> . factor
    (91) term -> . factor TIMES term
    (92) term -> . factor DIVIDE term
    (93) factor -> . LPAREN exp RPAREN
    (94) factor -> . var
    (95) factor -> . call
    (96) factor -> . factor_aux
    (54) var -> . ID
    (55) var -> . ID var_aux
    (61) call -> . ID LPAREN RPAREN
    (62) call -> . ID POINT ID LPAREN RPAREN
    (63) call -> . ID LPAREN call_aux RPAREN
    (64) call -> . ID POINT ID LPAREN call_aux RPAREN
    (97) factor_aux -> . cte
    (98) factor_aux -> . PLUS cte
    (99) factor_aux -> . MINUS cte
    (100) cte -> . ID
    (101) cte -> . CTEI
    (102) cte -> . CTEF
    (103) cte -> . CTECHAR

    CTESTRING       shift and go to state 119
    LPAREN          shift and go to state 116
    ID              shift and go to state 130
    PLUS            shift and go to state 124
    MINUS           shift and go to state 125
    CTEI            shift and go to state 132
    CTEF            shift and go to state 133
    CTECHAR         shift and go to state 134

    write_aux                      shift and go to state 189
    exp                            shift and go to state 118
    n_exp                          shift and go to state 120
    l_exp                          shift and go to state 121
    a_exp                          shift and go to state 122
    term                           shift and go to state 123
    factor                         shift and go to state 126
    var                            shift and go to state 127
    call                           shift and go to state 128
    factor_aux                     shift and go to state 129
    cte                            shift and go to state 131

state 158

    (82) exp -> n_exp OR . exp
    (81) exp -> . n_exp
    (82) exp -> . n_exp OR exp
    (83) n_exp -> . l_exp
    (84) n_exp -> . l_exp AND n_exp
    (85) l_exp -> . a_exp
    (86) l_exp -> . a_exp RELOP a_exp
    (87) a_exp -> . term
    (88) a_exp -> . term PLUS a_exp
    (89) a_exp -> . term MINUS a_exp
    (90) term -> . factor
    (91) term -> . factor TIMES term
    (92) term -> . factor DIVIDE term
    (93) factor -> . LPAREN exp RPAREN
    (94) factor -> . var
    (95) factor -> . call
    (96) factor -> . factor_aux
    (54) var -> . ID
    (55) var -> . ID var_aux
    (61) call -> . ID LPAREN RPAREN
    (62) call -> . ID POINT ID LPAREN RPAREN
    (63) call -> . ID LPAREN call_aux RPAREN
    (64) call -> . ID POINT ID LPAREN call_aux RPAREN
    (97) factor_aux -> . cte
    (98) factor_aux -> . PLUS cte
    (99) factor_aux -> . MINUS cte
    (100) cte -> . ID
    (101) cte -> . CTEI
    (102) cte -> . CTEF
    (103) cte -> . CTECHAR

    LPAREN          shift and go to state 116
    ID              shift and go to state 130
    PLUS            shift and go to state 124
    MINUS           shift and go to state 125
    CTEI            shift and go to state 132
    CTEF            shift and go to state 133
    CTECHAR         shift and go to state 134

    n_exp                          shift and go to state 120
    exp                            shift and go to state 190
    l_exp                          shift and go to state 121
    a_exp                          shift and go to state 122
    term                           shift and go to state 123
    factor                         shift and go to state 126
    var                            shift and go to state 127
    call                           shift and go to state 128
    factor_aux                     shift and go to state 129
    cte                            shift and go to state 131

state 159

    (84) n_exp -> l_exp AND . n_exp
    (83) n_exp -> . l_exp
    (84) n_exp -> . l_exp AND n_exp
    (85) l_exp -> . a_exp
    (86) l_exp -> . a_exp RELOP a_exp
    (87) a_exp -> . term
    (88) a_exp -> . term PLUS a_exp
    (89) a_exp -> . term MINUS a_exp
    (90) term -> . factor
    (91) term -> . factor TIMES term
    (92) term -> . factor DIVIDE term
    (93) factor -> . LPAREN exp RPAREN
    (94) factor -> . var
    (95) factor -> . call
    (96) factor -> . factor_aux
    (54) var -> . ID
    (55) var -> . ID var_aux
    (61) call -> . ID LPAREN RPAREN
    (62) call -> . ID POINT ID LPAREN RPAREN
    (63) call -> . ID LPAREN call_aux RPAREN
    (64) call -> . ID POINT ID LPAREN call_aux RPAREN
    (97) factor_aux -> . cte
    (98) factor_aux -> . PLUS cte
    (99) factor_aux -> . MINUS cte
    (100) cte -> . ID
    (101) cte -> . CTEI
    (102) cte -> . CTEF
    (103) cte -> . CTECHAR

    LPAREN          shift and go to state 116
    ID              shift and go to state 130
    PLUS            shift and go to state 124
    MINUS           shift and go to state 125
    CTEI            shift and go to state 132
    CTEF            shift and go to state 133
    CTECHAR         shift and go to state 134

    l_exp                          shift and go to state 121
    n_exp                          shift and go to state 191
    a_exp                          shift and go to state 122
    term                           shift and go to state 123
    factor                         shift and go to state 126
    var                            shift and go to state 127
    call                           shift and go to state 128
    factor_aux                     shift and go to state 129
    cte                            shift and go to state 131

state 160

    (86) l_exp -> a_exp RELOP . a_exp
    (87) a_exp -> . term
    (88) a_exp -> . term PLUS a_exp
    (89) a_exp -> . term MINUS a_exp
    (90) term -> . factor
    (91) term -> . factor TIMES term
    (92) term -> . factor DIVIDE term
    (93) factor -> . LPAREN exp RPAREN
    (94) factor -> . var
    (95) factor -> . call
    (96) factor -> . factor_aux
    (54) var -> . ID
    (55) var -> . ID var_aux
    (61) call -> . ID LPAREN RPAREN
    (62) call -> . ID POINT ID LPAREN RPAREN
    (63) call -> . ID LPAREN call_aux RPAREN
    (64) call -> . ID POINT ID LPAREN call_aux RPAREN
    (97) factor_aux -> . cte
    (98) factor_aux -> . PLUS cte
    (99) factor_aux -> . MINUS cte
    (100) cte -> . ID
    (101) cte -> . CTEI
    (102) cte -> . CTEF
    (103) cte -> . CTECHAR

    LPAREN          shift and go to state 116
    ID              shift and go to state 130
    PLUS            shift and go to state 124
    MINUS           shift and go to state 125
    CTEI            shift and go to state 132
    CTEF            shift and go to state 133
    CTECHAR         shift and go to state 134

    a_exp                          shift and go to state 192
    term                           shift and go to state 123
    factor                         shift and go to state 126
    var                            shift and go to state 127
    call                           shift and go to state 128
    factor_aux                     shift and go to state 129
    cte                            shift and go to state 131

state 161

    (88) a_exp -> term PLUS . a_exp
    (87) a_exp -> . term
    (88) a_exp -> . term PLUS a_exp
    (89) a_exp -> . term MINUS a_exp
    (90) term -> . factor
    (91) term -> . factor TIMES term
    (92) term -> . factor DIVIDE term
    (93) factor -> . LPAREN exp RPAREN
    (94) factor -> . var
    (95) factor -> . call
    (96) factor -> . factor_aux
    (54) var -> . ID
    (55) var -> . ID var_aux
    (61) call -> . ID LPAREN RPAREN
    (62) call -> . ID POINT ID LPAREN RPAREN
    (63) call -> . ID LPAREN call_aux RPAREN
    (64) call -> . ID POINT ID LPAREN call_aux RPAREN
    (97) factor_aux -> . cte
    (98) factor_aux -> . PLUS cte
    (99) factor_aux -> . MINUS cte
    (100) cte -> . ID
    (101) cte -> . CTEI
    (102) cte -> . CTEF
    (103) cte -> . CTECHAR

    LPAREN          shift and go to state 116
    ID              shift and go to state 130
    PLUS            shift and go to state 124
    MINUS           shift and go to state 125
    CTEI            shift and go to state 132
    CTEF            shift and go to state 133
    CTECHAR         shift and go to state 134

    term                           shift and go to state 123
    a_exp                          shift and go to state 193
    factor                         shift and go to state 126
    var                            shift and go to state 127
    call                           shift and go to state 128
    factor_aux                     shift and go to state 129
    cte                            shift and go to state 131

state 162

    (89) a_exp -> term MINUS . a_exp
    (87) a_exp -> . term
    (88) a_exp -> . term PLUS a_exp
    (89) a_exp -> . term MINUS a_exp
    (90) term -> . factor
    (91) term -> . factor TIMES term
    (92) term -> . factor DIVIDE term
    (93) factor -> . LPAREN exp RPAREN
    (94) factor -> . var
    (95) factor -> . call
    (96) factor -> . factor_aux
    (54) var -> . ID
    (55) var -> . ID var_aux
    (61) call -> . ID LPAREN RPAREN
    (62) call -> . ID POINT ID LPAREN RPAREN
    (63) call -> . ID LPAREN call_aux RPAREN
    (64) call -> . ID POINT ID LPAREN call_aux RPAREN
    (97) factor_aux -> . cte
    (98) factor_aux -> . PLUS cte
    (99) factor_aux -> . MINUS cte
    (100) cte -> . ID
    (101) cte -> . CTEI
    (102) cte -> . CTEF
    (103) cte -> . CTECHAR

    LPAREN          shift and go to state 116
    ID              shift and go to state 130
    PLUS            shift and go to state 124
    MINUS           shift and go to state 125
    CTEI            shift and go to state 132
    CTEF            shift and go to state 133
    CTECHAR         shift and go to state 134

    term                           shift and go to state 123
    a_exp                          shift and go to state 194
    factor                         shift and go to state 126
    var                            shift and go to state 127
    call                           shift and go to state 128
    factor_aux                     shift and go to state 129
    cte                            shift and go to state 131

state 163

    (98) factor_aux -> PLUS cte .

    TIMES           reduce using rule 98 (factor_aux -> PLUS cte .)
    DIVIDE          reduce using rule 98 (factor_aux -> PLUS cte .)
    PLUS            reduce using rule 98 (factor_aux -> PLUS cte .)
    MINUS           reduce using rule 98 (factor_aux -> PLUS cte .)
    RELOP           reduce using rule 98 (factor_aux -> PLUS cte .)
    AND             reduce using rule 98 (factor_aux -> PLUS cte .)
    OR              reduce using rule 98 (factor_aux -> PLUS cte .)
    COMMA           reduce using rule 98 (factor_aux -> PLUS cte .)
    RPAREN          reduce using rule 98 (factor_aux -> PLUS cte .)
    SEMICOLON       reduce using rule 98 (factor_aux -> PLUS cte .)
    RBRACKET        reduce using rule 98 (factor_aux -> PLUS cte .)


state 164

    (100) cte -> ID .

    TIMES           reduce using rule 100 (cte -> ID .)
    DIVIDE          reduce using rule 100 (cte -> ID .)
    PLUS            reduce using rule 100 (cte -> ID .)
    MINUS           reduce using rule 100 (cte -> ID .)
    RELOP           reduce using rule 100 (cte -> ID .)
    AND             reduce using rule 100 (cte -> ID .)
    OR              reduce using rule 100 (cte -> ID .)
    COMMA           reduce using rule 100 (cte -> ID .)
    RPAREN          reduce using rule 100 (cte -> ID .)
    SEMICOLON       reduce using rule 100 (cte -> ID .)
    RBRACKET        reduce using rule 100 (cte -> ID .)


state 165

    (99) factor_aux -> MINUS cte .

    TIMES           reduce using rule 99 (factor_aux -> MINUS cte .)
    DIVIDE          reduce using rule 99 (factor_aux -> MINUS cte .)
    PLUS            reduce using rule 99 (factor_aux -> MINUS cte .)
    MINUS           reduce using rule 99 (factor_aux -> MINUS cte .)
    RELOP           reduce using rule 99 (factor_aux -> MINUS cte .)
    AND             reduce using rule 99 (factor_aux -> MINUS cte .)
    OR              reduce using rule 99 (factor_aux -> MINUS cte .)
    COMMA           reduce using rule 99 (factor_aux -> MINUS cte .)
    RPAREN          reduce using rule 99 (factor_aux -> MINUS cte .)
    SEMICOLON       reduce using rule 99 (factor_aux -> MINUS cte .)
    RBRACKET        reduce using rule 99 (factor_aux -> MINUS cte .)


state 166

    (91) term -> factor TIMES . term
    (90) term -> . factor
    (91) term -> . factor TIMES term
    (92) term -> . factor DIVIDE term
    (93) factor -> . LPAREN exp RPAREN
    (94) factor -> . var
    (95) factor -> . call
    (96) factor -> . factor_aux
    (54) var -> . ID
    (55) var -> . ID var_aux
    (61) call -> . ID LPAREN RPAREN
    (62) call -> . ID POINT ID LPAREN RPAREN
    (63) call -> . ID LPAREN call_aux RPAREN
    (64) call -> . ID POINT ID LPAREN call_aux RPAREN
    (97) factor_aux -> . cte
    (98) factor_aux -> . PLUS cte
    (99) factor_aux -> . MINUS cte
    (100) cte -> . ID
    (101) cte -> . CTEI
    (102) cte -> . CTEF
    (103) cte -> . CTECHAR

    LPAREN          shift and go to state 116
    ID              shift and go to state 130
    PLUS            shift and go to state 124
    MINUS           shift and go to state 125
    CTEI            shift and go to state 132
    CTEF            shift and go to state 133
    CTECHAR         shift and go to state 134

    factor                         shift and go to state 126
    term                           shift and go to state 195
    var                            shift and go to state 127
    call                           shift and go to state 128
    factor_aux                     shift and go to state 129
    cte                            shift and go to state 131

state 167

    (92) term -> factor DIVIDE . term
    (90) term -> . factor
    (91) term -> . factor TIMES term
    (92) term -> . factor DIVIDE term
    (93) factor -> . LPAREN exp RPAREN
    (94) factor -> . var
    (95) factor -> . call
    (96) factor -> . factor_aux
    (54) var -> . ID
    (55) var -> . ID var_aux
    (61) call -> . ID LPAREN RPAREN
    (62) call -> . ID POINT ID LPAREN RPAREN
    (63) call -> . ID LPAREN call_aux RPAREN
    (64) call -> . ID POINT ID LPAREN call_aux RPAREN
    (97) factor_aux -> . cte
    (98) factor_aux -> . PLUS cte
    (99) factor_aux -> . MINUS cte
    (100) cte -> . ID
    (101) cte -> . CTEI
    (102) cte -> . CTEF
    (103) cte -> . CTECHAR

    LPAREN          shift and go to state 116
    ID              shift and go to state 130
    PLUS            shift and go to state 124
    MINUS           shift and go to state 125
    CTEI            shift and go to state 132
    CTEF            shift and go to state 133
    CTECHAR         shift and go to state 134

    factor                         shift and go to state 126
    term                           shift and go to state 196
    var                            shift and go to state 127
    call                           shift and go to state 128
    factor_aux                     shift and go to state 129
    cte                            shift and go to state 131

state 168

    (62) call -> ID POINT . ID LPAREN RPAREN
    (64) call -> ID POINT . ID LPAREN call_aux RPAREN
    (56) var_aux -> POINT . ID
    (57) var_aux -> POINT . ID var_aux_2

    ID              shift and go to state 197


state 169

    (68) condition_aux -> LPAREN exp RPAREN . THEN LBRACE statutes_aux RBRACE condition_aux_3
    (70) condition_aux_2 -> LPAREN exp RPAREN . THEN LBRACE statutes_aux RBRACE ELIF condition_aux

    THEN            shift and go to state 198


state 170

    (79) while -> WHILE LPAREN exp RPAREN . DO LBRACE statutes_aux RBRACE

    DO              shift and go to state 199


state 171

    (80) for -> FROM LPAREN assignation RPAREN . UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    UNTIL           shift and go to state 200


state 172

    (21) vars_simple_type_aux -> LBRACKET CTEI RBRACKET LBRACKET . CTEI RBRACKET add_matrix_variable

    CTEI            shift and go to state 201


state 173

    (20) vars_simple_type_aux -> LBRACKET CTEI RBRACKET add_array_variable .

    COMMA           reduce using rule 20 (vars_simple_type_aux -> LBRACKET CTEI RBRACKET add_array_variable .)
    SEMICOLON       reduce using rule 20 (vars_simple_type_aux -> LBRACKET CTEI RBRACKET add_array_variable .)


state 174

    (34) functions_aux -> VOID ID add_function LPAREN params RPAREN . body
    (40) body -> . LBRACE dec_vars statutes_aux RBRACE
    (41) body -> . LBRACE statutes_aux RBRACE
    (42) body -> . LBRACE statutes_aux RETURN ID SEMICOLON RBRACE
    (43) body -> . LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE

    LBRACE          shift and go to state 176

    body                           shift and go to state 202

state 175

    (35) functions_aux -> VOID ID add_function LPAREN RPAREN body .

    FUNCT           reduce using rule 35 (functions_aux -> VOID ID add_function LPAREN RPAREN body .)
    RBRACE          reduce using rule 35 (functions_aux -> VOID ID add_function LPAREN RPAREN body .)
    MAIN            reduce using rule 35 (functions_aux -> VOID ID add_function LPAREN RPAREN body .)


state 176

    (40) body -> LBRACE . dec_vars statutes_aux RBRACE
    (41) body -> LBRACE . statutes_aux RBRACE
    (42) body -> LBRACE . statutes_aux RETURN ID SEMICOLON RBRACE
    (43) body -> LBRACE . dec_vars statutes_aux RETURN ID SEMICOLON RBRACE
    (9) dec_vars -> . VAR dec_vars_aux
    (51) statutes_aux -> . statutes
    (52) statutes_aux -> . statutes statutes_aux
    (44) statutes -> . ASSIGN assignation SEMICOLON
    (45) statutes -> . CALL call SEMICOLON
    (46) statutes -> . read
    (47) statutes -> . write
    (48) statutes -> . condition
    (49) statutes -> . while
    (50) statutes -> . for
    (73) read -> . READ LPAREN var RPAREN SEMICOLON
    (74) write -> . WRITE LPAREN write_aux RPAREN SEMICOLON
    (67) condition -> . IF condition_aux
    (79) while -> . WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (80) for -> . FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    VAR             shift and go to state 19
    ASSIGN          shift and go to state 59
    CALL            shift and go to state 60
    READ            shift and go to state 66
    WRITE           shift and go to state 67
    IF              shift and go to state 68
    WHILE           shift and go to state 69
    FROM            shift and go to state 70

    dec_vars                       shift and go to state 203
    statutes_aux                   shift and go to state 204
    statutes                       shift and go to state 58
    read                           shift and go to state 61
    write                          shift and go to state 62
    condition                      shift and go to state 63
    while                          shift and go to state 64
    for                            shift and go to state 65

state 177

    (38) params -> simple_type ID . add_variable
    (39) params -> simple_type ID . add_variable COMMA params
    (107) add_variable -> .

    COMMA           reduce using rule 107 (add_variable -> .)
    RPAREN          reduce using rule 107 (add_variable -> .)

    add_variable                   shift and go to state 205

state 178

    (36) functions_aux -> simple_type ID add_function LPAREN RPAREN body .

    FUNCT           reduce using rule 36 (functions_aux -> simple_type ID add_function LPAREN RPAREN body .)
    RBRACE          reduce using rule 36 (functions_aux -> simple_type ID add_function LPAREN RPAREN body .)
    MAIN            reduce using rule 36 (functions_aux -> simple_type ID add_function LPAREN RPAREN body .)


state 179

    (37) functions_aux -> simple_type ID add_function LPAREN params RPAREN . body
    (40) body -> . LBRACE dec_vars statutes_aux RBRACE
    (41) body -> . LBRACE statutes_aux RBRACE
    (42) body -> . LBRACE statutes_aux RETURN ID SEMICOLON RBRACE
    (43) body -> . LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE

    LBRACE          shift and go to state 176

    body                           shift and go to state 206

state 180

    (57) var_aux -> POINT ID var_aux_2 .

    EQUAL           reduce using rule 57 (var_aux -> POINT ID var_aux_2 .)
    RPAREN          reduce using rule 57 (var_aux -> POINT ID var_aux_2 .)
    TIMES           reduce using rule 57 (var_aux -> POINT ID var_aux_2 .)
    DIVIDE          reduce using rule 57 (var_aux -> POINT ID var_aux_2 .)
    PLUS            reduce using rule 57 (var_aux -> POINT ID var_aux_2 .)
    MINUS           reduce using rule 57 (var_aux -> POINT ID var_aux_2 .)
    RELOP           reduce using rule 57 (var_aux -> POINT ID var_aux_2 .)
    AND             reduce using rule 57 (var_aux -> POINT ID var_aux_2 .)
    OR              reduce using rule 57 (var_aux -> POINT ID var_aux_2 .)
    COMMA           reduce using rule 57 (var_aux -> POINT ID var_aux_2 .)
    SEMICOLON       reduce using rule 57 (var_aux -> POINT ID var_aux_2 .)
    RBRACKET        reduce using rule 57 (var_aux -> POINT ID var_aux_2 .)


state 181

    (59) var_aux_2 -> LBRACKET exp RBRACKET .
    (60) var_aux_2 -> LBRACKET exp RBRACKET . LBRACKET exp RBRACKET

    EQUAL           reduce using rule 59 (var_aux_2 -> LBRACKET exp RBRACKET .)
    RPAREN          reduce using rule 59 (var_aux_2 -> LBRACKET exp RBRACKET .)
    TIMES           reduce using rule 59 (var_aux_2 -> LBRACKET exp RBRACKET .)
    DIVIDE          reduce using rule 59 (var_aux_2 -> LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 59 (var_aux_2 -> LBRACKET exp RBRACKET .)
    MINUS           reduce using rule 59 (var_aux_2 -> LBRACKET exp RBRACKET .)
    RELOP           reduce using rule 59 (var_aux_2 -> LBRACKET exp RBRACKET .)
    AND             reduce using rule 59 (var_aux_2 -> LBRACKET exp RBRACKET .)
    OR              reduce using rule 59 (var_aux_2 -> LBRACKET exp RBRACKET .)
    COMMA           reduce using rule 59 (var_aux_2 -> LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 59 (var_aux_2 -> LBRACKET exp RBRACKET .)
    RBRACKET        reduce using rule 59 (var_aux_2 -> LBRACKET exp RBRACKET .)
    LBRACKET        shift and go to state 207


state 182

    (63) call -> ID LPAREN call_aux RPAREN .

    SEMICOLON       reduce using rule 63 (call -> ID LPAREN call_aux RPAREN .)
    TIMES           reduce using rule 63 (call -> ID LPAREN call_aux RPAREN .)
    DIVIDE          reduce using rule 63 (call -> ID LPAREN call_aux RPAREN .)
    PLUS            reduce using rule 63 (call -> ID LPAREN call_aux RPAREN .)
    MINUS           reduce using rule 63 (call -> ID LPAREN call_aux RPAREN .)
    RELOP           reduce using rule 63 (call -> ID LPAREN call_aux RPAREN .)
    AND             reduce using rule 63 (call -> ID LPAREN call_aux RPAREN .)
    OR              reduce using rule 63 (call -> ID LPAREN call_aux RPAREN .)
    COMMA           reduce using rule 63 (call -> ID LPAREN call_aux RPAREN .)
    RPAREN          reduce using rule 63 (call -> ID LPAREN call_aux RPAREN .)
    RBRACKET        reduce using rule 63 (call -> ID LPAREN call_aux RPAREN .)


state 183

    (66) call_aux -> exp COMMA . call_aux
    (65) call_aux -> . exp
    (66) call_aux -> . exp COMMA call_aux
    (81) exp -> . n_exp
    (82) exp -> . n_exp OR exp
    (83) n_exp -> . l_exp
    (84) n_exp -> . l_exp AND n_exp
    (85) l_exp -> . a_exp
    (86) l_exp -> . a_exp RELOP a_exp
    (87) a_exp -> . term
    (88) a_exp -> . term PLUS a_exp
    (89) a_exp -> . term MINUS a_exp
    (90) term -> . factor
    (91) term -> . factor TIMES term
    (92) term -> . factor DIVIDE term
    (93) factor -> . LPAREN exp RPAREN
    (94) factor -> . var
    (95) factor -> . call
    (96) factor -> . factor_aux
    (54) var -> . ID
    (55) var -> . ID var_aux
    (61) call -> . ID LPAREN RPAREN
    (62) call -> . ID POINT ID LPAREN RPAREN
    (63) call -> . ID LPAREN call_aux RPAREN
    (64) call -> . ID POINT ID LPAREN call_aux RPAREN
    (97) factor_aux -> . cte
    (98) factor_aux -> . PLUS cte
    (99) factor_aux -> . MINUS cte
    (100) cte -> . ID
    (101) cte -> . CTEI
    (102) cte -> . CTEF
    (103) cte -> . CTECHAR

    LPAREN          shift and go to state 116
    ID              shift and go to state 130
    PLUS            shift and go to state 124
    MINUS           shift and go to state 125
    CTEI            shift and go to state 132
    CTEF            shift and go to state 133
    CTECHAR         shift and go to state 134

    exp                            shift and go to state 151
    call_aux                       shift and go to state 208
    n_exp                          shift and go to state 120
    l_exp                          shift and go to state 121
    a_exp                          shift and go to state 122
    term                           shift and go to state 123
    factor                         shift and go to state 126
    var                            shift and go to state 127
    call                           shift and go to state 128
    factor_aux                     shift and go to state 129
    cte                            shift and go to state 131

state 184

    (62) call -> ID POINT ID LPAREN . RPAREN
    (64) call -> ID POINT ID LPAREN . call_aux RPAREN
    (65) call_aux -> . exp
    (66) call_aux -> . exp COMMA call_aux
    (81) exp -> . n_exp
    (82) exp -> . n_exp OR exp
    (83) n_exp -> . l_exp
    (84) n_exp -> . l_exp AND n_exp
    (85) l_exp -> . a_exp
    (86) l_exp -> . a_exp RELOP a_exp
    (87) a_exp -> . term
    (88) a_exp -> . term PLUS a_exp
    (89) a_exp -> . term MINUS a_exp
    (90) term -> . factor
    (91) term -> . factor TIMES term
    (92) term -> . factor DIVIDE term
    (93) factor -> . LPAREN exp RPAREN
    (94) factor -> . var
    (95) factor -> . call
    (96) factor -> . factor_aux
    (54) var -> . ID
    (55) var -> . ID var_aux
    (61) call -> . ID LPAREN RPAREN
    (62) call -> . ID POINT ID LPAREN RPAREN
    (63) call -> . ID LPAREN call_aux RPAREN
    (64) call -> . ID POINT ID LPAREN call_aux RPAREN
    (97) factor_aux -> . cte
    (98) factor_aux -> . PLUS cte
    (99) factor_aux -> . MINUS cte
    (100) cte -> . ID
    (101) cte -> . CTEI
    (102) cte -> . CTEF
    (103) cte -> . CTECHAR

    RPAREN          shift and go to state 209
    LPAREN          shift and go to state 116
    ID              shift and go to state 130
    PLUS            shift and go to state 124
    MINUS           shift and go to state 125
    CTEI            shift and go to state 132
    CTEF            shift and go to state 133
    CTECHAR         shift and go to state 134

    call_aux                       shift and go to state 210
    exp                            shift and go to state 151
    n_exp                          shift and go to state 120
    l_exp                          shift and go to state 121
    a_exp                          shift and go to state 122
    term                           shift and go to state 123
    factor                         shift and go to state 126
    var                            shift and go to state 127
    call                           shift and go to state 128
    factor_aux                     shift and go to state 129
    cte                            shift and go to state 131

state 185

    (73) read -> READ LPAREN var RPAREN SEMICOLON .

    ASSIGN          reduce using rule 73 (read -> READ LPAREN var RPAREN SEMICOLON .)
    CALL            reduce using rule 73 (read -> READ LPAREN var RPAREN SEMICOLON .)
    READ            reduce using rule 73 (read -> READ LPAREN var RPAREN SEMICOLON .)
    WRITE           reduce using rule 73 (read -> READ LPAREN var RPAREN SEMICOLON .)
    IF              reduce using rule 73 (read -> READ LPAREN var RPAREN SEMICOLON .)
    WHILE           reduce using rule 73 (read -> READ LPAREN var RPAREN SEMICOLON .)
    FROM            reduce using rule 73 (read -> READ LPAREN var RPAREN SEMICOLON .)
    RBRACE          reduce using rule 73 (read -> READ LPAREN var RPAREN SEMICOLON .)
    RETURN          reduce using rule 73 (read -> READ LPAREN var RPAREN SEMICOLON .)


state 186

    (93) factor -> LPAREN exp RPAREN .

    TIMES           reduce using rule 93 (factor -> LPAREN exp RPAREN .)
    DIVIDE          reduce using rule 93 (factor -> LPAREN exp RPAREN .)
    PLUS            reduce using rule 93 (factor -> LPAREN exp RPAREN .)
    MINUS           reduce using rule 93 (factor -> LPAREN exp RPAREN .)
    RELOP           reduce using rule 93 (factor -> LPAREN exp RPAREN .)
    AND             reduce using rule 93 (factor -> LPAREN exp RPAREN .)
    OR              reduce using rule 93 (factor -> LPAREN exp RPAREN .)
    COMMA           reduce using rule 93 (factor -> LPAREN exp RPAREN .)
    RPAREN          reduce using rule 93 (factor -> LPAREN exp RPAREN .)
    SEMICOLON       reduce using rule 93 (factor -> LPAREN exp RPAREN .)
    RBRACKET        reduce using rule 93 (factor -> LPAREN exp RPAREN .)


state 187

    (74) write -> WRITE LPAREN write_aux RPAREN SEMICOLON .

    ASSIGN          reduce using rule 74 (write -> WRITE LPAREN write_aux RPAREN SEMICOLON .)
    CALL            reduce using rule 74 (write -> WRITE LPAREN write_aux RPAREN SEMICOLON .)
    READ            reduce using rule 74 (write -> WRITE LPAREN write_aux RPAREN SEMICOLON .)
    WRITE           reduce using rule 74 (write -> WRITE LPAREN write_aux RPAREN SEMICOLON .)
    IF              reduce using rule 74 (write -> WRITE LPAREN write_aux RPAREN SEMICOLON .)
    WHILE           reduce using rule 74 (write -> WRITE LPAREN write_aux RPAREN SEMICOLON .)
    FROM            reduce using rule 74 (write -> WRITE LPAREN write_aux RPAREN SEMICOLON .)
    RBRACE          reduce using rule 74 (write -> WRITE LPAREN write_aux RPAREN SEMICOLON .)
    RETURN          reduce using rule 74 (write -> WRITE LPAREN write_aux RPAREN SEMICOLON .)


state 188

    (76) write_aux -> exp COMMA write_aux .

    RPAREN          reduce using rule 76 (write_aux -> exp COMMA write_aux .)


state 189

    (78) write_aux -> CTESTRING COMMA write_aux .

    RPAREN          reduce using rule 78 (write_aux -> CTESTRING COMMA write_aux .)


state 190

    (82) exp -> n_exp OR exp .

    COMMA           reduce using rule 82 (exp -> n_exp OR exp .)
    RPAREN          reduce using rule 82 (exp -> n_exp OR exp .)
    SEMICOLON       reduce using rule 82 (exp -> n_exp OR exp .)
    RBRACKET        reduce using rule 82 (exp -> n_exp OR exp .)


state 191

    (84) n_exp -> l_exp AND n_exp .

    OR              reduce using rule 84 (n_exp -> l_exp AND n_exp .)
    COMMA           reduce using rule 84 (n_exp -> l_exp AND n_exp .)
    RPAREN          reduce using rule 84 (n_exp -> l_exp AND n_exp .)
    SEMICOLON       reduce using rule 84 (n_exp -> l_exp AND n_exp .)
    RBRACKET        reduce using rule 84 (n_exp -> l_exp AND n_exp .)


state 192

    (86) l_exp -> a_exp RELOP a_exp .

    AND             reduce using rule 86 (l_exp -> a_exp RELOP a_exp .)
    OR              reduce using rule 86 (l_exp -> a_exp RELOP a_exp .)
    COMMA           reduce using rule 86 (l_exp -> a_exp RELOP a_exp .)
    RPAREN          reduce using rule 86 (l_exp -> a_exp RELOP a_exp .)
    SEMICOLON       reduce using rule 86 (l_exp -> a_exp RELOP a_exp .)
    RBRACKET        reduce using rule 86 (l_exp -> a_exp RELOP a_exp .)


state 193

    (88) a_exp -> term PLUS a_exp .

    RELOP           reduce using rule 88 (a_exp -> term PLUS a_exp .)
    AND             reduce using rule 88 (a_exp -> term PLUS a_exp .)
    OR              reduce using rule 88 (a_exp -> term PLUS a_exp .)
    COMMA           reduce using rule 88 (a_exp -> term PLUS a_exp .)
    RPAREN          reduce using rule 88 (a_exp -> term PLUS a_exp .)
    SEMICOLON       reduce using rule 88 (a_exp -> term PLUS a_exp .)
    RBRACKET        reduce using rule 88 (a_exp -> term PLUS a_exp .)


state 194

    (89) a_exp -> term MINUS a_exp .

    RELOP           reduce using rule 89 (a_exp -> term MINUS a_exp .)
    AND             reduce using rule 89 (a_exp -> term MINUS a_exp .)
    OR              reduce using rule 89 (a_exp -> term MINUS a_exp .)
    COMMA           reduce using rule 89 (a_exp -> term MINUS a_exp .)
    RPAREN          reduce using rule 89 (a_exp -> term MINUS a_exp .)
    SEMICOLON       reduce using rule 89 (a_exp -> term MINUS a_exp .)
    RBRACKET        reduce using rule 89 (a_exp -> term MINUS a_exp .)


state 195

    (91) term -> factor TIMES term .

    PLUS            reduce using rule 91 (term -> factor TIMES term .)
    MINUS           reduce using rule 91 (term -> factor TIMES term .)
    RELOP           reduce using rule 91 (term -> factor TIMES term .)
    AND             reduce using rule 91 (term -> factor TIMES term .)
    OR              reduce using rule 91 (term -> factor TIMES term .)
    COMMA           reduce using rule 91 (term -> factor TIMES term .)
    RPAREN          reduce using rule 91 (term -> factor TIMES term .)
    SEMICOLON       reduce using rule 91 (term -> factor TIMES term .)
    RBRACKET        reduce using rule 91 (term -> factor TIMES term .)


state 196

    (92) term -> factor DIVIDE term .

    PLUS            reduce using rule 92 (term -> factor DIVIDE term .)
    MINUS           reduce using rule 92 (term -> factor DIVIDE term .)
    RELOP           reduce using rule 92 (term -> factor DIVIDE term .)
    AND             reduce using rule 92 (term -> factor DIVIDE term .)
    OR              reduce using rule 92 (term -> factor DIVIDE term .)
    COMMA           reduce using rule 92 (term -> factor DIVIDE term .)
    RPAREN          reduce using rule 92 (term -> factor DIVIDE term .)
    SEMICOLON       reduce using rule 92 (term -> factor DIVIDE term .)
    RBRACKET        reduce using rule 92 (term -> factor DIVIDE term .)


state 197

    (62) call -> ID POINT ID . LPAREN RPAREN
    (64) call -> ID POINT ID . LPAREN call_aux RPAREN
    (56) var_aux -> POINT ID .
    (57) var_aux -> POINT ID . var_aux_2
    (59) var_aux_2 -> . LBRACKET exp RBRACKET
    (60) var_aux_2 -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET

    LPAREN          shift and go to state 184
    TIMES           reduce using rule 56 (var_aux -> POINT ID .)
    DIVIDE          reduce using rule 56 (var_aux -> POINT ID .)
    PLUS            reduce using rule 56 (var_aux -> POINT ID .)
    MINUS           reduce using rule 56 (var_aux -> POINT ID .)
    RELOP           reduce using rule 56 (var_aux -> POINT ID .)
    AND             reduce using rule 56 (var_aux -> POINT ID .)
    OR              reduce using rule 56 (var_aux -> POINT ID .)
    COMMA           reduce using rule 56 (var_aux -> POINT ID .)
    RPAREN          reduce using rule 56 (var_aux -> POINT ID .)
    SEMICOLON       reduce using rule 56 (var_aux -> POINT ID .)
    RBRACKET        reduce using rule 56 (var_aux -> POINT ID .)
    LBRACKET        shift and go to state 111

    var_aux_2                      shift and go to state 180

state 198

    (68) condition_aux -> LPAREN exp RPAREN THEN . LBRACE statutes_aux RBRACE condition_aux_3
    (70) condition_aux_2 -> LPAREN exp RPAREN THEN . LBRACE statutes_aux RBRACE ELIF condition_aux

    LBRACE          shift and go to state 211


state 199

    (79) while -> WHILE LPAREN exp RPAREN DO . LBRACE statutes_aux RBRACE

    LBRACE          shift and go to state 212


state 200

    (80) for -> FROM LPAREN assignation RPAREN UNTIL . LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    LPAREN          shift and go to state 213


state 201

    (21) vars_simple_type_aux -> LBRACKET CTEI RBRACKET LBRACKET CTEI . RBRACKET add_matrix_variable

    RBRACKET        shift and go to state 214


state 202

    (34) functions_aux -> VOID ID add_function LPAREN params RPAREN body .

    FUNCT           reduce using rule 34 (functions_aux -> VOID ID add_function LPAREN params RPAREN body .)
    RBRACE          reduce using rule 34 (functions_aux -> VOID ID add_function LPAREN params RPAREN body .)
    MAIN            reduce using rule 34 (functions_aux -> VOID ID add_function LPAREN params RPAREN body .)


state 203

    (40) body -> LBRACE dec_vars . statutes_aux RBRACE
    (43) body -> LBRACE dec_vars . statutes_aux RETURN ID SEMICOLON RBRACE
    (51) statutes_aux -> . statutes
    (52) statutes_aux -> . statutes statutes_aux
    (44) statutes -> . ASSIGN assignation SEMICOLON
    (45) statutes -> . CALL call SEMICOLON
    (46) statutes -> . read
    (47) statutes -> . write
    (48) statutes -> . condition
    (49) statutes -> . while
    (50) statutes -> . for
    (73) read -> . READ LPAREN var RPAREN SEMICOLON
    (74) write -> . WRITE LPAREN write_aux RPAREN SEMICOLON
    (67) condition -> . IF condition_aux
    (79) while -> . WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (80) for -> . FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    ASSIGN          shift and go to state 59
    CALL            shift and go to state 60
    READ            shift and go to state 66
    WRITE           shift and go to state 67
    IF              shift and go to state 68
    WHILE           shift and go to state 69
    FROM            shift and go to state 70

    statutes_aux                   shift and go to state 215
    statutes                       shift and go to state 58
    read                           shift and go to state 61
    write                          shift and go to state 62
    condition                      shift and go to state 63
    while                          shift and go to state 64
    for                            shift and go to state 65

state 204

    (41) body -> LBRACE statutes_aux . RBRACE
    (42) body -> LBRACE statutes_aux . RETURN ID SEMICOLON RBRACE

    RBRACE          shift and go to state 216
    RETURN          shift and go to state 217


state 205

    (38) params -> simple_type ID add_variable .
    (39) params -> simple_type ID add_variable . COMMA params

    RPAREN          reduce using rule 38 (params -> simple_type ID add_variable .)
    COMMA           shift and go to state 218


state 206

    (37) functions_aux -> simple_type ID add_function LPAREN params RPAREN body .

    FUNCT           reduce using rule 37 (functions_aux -> simple_type ID add_function LPAREN params RPAREN body .)
    RBRACE          reduce using rule 37 (functions_aux -> simple_type ID add_function LPAREN params RPAREN body .)
    MAIN            reduce using rule 37 (functions_aux -> simple_type ID add_function LPAREN params RPAREN body .)


state 207

    (60) var_aux_2 -> LBRACKET exp RBRACKET LBRACKET . exp RBRACKET
    (81) exp -> . n_exp
    (82) exp -> . n_exp OR exp
    (83) n_exp -> . l_exp
    (84) n_exp -> . l_exp AND n_exp
    (85) l_exp -> . a_exp
    (86) l_exp -> . a_exp RELOP a_exp
    (87) a_exp -> . term
    (88) a_exp -> . term PLUS a_exp
    (89) a_exp -> . term MINUS a_exp
    (90) term -> . factor
    (91) term -> . factor TIMES term
    (92) term -> . factor DIVIDE term
    (93) factor -> . LPAREN exp RPAREN
    (94) factor -> . var
    (95) factor -> . call
    (96) factor -> . factor_aux
    (54) var -> . ID
    (55) var -> . ID var_aux
    (61) call -> . ID LPAREN RPAREN
    (62) call -> . ID POINT ID LPAREN RPAREN
    (63) call -> . ID LPAREN call_aux RPAREN
    (64) call -> . ID POINT ID LPAREN call_aux RPAREN
    (97) factor_aux -> . cte
    (98) factor_aux -> . PLUS cte
    (99) factor_aux -> . MINUS cte
    (100) cte -> . ID
    (101) cte -> . CTEI
    (102) cte -> . CTEF
    (103) cte -> . CTECHAR

    LPAREN          shift and go to state 116
    ID              shift and go to state 130
    PLUS            shift and go to state 124
    MINUS           shift and go to state 125
    CTEI            shift and go to state 132
    CTEF            shift and go to state 133
    CTECHAR         shift and go to state 134

    exp                            shift and go to state 219
    n_exp                          shift and go to state 120
    l_exp                          shift and go to state 121
    a_exp                          shift and go to state 122
    term                           shift and go to state 123
    factor                         shift and go to state 126
    var                            shift and go to state 127
    call                           shift and go to state 128
    factor_aux                     shift and go to state 129
    cte                            shift and go to state 131

state 208

    (66) call_aux -> exp COMMA call_aux .

    RPAREN          reduce using rule 66 (call_aux -> exp COMMA call_aux .)


state 209

    (62) call -> ID POINT ID LPAREN RPAREN .

    SEMICOLON       reduce using rule 62 (call -> ID POINT ID LPAREN RPAREN .)
    TIMES           reduce using rule 62 (call -> ID POINT ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 62 (call -> ID POINT ID LPAREN RPAREN .)
    PLUS            reduce using rule 62 (call -> ID POINT ID LPAREN RPAREN .)
    MINUS           reduce using rule 62 (call -> ID POINT ID LPAREN RPAREN .)
    RELOP           reduce using rule 62 (call -> ID POINT ID LPAREN RPAREN .)
    AND             reduce using rule 62 (call -> ID POINT ID LPAREN RPAREN .)
    OR              reduce using rule 62 (call -> ID POINT ID LPAREN RPAREN .)
    COMMA           reduce using rule 62 (call -> ID POINT ID LPAREN RPAREN .)
    RPAREN          reduce using rule 62 (call -> ID POINT ID LPAREN RPAREN .)
    RBRACKET        reduce using rule 62 (call -> ID POINT ID LPAREN RPAREN .)


state 210

    (64) call -> ID POINT ID LPAREN call_aux . RPAREN

    RPAREN          shift and go to state 220


state 211

    (68) condition_aux -> LPAREN exp RPAREN THEN LBRACE . statutes_aux RBRACE condition_aux_3
    (70) condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE . statutes_aux RBRACE ELIF condition_aux
    (51) statutes_aux -> . statutes
    (52) statutes_aux -> . statutes statutes_aux
    (44) statutes -> . ASSIGN assignation SEMICOLON
    (45) statutes -> . CALL call SEMICOLON
    (46) statutes -> . read
    (47) statutes -> . write
    (48) statutes -> . condition
    (49) statutes -> . while
    (50) statutes -> . for
    (73) read -> . READ LPAREN var RPAREN SEMICOLON
    (74) write -> . WRITE LPAREN write_aux RPAREN SEMICOLON
    (67) condition -> . IF condition_aux
    (79) while -> . WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (80) for -> . FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    ASSIGN          shift and go to state 59
    CALL            shift and go to state 60
    READ            shift and go to state 66
    WRITE           shift and go to state 67
    IF              shift and go to state 68
    WHILE           shift and go to state 69
    FROM            shift and go to state 70

    statutes_aux                   shift and go to state 221
    statutes                       shift and go to state 58
    read                           shift and go to state 61
    write                          shift and go to state 62
    condition                      shift and go to state 63
    while                          shift and go to state 64
    for                            shift and go to state 65

state 212

    (79) while -> WHILE LPAREN exp RPAREN DO LBRACE . statutes_aux RBRACE
    (51) statutes_aux -> . statutes
    (52) statutes_aux -> . statutes statutes_aux
    (44) statutes -> . ASSIGN assignation SEMICOLON
    (45) statutes -> . CALL call SEMICOLON
    (46) statutes -> . read
    (47) statutes -> . write
    (48) statutes -> . condition
    (49) statutes -> . while
    (50) statutes -> . for
    (73) read -> . READ LPAREN var RPAREN SEMICOLON
    (74) write -> . WRITE LPAREN write_aux RPAREN SEMICOLON
    (67) condition -> . IF condition_aux
    (79) while -> . WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (80) for -> . FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    ASSIGN          shift and go to state 59
    CALL            shift and go to state 60
    READ            shift and go to state 66
    WRITE           shift and go to state 67
    IF              shift and go to state 68
    WHILE           shift and go to state 69
    FROM            shift and go to state 70

    statutes_aux                   shift and go to state 222
    statutes                       shift and go to state 58
    read                           shift and go to state 61
    write                          shift and go to state 62
    condition                      shift and go to state 63
    while                          shift and go to state 64
    for                            shift and go to state 65

state 213

    (80) for -> FROM LPAREN assignation RPAREN UNTIL LPAREN . exp RPAREN DO LBRACE statutes_aux RBRACE
    (81) exp -> . n_exp
    (82) exp -> . n_exp OR exp
    (83) n_exp -> . l_exp
    (84) n_exp -> . l_exp AND n_exp
    (85) l_exp -> . a_exp
    (86) l_exp -> . a_exp RELOP a_exp
    (87) a_exp -> . term
    (88) a_exp -> . term PLUS a_exp
    (89) a_exp -> . term MINUS a_exp
    (90) term -> . factor
    (91) term -> . factor TIMES term
    (92) term -> . factor DIVIDE term
    (93) factor -> . LPAREN exp RPAREN
    (94) factor -> . var
    (95) factor -> . call
    (96) factor -> . factor_aux
    (54) var -> . ID
    (55) var -> . ID var_aux
    (61) call -> . ID LPAREN RPAREN
    (62) call -> . ID POINT ID LPAREN RPAREN
    (63) call -> . ID LPAREN call_aux RPAREN
    (64) call -> . ID POINT ID LPAREN call_aux RPAREN
    (97) factor_aux -> . cte
    (98) factor_aux -> . PLUS cte
    (99) factor_aux -> . MINUS cte
    (100) cte -> . ID
    (101) cte -> . CTEI
    (102) cte -> . CTEF
    (103) cte -> . CTECHAR

    LPAREN          shift and go to state 116
    ID              shift and go to state 130
    PLUS            shift and go to state 124
    MINUS           shift and go to state 125
    CTEI            shift and go to state 132
    CTEF            shift and go to state 133
    CTECHAR         shift and go to state 134

    exp                            shift and go to state 223
    n_exp                          shift and go to state 120
    l_exp                          shift and go to state 121
    a_exp                          shift and go to state 122
    term                           shift and go to state 123
    factor                         shift and go to state 126
    var                            shift and go to state 127
    call                           shift and go to state 128
    factor_aux                     shift and go to state 129
    cte                            shift and go to state 131

state 214

    (21) vars_simple_type_aux -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET . add_matrix_variable
    (109) add_matrix_variable -> .

    COMMA           reduce using rule 109 (add_matrix_variable -> .)
    SEMICOLON       reduce using rule 109 (add_matrix_variable -> .)

    add_matrix_variable            shift and go to state 224

state 215

    (40) body -> LBRACE dec_vars statutes_aux . RBRACE
    (43) body -> LBRACE dec_vars statutes_aux . RETURN ID SEMICOLON RBRACE

    RBRACE          shift and go to state 225
    RETURN          shift and go to state 226


state 216

    (41) body -> LBRACE statutes_aux RBRACE .

    FUNCT           reduce using rule 41 (body -> LBRACE statutes_aux RBRACE .)
    RBRACE          reduce using rule 41 (body -> LBRACE statutes_aux RBRACE .)
    MAIN            reduce using rule 41 (body -> LBRACE statutes_aux RBRACE .)


state 217

    (42) body -> LBRACE statutes_aux RETURN . ID SEMICOLON RBRACE

    ID              shift and go to state 227


state 218

    (39) params -> simple_type ID add_variable COMMA . params
    (38) params -> . simple_type ID add_variable
    (39) params -> . simple_type ID add_variable COMMA params
    (22) simple_type -> . INT
    (23) simple_type -> . FLOAT
    (24) simple_type -> . CHAR

    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35

    simple_type                    shift and go to state 143
    params                         shift and go to state 228

state 219

    (60) var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp . RBRACKET

    RBRACKET        shift and go to state 229


state 220

    (64) call -> ID POINT ID LPAREN call_aux RPAREN .

    SEMICOLON       reduce using rule 64 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    TIMES           reduce using rule 64 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    DIVIDE          reduce using rule 64 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    PLUS            reduce using rule 64 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    MINUS           reduce using rule 64 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    RELOP           reduce using rule 64 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    AND             reduce using rule 64 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    OR              reduce using rule 64 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    COMMA           reduce using rule 64 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    RPAREN          reduce using rule 64 (call -> ID POINT ID LPAREN call_aux RPAREN .)
    RBRACKET        reduce using rule 64 (call -> ID POINT ID LPAREN call_aux RPAREN .)


state 221

    (68) condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux . RBRACE condition_aux_3
    (70) condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux . RBRACE ELIF condition_aux

    RBRACE          shift and go to state 230


state 222

    (79) while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux . RBRACE

    RBRACE          shift and go to state 231


state 223

    (80) for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp . RPAREN DO LBRACE statutes_aux RBRACE

    RPAREN          shift and go to state 232


state 224

    (21) vars_simple_type_aux -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET add_matrix_variable .

    COMMA           reduce using rule 21 (vars_simple_type_aux -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET add_matrix_variable .)
    SEMICOLON       reduce using rule 21 (vars_simple_type_aux -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET add_matrix_variable .)


state 225

    (40) body -> LBRACE dec_vars statutes_aux RBRACE .

    FUNCT           reduce using rule 40 (body -> LBRACE dec_vars statutes_aux RBRACE .)
    RBRACE          reduce using rule 40 (body -> LBRACE dec_vars statutes_aux RBRACE .)
    MAIN            reduce using rule 40 (body -> LBRACE dec_vars statutes_aux RBRACE .)


state 226

    (43) body -> LBRACE dec_vars statutes_aux RETURN . ID SEMICOLON RBRACE

    ID              shift and go to state 233


state 227

    (42) body -> LBRACE statutes_aux RETURN ID . SEMICOLON RBRACE

    SEMICOLON       shift and go to state 234


state 228

    (39) params -> simple_type ID add_variable COMMA params .

    RPAREN          reduce using rule 39 (params -> simple_type ID add_variable COMMA params .)


state 229

    (60) var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .

    EQUAL           reduce using rule 60 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    RPAREN          reduce using rule 60 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    TIMES           reduce using rule 60 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    DIVIDE          reduce using rule 60 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 60 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    MINUS           reduce using rule 60 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    RELOP           reduce using rule 60 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    AND             reduce using rule 60 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    OR              reduce using rule 60 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    COMMA           reduce using rule 60 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 60 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    RBRACKET        reduce using rule 60 (var_aux_2 -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)


state 230

    (68) condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE . condition_aux_3
    (70) condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE . ELIF condition_aux
    (71) condition_aux_3 -> . ELSE LBRACE statutes_aux RBRACE
    (72) condition_aux_3 -> . empty
    (106) empty -> .

    ELIF            shift and go to state 236
    ELSE            shift and go to state 237
    ASSIGN          reduce using rule 106 (empty -> .)
    CALL            reduce using rule 106 (empty -> .)
    READ            reduce using rule 106 (empty -> .)
    WRITE           reduce using rule 106 (empty -> .)
    IF              reduce using rule 106 (empty -> .)
    WHILE           reduce using rule 106 (empty -> .)
    FROM            reduce using rule 106 (empty -> .)
    RBRACE          reduce using rule 106 (empty -> .)
    RETURN          reduce using rule 106 (empty -> .)

    condition_aux_3                shift and go to state 235
    empty                          shift and go to state 238

state 231

    (79) while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .

    ASSIGN          reduce using rule 79 (while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    CALL            reduce using rule 79 (while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    READ            reduce using rule 79 (while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    WRITE           reduce using rule 79 (while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    IF              reduce using rule 79 (while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    WHILE           reduce using rule 79 (while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    FROM            reduce using rule 79 (while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    RBRACE          reduce using rule 79 (while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    RETURN          reduce using rule 79 (while -> WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)


state 232

    (80) for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN . DO LBRACE statutes_aux RBRACE

    DO              shift and go to state 239


state 233

    (43) body -> LBRACE dec_vars statutes_aux RETURN ID . SEMICOLON RBRACE

    SEMICOLON       shift and go to state 240


state 234

    (42) body -> LBRACE statutes_aux RETURN ID SEMICOLON . RBRACE

    RBRACE          shift and go to state 241


state 235

    (68) condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .

    ASSIGN          reduce using rule 68 (condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .)
    CALL            reduce using rule 68 (condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .)
    READ            reduce using rule 68 (condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .)
    WRITE           reduce using rule 68 (condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .)
    IF              reduce using rule 68 (condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .)
    WHILE           reduce using rule 68 (condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .)
    FROM            reduce using rule 68 (condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .)
    RBRACE          reduce using rule 68 (condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .)
    RETURN          reduce using rule 68 (condition_aux -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3 .)


state 236

    (70) condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF . condition_aux
    (68) condition_aux -> . LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE condition_aux_3
    (69) condition_aux -> . condition_aux_2
    (70) condition_aux_2 -> . LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux

    LPAREN          shift and go to state 92

    condition_aux                  shift and go to state 242
    condition_aux_2                shift and go to state 93

state 237

    (71) condition_aux_3 -> ELSE . LBRACE statutes_aux RBRACE

    LBRACE          shift and go to state 243


state 238

    (72) condition_aux_3 -> empty .

    ASSIGN          reduce using rule 72 (condition_aux_3 -> empty .)
    CALL            reduce using rule 72 (condition_aux_3 -> empty .)
    READ            reduce using rule 72 (condition_aux_3 -> empty .)
    WRITE           reduce using rule 72 (condition_aux_3 -> empty .)
    IF              reduce using rule 72 (condition_aux_3 -> empty .)
    WHILE           reduce using rule 72 (condition_aux_3 -> empty .)
    FROM            reduce using rule 72 (condition_aux_3 -> empty .)
    RBRACE          reduce using rule 72 (condition_aux_3 -> empty .)
    RETURN          reduce using rule 72 (condition_aux_3 -> empty .)


state 239

    (80) for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO . LBRACE statutes_aux RBRACE

    LBRACE          shift and go to state 244


state 240

    (43) body -> LBRACE dec_vars statutes_aux RETURN ID SEMICOLON . RBRACE

    RBRACE          shift and go to state 245


state 241

    (42) body -> LBRACE statutes_aux RETURN ID SEMICOLON RBRACE .

    FUNCT           reduce using rule 42 (body -> LBRACE statutes_aux RETURN ID SEMICOLON RBRACE .)
    RBRACE          reduce using rule 42 (body -> LBRACE statutes_aux RETURN ID SEMICOLON RBRACE .)
    MAIN            reduce using rule 42 (body -> LBRACE statutes_aux RETURN ID SEMICOLON RBRACE .)


state 242

    (70) condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .

    ASSIGN          reduce using rule 70 (condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .)
    CALL            reduce using rule 70 (condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .)
    READ            reduce using rule 70 (condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .)
    WRITE           reduce using rule 70 (condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .)
    IF              reduce using rule 70 (condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .)
    WHILE           reduce using rule 70 (condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .)
    FROM            reduce using rule 70 (condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .)
    RBRACE          reduce using rule 70 (condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .)
    RETURN          reduce using rule 70 (condition_aux_2 -> LPAREN exp RPAREN THEN LBRACE statutes_aux RBRACE ELIF condition_aux .)


state 243

    (71) condition_aux_3 -> ELSE LBRACE . statutes_aux RBRACE
    (51) statutes_aux -> . statutes
    (52) statutes_aux -> . statutes statutes_aux
    (44) statutes -> . ASSIGN assignation SEMICOLON
    (45) statutes -> . CALL call SEMICOLON
    (46) statutes -> . read
    (47) statutes -> . write
    (48) statutes -> . condition
    (49) statutes -> . while
    (50) statutes -> . for
    (73) read -> . READ LPAREN var RPAREN SEMICOLON
    (74) write -> . WRITE LPAREN write_aux RPAREN SEMICOLON
    (67) condition -> . IF condition_aux
    (79) while -> . WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (80) for -> . FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    ASSIGN          shift and go to state 59
    CALL            shift and go to state 60
    READ            shift and go to state 66
    WRITE           shift and go to state 67
    IF              shift and go to state 68
    WHILE           shift and go to state 69
    FROM            shift and go to state 70

    statutes_aux                   shift and go to state 246
    statutes                       shift and go to state 58
    read                           shift and go to state 61
    write                          shift and go to state 62
    condition                      shift and go to state 63
    while                          shift and go to state 64
    for                            shift and go to state 65

state 244

    (80) for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE . statutes_aux RBRACE
    (51) statutes_aux -> . statutes
    (52) statutes_aux -> . statutes statutes_aux
    (44) statutes -> . ASSIGN assignation SEMICOLON
    (45) statutes -> . CALL call SEMICOLON
    (46) statutes -> . read
    (47) statutes -> . write
    (48) statutes -> . condition
    (49) statutes -> . while
    (50) statutes -> . for
    (73) read -> . READ LPAREN var RPAREN SEMICOLON
    (74) write -> . WRITE LPAREN write_aux RPAREN SEMICOLON
    (67) condition -> . IF condition_aux
    (79) while -> . WHILE LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE
    (80) for -> . FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE

    ASSIGN          shift and go to state 59
    CALL            shift and go to state 60
    READ            shift and go to state 66
    WRITE           shift and go to state 67
    IF              shift and go to state 68
    WHILE           shift and go to state 69
    FROM            shift and go to state 70

    statutes_aux                   shift and go to state 247
    statutes                       shift and go to state 58
    read                           shift and go to state 61
    write                          shift and go to state 62
    condition                      shift and go to state 63
    while                          shift and go to state 64
    for                            shift and go to state 65

state 245

    (43) body -> LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE .

    FUNCT           reduce using rule 43 (body -> LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE .)
    RBRACE          reduce using rule 43 (body -> LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE .)
    MAIN            reduce using rule 43 (body -> LBRACE dec_vars statutes_aux RETURN ID SEMICOLON RBRACE .)


state 246

    (71) condition_aux_3 -> ELSE LBRACE statutes_aux . RBRACE

    RBRACE          shift and go to state 248


state 247

    (80) for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux . RBRACE

    RBRACE          shift and go to state 249


state 248

    (71) condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .

    ASSIGN          reduce using rule 71 (condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .)
    CALL            reduce using rule 71 (condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .)
    READ            reduce using rule 71 (condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .)
    WRITE           reduce using rule 71 (condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .)
    IF              reduce using rule 71 (condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .)
    WHILE           reduce using rule 71 (condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .)
    FROM            reduce using rule 71 (condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .)
    RBRACE          reduce using rule 71 (condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .)
    RETURN          reduce using rule 71 (condition_aux_3 -> ELSE LBRACE statutes_aux RBRACE .)


state 249

    (80) for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .

    ASSIGN          reduce using rule 80 (for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    CALL            reduce using rule 80 (for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    READ            reduce using rule 80 (for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    WRITE           reduce using rule 80 (for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    IF              reduce using rule 80 (for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    WHILE           reduce using rule 80 (for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    FROM            reduce using rule 80 (for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    RBRACE          reduce using rule 80 (for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)
    RETURN          reduce using rule 80 (for -> FROM LPAREN assignation RPAREN UNTIL LPAREN exp RPAREN DO LBRACE statutes_aux RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 130 resolved using rule (var -> ID)
WARNING: rejected rule (cte -> ID) in state 130
